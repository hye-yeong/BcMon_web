{"ast":null,"code":"import _classCallCheck from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/project/src/views/ethereum/block.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom'; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource = [];\nvar url = [\"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-block/summation/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/summation/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/average/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-uncles/summation/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-uncles/summation/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-block/total/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/total/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/total/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-transactions/total/month\", \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-uncles/total/month\"];\nvar tag = [\"value\", \"value\", \"value\", \"value\", \"value\", \"value\", \"value\", \"value\", \"value\", \"value\"];\nvar title = [\"The total of number of blocks per day\", \"The total of size of blocks per day\", \"The average of size of blocks per day\", \"The total of number of uncles per day\", \"The average number of uncles per day\", \"The accumulated value of number of blocks per day\", \"The accumulated value of size of blocks per day\", \"The accumulated value of gasUsed per day\", \"The accumulated value of number of transactions per day\", \"The accumulated value of number of uncles per day\"];\nvar caption = [];\n\nvar ethereumBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ethereumBlock, _React$Component);\n\n  function ethereumBlock(props) {\n    var _this;\n\n    _classCallCheck(this, ethereumBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ethereumBlock).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.state = {\n      bigChartData: \"data1\"\n    };\n    return _this;\n  }\n\n  _createClass(ethereumBlock, [{\n    key: \"render\",\n    value: function render() {\n      for (var i = 0; i < url.length; i++) {\n        dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n        console.log(\"임시 데이터 1 - \" + i + \" : \");\n        console.log(JSON.stringify(dataSource[i]));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Ethereum Block\"), React.createElement(\"p\", {\n        className: \"category text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \".\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/block/blocksize/sum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/block/blocksize/average\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/block/blocksize/total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/block/blocksize/total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return ethereumBlock;\n}(React.Component);\n\nexport default ethereumBlock;","map":{"version":3,"sources":["/project/src/views/ethereum/block.js"],"names":["React","Card","CardBody","Row","Col","Link","chartData","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","tag","title","caption","ethereumBlock","props","setBgChartData","name","setState","bigChartData","state","i","length","renderGraph","console","log","JSON","stringify","Component"],"mappings":";;;;;;AAAA,OAAO,yBAAP;AACA,OAAO,2BAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,EAA8BC,GAA9B,QAAyC,YAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEAL,OAAO,CAACM,MAAR,CAAeJ,YAAf,EAA6BC,MAA7B,EAAqCC,QAArC,EAA+CC,WAA/C;AACAF,MAAM,CAACD,YAAD,CAAN;AAEA,IAAIK,UAAU,GAAG,EAAjB;AACA,IAAIC,GAAG,GAAG,CACR,8EADQ,EAER,4EAFQ,EAGR,0EAHQ,EAIR,+EAJQ,EAKR,+EALQ,EAMR,0EANQ,EAOR,wEAPQ,EAQR,wEARQ,EASR,iFATQ,EAUR,2EAVQ,CAAV;AAYA,IAAIC,GAAG,GAAG,CACR,OADQ,EAER,OAFQ,EAGR,OAHQ,EAIR,OAJQ,EAKR,OALQ,EAMR,OANQ,EAOR,OAPQ,EAQR,OARQ,EASR,OATQ,EAUR,OAVQ,CAAV;AAYA,IAAIC,KAAK,GAAG,CACV,uCADU,EAEV,qCAFU,EAGV,uCAHU,EAIV,uCAJU,EAKV,sCALU,EAMV,mDANU,EAOV,iDAPU,EAQV,0CARU,EASV,yDATU,EAUV,mDAVU,CAAZ;AAYA,IAAIC,OAAO,GAAG,EAAd;;IAIMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,UAMnBC,cANmB,GAMF,UAAAC,IAAI,EAAI;AACvB,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF;AADF,OAAd;AAGD,KAVkB;;AAEjB,UAAKG,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE;AADH,KAAb;AAFiB;AAKlB;;;;6BAOQ;AACP,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGX,GAAG,CAACY,MAAvB,EAA+BD,CAAC,EAAhC,EACA;AACEZ,QAAAA,UAAU,CAACY,CAAD,CAAV,GAAgBpB,SAAS,CAACsB,WAAV,CAAsBb,GAAG,CAACW,CAAD,CAAzB,EAA8BV,GAAG,CAACU,CAAD,CAAjC,EAAsCT,KAAK,CAACS,CAAD,CAA3C,EAAgDR,OAAO,CAACQ,CAAD,CAAvD,EAA4DA,CAA5D,CAAhB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBJ,CAAhB,GAAoB,KAAhC;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAelB,UAAU,CAACY,CAAD,CAAzB,CAAZ;AACD;;AAED,aACE,0CACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,EAME;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,oCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,iBAAD;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,SAAS,EAAG,SAFlB;AAGM,QAAA,KAAK,EAAC,MAHZ;AAIM,QAAA,MAAM,EAAC,KAJb;AAKM,QAAA,UAAU,EAAC,MALjB;AAMM,QAAA,UAAU,EAAEZ,UAAU,CAAC,CAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF,CADF,CADA,CADF,CADF,EAmBE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,wCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,iBAAD;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,SAAS,EAAG,SAFlB;AAGM,QAAA,KAAK,EAAC,MAHZ;AAIM,QAAA,MAAM,EAAC,KAJb;AAKM,QAAA,UAAU,EAAC,MALjB;AAMM,QAAA,UAAU,EAAEA,UAAU,CAAC,CAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,CADF,CADA,CADF,CAnBF,EAqCE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,sCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,iBAAD;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,SAAS,EAAG,SAFlB;AAGM,QAAA,KAAK,EAAC,MAHZ;AAIM,QAAA,MAAM,EAAC,KAJb;AAKM,QAAA,UAAU,EAAC,MALjB;AAMM,QAAA,UAAU,EAAEA,UAAU,CAAC,CAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,CADF,CADA,CADF,CArCF,CADF,EAyDE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,sCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,iBAAD;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,SAAS,EAAG,SAFlB;AAGM,QAAA,KAAK,EAAC,MAHZ;AAIM,QAAA,MAAM,EAAC,KAJb;AAKM,QAAA,UAAU,EAAC,MALjB;AAMM,QAAA,UAAU,EAAEA,UAAU,CAAC,CAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,CADF,CADA,CADF,CADF,CAzDF,CANF,CADF,CADF;AAyFD;;;;EA9GyBd,KAAK,CAACiC,S;;AAiHlC,eAAed,aAAf","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource = [];\nlet url = [\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-block/summation/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/summation/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/average/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-uncles/summation/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-uncles/summation/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-block/total/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/total/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/size-of-block/total/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-transactions/total/month\",\n  \"http://bcmon.kmu.ac.kr/bitcoin/ethereum/data/number-of-uncles/total/month\"\n];\nvar tag = [\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\"\n];\nvar title = [\n  \"The total of number of blocks per day\",\n  \"The total of size of blocks per day\",\n  \"The average of size of blocks per day\",\n  \"The total of number of uncles per day\",\n  \"The average number of uncles per day\",\n  \"The accumulated value of number of blocks per day\",\n  \"The accumulated value of size of blocks per day\",\n  \"The accumulated value of gasUsed per day\",\n  \"The accumulated value of number of transactions per day\",\n  \"The accumulated value of number of uncles per day\"\t\n];\nvar caption = [\n\n];\n\nclass ethereumBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\"\n    };\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n\n  render() {\n    for(var i = 0; i < url.length; i++)\n    {\n      dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n      console.log(\"임시 데이터 1 - \" + i + \" : \");\n      console.log(JSON.stringify(dataSource[i]));\n    }\n\n    return (\n      <>\n        <div className=\"content\">\n        <h2 className=\"text-center\">Ethereum Block</h2>\n        <p className=\"category text-center\">\n          .\n        </p>\n\n          <div className=\"content\">\n            <Row>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                <Link to={\"/admin/bitcoin/block/blocksize/sum\"}>\n                  <CardBody>\n                    <div className=\"chart-area\">\n                    <ReactFusioncharts\n                          type=\"line\"\n                          className = \"mychart\"\n                          width=\"100%\"\n                          height=\"300\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[0]}\n                        />\n                    </div>\n                  </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                <Link to={\"/admin/bitcoin/block/blocksize/average\"}>\n                  <CardBody>\n                  <div className=\"chart-area\">\n                  <ReactFusioncharts\n                        type=\"line\"\n                        className = \"fc-line\"\n                        width=\"100%\"\n                        height=\"300\"\n                        dataFormat=\"JSON\"\n                        dataSource={dataSource[1]}\n                      />\n                  </div>\n                  </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                <Link to={\"/admin/bitcoin/block/blocksize/total\"}>\n                  <CardBody>\n                  <div className=\"chart-area\">\n                  <ReactFusioncharts\n                        type=\"line\"\n                        className = \"fc-line\"\n                        width=\"100%\"\n                        height=\"300\"\n                        dataFormat=\"JSON\"\n                        dataSource={dataSource[2]}\n                      />\n                  </div>\n                  </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n            </Row>\n            <Row>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                <Link to={\"/admin/bitcoin/block/blocksize/total\"}>\n                  <CardBody>\n                  <div className=\"chart-area\">\n                  <ReactFusioncharts\n                        type=\"line\"\n                        className = \"fc-line\"\n                        width=\"100%\"\n                        height=\"300\"\n                        dataFormat=\"JSON\"\n                        dataSource={dataSource[3]}\n                      />\n                  </div>\n                  </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ethereumBlock;\n"]},"metadata":{},"sourceType":"module"}