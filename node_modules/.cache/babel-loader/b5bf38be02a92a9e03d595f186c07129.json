{"ast":null,"code":"import _classCallCheck from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/frontend/src/views/bitcoin/network.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom'; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../variables/charts_month.js\";\nimport chartData_multi from \"../../variables/charts_multipleMonth.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource = [];\nvar url = [\"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/number-of-unique-address/sum/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/number-of-unique-address/accumulated/month\"];\nvar tag = [\"value\", \"value\"];\nvar title = [\"Total\", \"Cumulative\"];\nvar caption = [\"The total number of unique addresses per day. Unique address is a newly added address that is not in previous blocks.\", \"The cumulative value of number of unique addresses per day. Unique address is a newly added address that is not in previous blocks.\"]; //\n\nvar MdataSource = [];\nvar Murl = [\"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/tcp-segment/sum/month\"];\nvar Mitag = [\"in_value\"];\nvar Motag = [\"out_vlaue\"];\nvar Mtitle = [\"TCP\"];\nvar Mcaption = [\"The total number of unique addresses per day. Unique address is a newly added address that is not in previous blocks.\"];\n\nvar bitcoinNetwork =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(bitcoinNetwork, _React$Component);\n\n  function bitcoinNetwork() {\n    _classCallCheck(this, bitcoinNetwork);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(bitcoinNetwork).apply(this, arguments));\n  }\n\n  _createClass(bitcoinNetwork, [{\n    key: \"render\",\n    value: function render() {\n      for (var i = 0; i < url.length; i++) {\n        dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i]);\n        console.log(\"임시 데이터 1 - \" + i + \" : \");\n        console.log(JSON.stringify(dataSource[i]));\n      }\n\n      for (var index = 0; index < Murl.length; index++) {\n        MdataSource[index] = chartData_multi.multipleRenderGraph(Murl[index], Mitag[index], Motag[index], Mtitle[index], Mcaption[index]);\n        console.log(\"임시 데이터 1 - \" + index + \" : \");\n        console.log(JSON.stringify(MdataSource[index]));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Bitcoin Network\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-firstoutline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Number of unique addresses\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/network/number-of-unique-address/total/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/network/number-of-unique-address/cumulative/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/network/number-of-unique-address/cumulative/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"zoomline\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: MdataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })))))))))));\n    }\n  }]);\n\n  return bitcoinNetwork;\n}(React.Component);\n\nexport default bitcoinNetwork;","map":{"version":3,"sources":["/frontend/src/views/bitcoin/network.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Row","Col","Link","chartData","chartData_multi","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","tag","title","caption","MdataSource","Murl","Mitag","Motag","Mtitle","Mcaption","bitcoinNetwork","i","length","renderGraph","console","log","JSON","stringify","index","multipleRenderGraph","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../variables/charts_month.js\";\nimport chartData_multi from \"../../variables/charts_multipleMonth.js\"\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource = [];\nlet url = [\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/number-of-unique-address/sum/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/number-of-unique-address/accumulated/month\"\n];\nvar tag = [\n  \"value\",\n  \"value\"\n];\nvar title = [\n  \"Total\",\n  \"Cumulative\"\n];\nvar caption = [\n  \"The total number of unique addresses per day. Unique address is a newly added address that is not in previous blocks.\",\n  \"The cumulative value of number of unique addresses per day. Unique address is a newly added address that is not in previous blocks.\"\n];\n//\nlet MdataSource = [];\nlet Murl = [\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/tcp-segment/sum/month\",\n];\nvar Mitag = [\n  \"in_value\",\n];\nvar Motag = [\n  \"out_vlaue\",\n];\nvar Mtitle = [\n  \"TCP\",\n];\nvar Mcaption = [\n  \"The total number of unique addresses per day. Unique address is a newly added address that is not in previous blocks.\",\n];\n\nclass bitcoinNetwork extends React.Component {\nrender() {\n    for(var i = 0; i < url.length; i++)\n      {\n        dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], );\n        console.log(\"임시 데이터 1 - \" + i + \" : \");\n        console.log(JSON.stringify(dataSource[i]));\n      }\n\n    for(var index = 0; index < Murl.length; index++)\n      {\n        MdataSource[index] = chartData_multi.multipleRenderGraph(Murl[index], Mitag[index], Motag[index], Mtitle[index],  Mcaption[index]);\n        console.log(\"임시 데이터 1 - \" + index + \" : \");\n        console.log(JSON.stringify(MdataSource[index]));\n      }\n\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Bitcoin Network</h2>\n          <div className=\"content\">\n            <Card className=\"card-firstoutline\">\n              <CardHeader>\n                <CardTitle>\n                  <h3>Number of unique addresses</h3>\n                </CardTitle>\n              </CardHeader>\n              <Row>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\" >\n                    <Link to={\"/admin/bitcoin/network/number-of-unique-address/total/year\"}>\n                      <CardBody>\n                        <div className=\"card-area\">\n                          <ReactFusioncharts\n                            type=\"line\"\n                            className = \"mychart\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={dataSource[0]}\n                          />\n                        </div>\n                      </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\" >\n                    <Link to={\"/admin/bitcoin/network/number-of-unique-address/cumulative/year\"}>\n                      <CardBody>\n                        <div className=\"chart-area\">\n                          <ReactFusioncharts\n                            type=\"line\"\n                            className = \"mychart\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={dataSource[1]}\n                          />\n                        </div>\n                      </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\" >\n                    <Link to={\"/admin/bitcoin/network/number-of-unique-address/cumulative/year\"}>\n                      <CardBody>\n                        <div className=\"chart-area\">\n                          <ReactFusioncharts\n                            type=\"zoomline\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={MdataSource[0]}\n                          />\n                        </div>\n                      </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default bitcoinNetwork;\n"]},"metadata":{},"sourceType":"module"}