{"ast":null,"code":"import _classCallCheck from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/frontend/src/views/bitcoin/transaction.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom'; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource = [];\nvar url = [];\nvar tag = [];\nvar title = [];\nvar caption = [];\n\nvar bitcoinTx =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(bitcoinTx, _React$Component);\n\n  function bitcoinTx(props) {\n    var _this;\n\n    _classCallCheck(this, bitcoinTx);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(bitcoinTx).call(this, props));\n\n    _this.setBgChartData = function (name1, name2) {\n      _this.setState({\n        bigChartData: name1,\n        mean: name2\n      });\n    };\n\n    _this.state = {\n      bigChartData: \"data1\",\n      //mean은 그래프 당 의미가 하나 밖에 없을 때는 사용하지 말것.\n      mean: \"Sum of Tx\"\n    };\n    return _this;\n  } // 버튼 사용시 사용하는 생성자\n\n\n  _createClass(bitcoinTx, [{\n    key: \"render\",\n    value: function render() {\n      for (var i = 0; i < url.length; i++) {\n        dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n        console.log(\"임시 데이터 1 - \" + i + \" : \");\n        console.log(JSON.stringify(dataSource[i]));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Bitcoin Transaction\"), React.createElement(\"p\", {\n        className: \"category text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \".\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title pl-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Number of Transaction\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/transaction/number-of-transaction/sum/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        classNameBitcoin: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/transaction/number-of-transaction/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-area2d\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/transaction/number-of-transaction/total/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/transaction/number-of-transaction/sum/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        classNameBitcoin: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return bitcoinTx;\n}(React.Component);\n\nexport default bitcoinTx;","map":{"version":3,"sources":["/frontend/src/views/bitcoin/transaction.js"],"names":["React","Card","CardBody","Row","Col","Link","chartData","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","tag","title","caption","bitcoinTx","props","setBgChartData","name1","name2","setState","bigChartData","mean","state","i","length","renderGraph","console","log","JSON","stringify","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource = [];\nlet url = [\n\n];\nvar tag = [\n\n];\nvar title = [\n\n];\nvar caption = [\n\n];\n\nclass bitcoinTx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n      //mean은 그래프 당 의미가 하나 밖에 없을 때는 사용하지 말것.\n      mean:\"Sum of Tx\"\n    };\n  }\n  // 버튼 사용시 사용하는 생성자\n  setBgChartData = (name1, name2) => {\n    this.setState({\n      bigChartData: name1,\n      mean: name2\n    });\n  };\n\n  render() {\n  for(var i = 0; i < url.length; i++)\n  {\n    dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n    console.log(\"임시 데이터 1 - \" + i + \" : \");\n    console.log(JSON.stringify(dataSource[i]));\n  }\n\n    return (\n      <>\n        <div className=\"content\">\n        <h2 className=\"text-center\">Bitcoin Transaction</h2>\n        <p className=\"category text-center\">\n          .\n        </p>\n\n          <div className=\"content\">\n            <h4 className=\"title pl-6\">\n              <small>Number of Transaction</small>\n            </h4>\n            <Row>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                  <Link to={\"/admin/bitcoin/transaction/number-of-transaction/sum/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                          type=\"line\"\n                          classNameBitcoin  = \"mychart\"\n                          width=\"100%\"\n                          height=\"300\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[0]}\n                        />\n                      </div>\n                    </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                  <Link to={\"/admin/bitcoin/transaction/number-of-transaction/average/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\">\n                        <ReactFusioncharts\n                          type=\"line\"\n                          className = \"fc-area2d\"\n                          width=\"100%\"\n                          height=\"300\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[1]}\n                        />\n                      </div>\n                    </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                  <Link to={\"/admin/bitcoin/transaction/number-of-transaction/total/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                          type=\"line\"\n                          className = \"mychart\"\n                          width=\"100%\"\n                          height=\"300\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[2]}\n                        />\n                      </div>\n                    </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n            </Row>\n            <Row>\n              <Col lg=\"4\">\n                <Card className=\"card-chart2\">\n                  <Link to={\"/admin/bitcoin/transaction/number-of-transaction/sum/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                          type=\"line\"\n                          classNameBitcoin  = \"mychart\"\n                          width=\"100%\"\n                          height=\"300\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[0]}\n                        />\n                      </div>\n                    </CardBody>\n                  </Link>\n                </Card>\n              </Col>\n            </Row>              \n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\n\n\nexport default bitcoinTx;\n"]},"metadata":{},"sourceType":"module"}