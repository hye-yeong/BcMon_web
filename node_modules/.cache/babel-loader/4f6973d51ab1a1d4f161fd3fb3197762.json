{"ast":null,"code":"import _classCallCheck from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/project/src/views/advanced_analysis/management/block_propagation.js\";\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Card, CardHeader, CardTitle, CardBody, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nimport SortingTable from \"../../../components/SortingTable/SortingTable.js\"; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chart_totalData from \"../../../variables/charts_cmpBlock.js\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nvar dataSource = [];\nvar dataInfo = \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/advanced-analysis/cmpctblock_received_time\";\nvar tag = \"received_time\";\nvar title = \"Time receive Compac Block\";\nvar caption = \"Time to receive the compact block of a single connected node\";\ncharts(FusionCharts);\n\nvar cmpBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(cmpBlock, _React$Component);\n\n  var _super = _createSuper(cmpBlock);\n\n  function cmpBlock() {\n    _classCallCheck(this, cmpBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(cmpBlock, [{\n    key: \"render\",\n    value: function render() {\n      dataSource[0] = chart_totalData.renderZoomChart(dataInfo, tag, title, caption);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"Management\"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        tag: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"tim-icons icon-chart-bar-32 text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactFusioncharts, {\n        type: \"zoomline\",\n        width: \"100%\",\n        height: \"500\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      })))))), /*#__PURE__*/React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"Detailed description\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SortingTable, {\n        thead: [],\n        tbody: [{\n          data: [{\n            className: \"text-center\",\n            text: \"수집 정보\"\n          }, {\n            text: \"received cmpctblock time(startTime), partially downloaded block's hash, sucessfully reconstructed block time(endTime), information of cmpctblock\"\n          }]\n        }, {\n          data: [{\n            className: \"text-center\",\n            text: \"수집 방법\"\n          }, {\n            text: \"총 2개의 노드(Node1, Node2)로 구성\"\n          }]\n        }, {\n          data: [{\n            className: \"text-center\",\n            text: \"분석 방법\"\n          }, {\n            text: \"endTIme - startTme = reveiveTime\"\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"cmpctblock(compact block)\", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 50\n        }\n      }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"\\uC555\\uCD95 \\uBE14\\uB85D \\uC804\\uB2EC \\uBC29\\uC2DD(BIP152 \\u2013 CBR : Compact Block Relay)\\uC744 \\uC774\\uC6A9\\uD55C \\uBE14\\uB85D\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \"CBR\\uC740 \\uBE44\\uD2B8\\uCF54\\uC778 P2P \\uB124\\uD2B8\\uC6CC\\uD06C\\uC758 \\uD480\\uB178\\uB4DC\\uAC00 \\uC0C8\\uB85C\\uC6B4 \\uBE14\\uB85D\\uC744 \\uC804\\uB2EC\\uD560 \\uB54C \\uC0AC\\uC6A9\\uD558\\uB294 \\uB300\\uC5ED\\uD3ED\\uC744 \\uC808\\uC57D\\uD558\\uB294 \\uBC29\\uBC95\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"\\uBE14\\uB85D \\uC804\\uB2EC \\uC2DC, \\uBE14\\uB85D \\uD5E4\\uB354 + \\uD2B8\\uB79C\\uC7AD\\uC158\\uC758 \\uB2E8\\uCD95\\uB41C \\uD574\\uC2DC ID \\uB9CC \\uC804\\uC1A1 \\uD558\\uC5EC \\uC808\\uC57D\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, \"cmpctblock\\uC744 \\uBC1B\\uC740 \\uD6C4 \\uB178\\uB4DC\\uB294 cmpctblock\\uC758 \\uC815\\uBCF4\\uB97C \\uC774\\uC6A9\\uD558\\uC5EC, \\uC790\\uC2E0\\uC758 mempool \\uC5D0\\uC11C transaction\\uC744 \\uAC00\\uC838\\uC640 cmpctblock\\uC744 \\uC644\\uC804\\uD55C block\\uC73C\\uB85C \\uC7AC\\uC870\\uB9BD.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }\n      }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC9D1 \\uC815\\uBCF4 \\uC0C1\\uC138 \\uC124\\uBA85\", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 36\n        }\n      }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, \"received cmpctblock time : cmpctblock\\uC744 \\uBC1B\\uC740 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \"partially downloaded block'' hash : mempool\\uC5D0\\uC11C transaction\\uC744 \\uAC00\\uC838\\uC640 \\uBC1B\\uC744 \\uB54C, \\uC5B4\\uB5A4 \\uBE14\\uB85D\\uC778\\uC9C0 hash\\uB85C \\uD45C\\uD604\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \"sucessfully reconstructed block time : cmpctblock\\uC774 \\uC644\\uC804\\uD55C block\\uC73C\\uB85C \\uC7AC\\uC870\\uB9BD\\uB41C \\uC2DC\\uAC04. (cmpctblock\\uC774 \\uC644\\uC131\\uB41C \\uC2DC\\uAC04)\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"information of cmpctblock : UpdateTip \\uB85C\\uADF8. hash, height, version, log2_work, date, progress, cache\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uD3EC\\uD568\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, \"** Hash(Block Hash/\\uBE14\\uB85D \\uD574\\uC2DC) : \\uAE30\\uBCF8\\uC801\\uC73C\\uB85C \\uBE14\\uB85D\\uCCB4\\uC778\\uC758 \\uBE14\\uB85D\\uC5D0 \\uB300\\uD55C \\uCC38\\uC870 \\uBC88\\uD638\\uB85C, SHA256\\uC744 \\uD1B5\\uD574 \\uBE14\\uB85D \\uD5E4\\uB354\\uB97C \\uB450 \\uBC88 hashing\\uD558\\uC5EC \\uC5BB\\uC74C\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, \"** Mempool(\\uBA64\\uD480) : \\uB178\\uB4DC\\uC5D0 \\uC758\\uD574 \\uAC80\\uC99D\\uB418\\uC9C0 \\uC54A\\uC740(\\uBE14\\uB85D\\uC5D0 \\uC544\\uC9C1 \\uD3EC\\uD568\\uB418\\uC9C0 \\uBABB\\uD55C) transaction\\uB4E4 \\uC774 \\uC800\\uC7A5 \\uB418\\uB294 \\uACF5\\uAC04\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"** Transaction(\\uD2B8\\uB79C\\uC7AD\\uC158): \\uBE44\\uD2B8\\uCF54\\uC778 \\uB124\\uD2B8\\uC6CC\\uD06C\\uC5D0\\uC11C \\uBE44\\uD2B8\\uCF54\\uC778 \\uAC70\\uB798\\uB97C \\uD45C\\uD604\\uD558\\uAE30 \\uC704\\uD55C \\uB370\\uC774\\uD130 \\uAD6C\\uC870(\\uAC70\\uB798 \\uB0B4\\uC5ED\\uC73C\\uB85C \\uC0DD\\uAC01\\uD560 \\uC218 \\uC788\\uC74C), \\uBE44\\uD2B8\\uCF54\\uC778 \\uB124\\uD2B8\\uC6CC\\uD06C\\uB97C \\uD1B5\\uD574\\uC11C \\uC5F0\\uACB0\\uB41C \\uD53C\\uC5B4(peer) \\uB178\\uB4DC\\uB4E4\\uC5D0\\uAC8C \\uC804\\uD30C\\uB418\\uBA70, \\uBE14\\uB85D\\uCCB4\\uC778 \\uB0B4\\uC5D0 \\uC601\\uAD6C\\uC801\\uC73C\\uB85C \\uBCF4\\uAD00\\uB418\\uC5B4\\uC9D0\")))))));\n    }\n  }]);\n\n  return cmpBlock;\n}(React.Component);\n\nexport default cmpBlock;","map":{"version":3,"sources":["/project/src/views/advanced_analysis/management/block_propagation.js"],"names":["React","classNames","Card","CardHeader","CardTitle","CardBody","Button","ButtonGroup","Row","Col","SortingTable","chart_totalData","ReactFusioncharts","FusionCharts","charts","dataSource","dataInfo","tag","title","caption","cmpBlock","renderZoomChart","size","offset","data","className","text","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport { Card, CardHeader, CardTitle, CardBody, Button, ButtonGroup,Row, Col } from \"reactstrap\";\nimport SortingTable from \"../../../components/SortingTable/SortingTable.js\";\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chart_totalData from \"../../../variables/charts_cmpBlock.js\"\n\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\n\nlet dataSource = [];\nlet dataInfo = \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/advanced-analysis/cmpctblock_received_time\"\nvar tag = \"received_time\"\nvar title = \"Time receive Compac Block\"\nvar caption = \"Time to receive the compact block of a single connected node\"\n\ncharts(FusionCharts);\n\nclass cmpBlock extends React.Component {\n  render() {\n    dataSource[0] = chart_totalData.renderZoomChart(dataInfo, tag, title, caption);\n\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Management</h2>\n          <Row>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h3\">\n                    <i className=\"tim-icons icon-chart-bar-32 text-primary\" />{\" \"}\n                    <div className=\"chart-area\">\n                      <ReactFusioncharts\n                          type=\"zoomline\"\n                          width=\"100%\"\n                          height=\"500\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[0]}\n                        />\n                    </div>\n                  </CardTitle>\n                </CardHeader>\n              </Card>\n            </Col>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    <h4>Detailed description</h4>\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <SortingTable\n                    thead={[]}\n                    tbody={[\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"수집 정보\" },\n                          { text: \"received cmpctblock time(startTime), partially downloaded block's hash, sucessfully reconstructed block time(endTime), information of cmpctblock\" },\n                        ]\n                      },\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"수집 방법\" },\n                          { text: \"총 2개의 노드(Node1, Node2)로 구성\"},\n                        ]\n                      },\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"분석 방법\" },\n                          { text: \"endTIme - startTme = reveiveTime\" },\n                        ]\n                      },\n                    ]}\n                  />\n                  <ul>\n                    <li>cmpctblock(compact block)<p>&nbsp;</p>\n                      <ul>\n                        <li>압축 블록 전달 방식(BIP152 – CBR : Compact Block Relay)을 이용한 블록</li>\n                        <li>CBR은 비트코인 P2P 네트워크의 풀노드가 새로운 블록을 전달할 때 사용하는 대역폭을 절약하는 방법</li>\n                        <li>블록 전달 시, 블록 헤더 + 트랜잭션의 단축된 해시 ID 만 전송 하여 절약</li>\n                        <li>cmpctblock을 받은 후 노드는 cmpctblock의 정보를 이용하여, 자신의 mempool 에서 transaction을 가져와 cmpctblock을 완전한 block으로 재조립.</li>\n                      <p>&nbsp;</p><p>&nbsp;</p>\n                      </ul>\n                    </li>\n                    <li>수집 정보 상세 설명<p>&nbsp;</p>\n                      <ul>\n                        <li>received cmpctblock time : cmpctblock을 받은 시간</li>\n                        <li>partially downloaded block'' hash : mempool에서 transaction을 가져와 받을 때, 어떤 블록인지 hash로 표현</li>\n                        <li>sucessfully reconstructed block time : cmpctblock이 완전한 block으로 재조립된 시간. (cmpctblock이 완성된 시간)</li>\n                        <li>information of cmpctblock : UpdateTip 로그. hash, height, version, log2_work, date, progress, cache의 데이터를 포함</li>\n                      </ul>\n                    </li>\n                  </ul>\n                  <p>** Hash(Block Hash/블록 해시) : 기본적으로 블록체인의 블록에 대한 참조 번호로, SHA256을 통해 블록 헤더를 두 번 hashing하여 얻음</p>\n                  <p>** Mempool(멤풀) : 노드에 의해 검증되지 않은(블록에 아직 포함되지 못한) transaction들 이 저장 되는 공간</p>\n                  <p>** Transaction(트랜잭션): 비트코인 네트워크에서 비트코인 거래를 표현하기 위한 데이터 구조(거래 내역으로 생각할 수 있음), 비트코인 네트워크를 통해서 연결된 피어(peer) 노드들에게 전파되며, 블록체인 내에 영구적으로 보관되어짐</p>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default cmpBlock;\n"]},"metadata":{},"sourceType":"module"}