{"ast":null,"code":"import _classCallCheck from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/frontend/src/views/bitcoin/network/interface-bytes/sum.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Card, CardHeader, CardTitle, CardBody, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nimport SortingTable from \"../../../../components/SortingTable/SortingTable.js\"; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../../../variables/charts_multipleline.js\";\nimport chart_totalData from \"../../../../variables/charts_multipleline_total.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource = [];\nvar url = [\"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/interface-bytes/day\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/interface-bytes/year\"];\nvar in_value = \"in_value\";\nvar out_value = \"out_value\";\nvar title = \"Interface bytes\";\nvar caption = \"The total number of octets(byte) received / transmitted out on the interface.\";\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nvar interfacebytes_sum =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(interfacebytes_sum, _React$Component);\n\n  function interfacebytes_sum(props) {\n    var _this;\n\n    _classCallCheck(this, interfacebytes_sum);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(interfacebytes_sum).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.state = {\n      bigChartData: \"0\"\n    };\n    return _this;\n  }\n\n  _createClass(interfacebytes_sum, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      dataSource[0] = chart_totalData.renderZoomChart(url[0], in_value, out_value, title, caption);\n      dataSource[1] = chartData.renderZoomChart(url[1], in_value, out_value, title, caption);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Network\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Col, {\n        xm: \"14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        id: \"0\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"0\"\n        }),\n        onClick: function onClick() {\n          return _this2.setBgChartData(\"0\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        defaultChecked: true,\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"All Time\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"1\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"1\"\n        }),\n        onClick: function onClick() {\n          return _this2.setBgChartData(\"1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"1 year\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-gift-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))))), React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-chart-bar-32 text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"zoomline\",\n        width: \"100%\",\n        height: \"500\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[this.state.bigChartData],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Detailed description\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(SortingTable, {\n        thead: [],\n        tbody: [{\n          data: [{\n            className: \"text-center\",\n            text: \"수집 정보\"\n          }, {\n            text: \"SNMP ifInOctets(수신 옥테트|옥텟 수), ifOutOctets(전송 된 옥테트|옥텟 수)\"\n          }]\n        }, {\n          data: [{\n            className: \"text-center\",\n            text: \"수집 방법\"\n          }, {\n            text: \"비트코인 노드가 설치된 서버: SNMP interface에서 20초 간격으로 ifInOctets(수신 옥테트|옥텟 수), ifOutOctets(전송 된 옥테트|옥텟 수) data 수집\"\n          }]\n        }, {\n          data: [{\n            className: \"text-center\",\n            text: \"분석 방법\"\n          }, {\n            text: \"당일 ifInOctets 총 합, 당일 ifOutOctets 총 합\"\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"SNMP(Simple Network Management Protocol): TCP/IP\\uAE30\\uBC18 \\uB124\\uD2B8\\uC6CC\\uD06C\\uC0C1\\uC758 \\uAC01 \\uD638\\uC2A4\\uD2B8\\uB85C\\uBD80\\uD130 \\uC815\\uAE30\\uC801\\uC73C\\uB85C \\uC5EC\\uB7EC \\uAD00\\uB9AC \\uC815\\uBCF4\\uB97C \\uC790\\uB3D9\\uC73C\\uB85C \\uC218\\uC9D1\\uD558\\uAC70\\uB098 \\uC2E4\\uC2DC\\uAC04\\uC73C\\uB85C \\uC0C1\\uD0DC\\uB97C \\uBAA8\\uB2C8\\uD130\\uB9C1 \\uBC0F \\uC124\\uC815\\uD560 \\uC218 \\uC788\\uB294 \\uC11C\\uBE44\\uC2A4\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), \"SNMP\\uB97C \\uD65C\\uC6A9\\uD558\\uC5EC \\uC2E4\\uC81C \\uB124\\uD2B8\\uC6CC\\uD06C \\uAD00\\uB9AC \\uC815\\uBCF4\\uB97C \\uC5BB\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uB124\\uD2B8\\uC6CC\\uD06C \\uC7A5\\uBE44 \\uBC0F \\uC11C\\uBC84\\uC5D0 \\uC124\\uCE58\\uB418\\uC5B4 \\uC788\\uC5B4\\uC57C \\uD568\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Octets(\\uC625\\uD14C\\uD2B8|\\uC625\\uD15F): \\uC774\\uC9C4\\uC218 32\\uC790\\uB9AC\\uB85C \\uAD6C\\uC131\\uB41C IP\\uC8FC\\uC18C\\uB97C 8\\uC790\\uB9AC\\uB9C8\\uB2E4 \\uC810\\uC744 \\uCC0D\\uACE0 \\uC774\\uB4E4\\uC744 \\uC625\\uD14C\\uD2B8\\uB77C\\uACE0 \\uBD80\\uB978\\uB2E4. (  1 oct = 1 bit  )\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"ifInOctets: SNMP Interface\\uC5D0 \\uC218\\uC2E0\\uB41C \\uC625\\uD14C\\uD2B8(Octets)\\uC758 \\uCD1D \\uAC1C\\uC218\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"ifOutOctets: SNMP Interface\\uB97C \\uBC97\\uC5B4\\uB098\\uC11C \\uC804\\uC1A1\\uB418\\uB294 \\uCD1D \\uC625\\uD14C\\uD2B8(Octets) \\uAC1C\\uC218\"))))))));\n    }\n  }]);\n\n  return interfacebytes_sum;\n}(React.Component);\n\nexport default interfacebytes_sum;","map":{"version":3,"sources":["/frontend/src/views/bitcoin/network/interface-bytes/sum.js"],"names":["React","classNames","Card","CardHeader","CardTitle","CardBody","Button","ButtonGroup","Row","Col","SortingTable","chartData","chart_totalData","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","in_value","out_value","title","caption","interfacebytes_sum","props","setBgChartData","name","setState","bigChartData","state","renderZoomChart","size","offset","active","data","className","text","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport classNames from \"classnames\";\n// reactstrap components\nimport { Card, CardHeader, CardTitle, CardBody, Button, ButtonGroup,Row, Col } from \"reactstrap\";\nimport SortingTable from \"../../../../components/SortingTable/SortingTable.js\";\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../../../variables/charts_multipleline.js\";\nimport chart_totalData from \"../../../../variables/charts_multipleline_total.js\"\n\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource=[];\nlet url = [\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/interface-bytes/day\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/network/interface-bytes/year\"\n];\nvar in_value = \"in_value\";\nvar out_value = \"out_value\"\nvar title = \"Interface bytes\";\nvar caption = \"The total number of octets(byte) received / transmitted out on the interface.\";\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nclass interfacebytes_sum extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"0\"\n    };\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n\n  render() {\n    dataSource[0] = chart_totalData.renderZoomChart(url[0], in_value, out_value, title, caption);\n    dataSource[1] = chartData.renderZoomChart(url[1], in_value, out_value, title, caption);\n\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Network</h2>\n          <Row>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Col className=\"text-left\" sm=\"12\">\n                  </Col>\n                  <Col xm=\"14\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: this.state.bigChartData === \"0\"\n                        })}\n                        onClick={() => this.setBgChartData(\"0\")}\n                      >\n                        <input defaultChecked name=\"options\" type=\"radio\" />\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          All Time\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: this.state.bigChartData === \"1\"\n                        })}\n                        onClick={() => this.setBgChartData(\"1\")}\n                      >\n                        <input name=\"options\" type=\"radio\" />\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          1 year\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                  <CardTitle tag=\"h3\">\n                    <i className=\"tim-icons icon-chart-bar-32 text-primary\" />{\" \"}\n                    <div className=\"chart-area\">\n                    <ReactFusioncharts\n                          type=\"zoomline\"\n                          width=\"100%\"\n                          height=\"500\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[this.state.bigChartData]}\n                        />\n                    </div>\n                  </CardTitle>\n                </CardHeader>\n              </Card>\n            </Col>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    <h4>Detailed description</h4>\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <SortingTable\n                    thead={[]}\n                    tbody={[\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"수집 정보\" },\n                          { text: \"SNMP ifInOctets(수신 옥테트|옥텟 수), ifOutOctets(전송 된 옥테트|옥텟 수)\" },\n                        ]\n                      },\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"수집 방법\" },\n                          { text: \"비트코인 노드가 설치된 서버: SNMP interface에서 20초 간격으로 ifInOctets(수신 옥테트|옥텟 수), ifOutOctets(전송 된 옥테트|옥텟 수) data 수집\" },\n                        ]\n                      },\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"분석 방법\" },\n                          { text: \"당일 ifInOctets 총 합, 당일 ifOutOctets 총 합\" },\n                        ]\n                      },\n                    ]}\n                  />\n                  <ul>\n                    <li>SNMP(Simple Network Management Protocol): TCP/IP기반 네트워크상의 각 호스트로부터 정기적으로 여러 관리 정보를 자동으로 수집하거나 실시간으로 상태를 모니터링 및 설정할 수 있는 서비스<br />\n                        SNMP를 활용하여 실제 네트워크 관리 정보를 얻기 위해서는 네트워크 장비 및 서버에 설치되어 있어야 함</li>\n                  </ul>\n                  <ul>\n                    <li>Octets(옥테트|옥텟): 이진수 32자리로 구성된 IP주소를 8자리마다 점을 찍고 이들을 옥테트라고 부른다. (  1 oct = 1 bit  )</li>\n                  </ul>\n                  <ul>\n                    <li>ifInOctets: SNMP Interface에 수신된 옥테트(Octets)의 총 개수</li>\n                  </ul>\n                  <ul>\n                    <li>ifOutOctets: SNMP Interface를 벗어나서 전송되는 총 옥테트(Octets) 개수</li>\n                  </ul>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default interfacebytes_sum;\n"]},"metadata":{},"sourceType":"module"}