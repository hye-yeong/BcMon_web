{"ast":null,"code":"var xhr;\nvar summary_chart = new Array();\nvar chart_result = new Array();\nvar result; //zoom in zoom out chart data\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render zoom in zoom out graph\n\n\nfunction renderZoomChart(url, tag, title, caption) {\n  xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (xhr.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(tag, title, caption); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        console.log(\"결과 : \");\n        console.log(result);\n        return result;\n      } else {\n        alert(\"요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  xhr.send(null);\n  return result;\n}\n\nfunction process(tag, title, caption) {\n  // 프로세스를 부름\n  var data = xhr.responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = new Object();\n  var label = new Object();\n  var value = new Object();\n  var temp_key = \"\";\n  var temp_value = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  value = {\n    \"serisename\": \"test\",\n    \"data\": \"\"\n  };\n  console.log(\"LABEL-01: \");\n  console.log(temp_key);\n  console.log(\"DATASET-01: \");\n  console.log(temp_value);\n  console.log(\"json original : \");\n  console.log(parseData);\n\n  try {\n    if (parseData.length < 366) {\n      for (var i = parseData.length - 1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_value += parseData[i][tag] + '|';\n      }\n\n      ;\n    } else {\n      for (var i = parseData.length - 1; i > parseData.length - 366; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_value += parseData[i][tag] + '|';\n      }\n\n      ;\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_value = temp_value.slice(0, -1);\n  label.category = temp_key;\n  value.data = temp_value;\n  datasource = {\n    \"chart\": {\n      \"caption\": title,\n      \"yaxisname\": \"Value\",\n      \"xaxisname\": \"Day\",\n      \"subcaption\": caption,\n      \"forceaxislimits\": \"1\",\n      \"pixelsperpoint\": \"0\",\n      \"pixelsperlabel\": \"30\",\n      \"compactdatamode\": \"1\",\n      \"theme\": \"fusion\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#27293d\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"Nunito Sans\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"#FDFDFD\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      \"legendNumColumns\": \"1\",\n      \"legendPosition\": \"RIGHT\",\n      \"defaultCenterLabel\": \"Total <br> $214\",\n      \"centerLabel\": \"$label<br>$value\",\n      \"centerLabelBold\": \"1\",\n      \"centerLabelFontSize\": \"20\",\n      \"enableRotation\": \"0\",\n      \"transposeAnimation\": \"1\",\n      \"plotToolText\": \"<div>$label<br>$dataValue ($percentValue)<div>\"\n    },\n    \"categories\": [label],\n    \"dataset\": [value]\n  };\n  console.log(\"LABEL-02: \");\n  console.log(temp_key);\n  console.log(\"DATASET-02: \");\n  console.log(temp_value);\n  console.log(\"DATA-02: \");\n  console.log(datasource);\n  console.log(\"DATATYPE-02: \");\n  console.log(temp_key.toString());\n  console.log(typeof temp_key);\n  console.log(temp_value.toString());\n  console.log(typeof temp_value);\n  console.log(\"DATATEXT-02: \");\n  console.log(datasource);\n  console.log(JSON.stringify(datasource));\n  console.log(typeof datasource);\n  return datasource;\n} //render line 2d graph\n\n\nfunction renderGraph(url, tag, title, caption, num) {\n  summary_chart[num] = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  summary_chart[num].open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  summary_chart[num].onreadystatechange = function () {\n    if (summary_chart[num].readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (summary_chart[num].status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        chart_result[num] = getGraphData(tag, title, caption, num); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        console.log(\"결과 : \");\n        console.log(chart_result[num]);\n        return chart_result[num];\n      } else {\n        alert(\"요청 실패:\" + summary_chart[num].status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  try {\n    summary_chart[num].send(null);\n  } catch (e) {\n    return chart_result[num];\n  }\n\n  return chart_result[num];\n}\n\nfunction getGraphData(tag, title, caption, num) {\n  // 프로세스를 부름\n  var data = summary_chart[num].responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = new Object();\n  var temp_data_array = new Array();\n  var temp_data = new Object();\n  temp_data = JSON.stringify(parseData);\n  console.log(\"abstract temp data 01: \");\n  console.log(temp_data);\n  console.log(\"abstract json original : \");\n  console.log(parseData); // for (var i = 0; i < parseData.length; i++) {\n  //   temp_data = temp_data.replace(\"_id\", \"label\");\n  //   temp_data = temp_data.replace(tag, \"value\");\n  // };\n  //temp_data = JSON.parse(temp_data);\n\n  for (var i = parseData.length - 1; i >= 0; i--) {\n    temp_data_array.push(parseData[i]);\n  }\n\n  ;\n  temp_data = JSON.stringify(temp_data_array);\n\n  for (var i = 0; i < parseData.length; i++) {\n    temp_data = temp_data.replace(\"_id\", \"label\");\n    temp_data = temp_data.replace(tag, \"value\");\n  }\n\n  ;\n  temp_data = JSON.parse(temp_data);\n  alert(temp_data);\n  console.log(\"abstract temp data 02: \");\n  console.log(JSON.stringify(temp_data_array));\n  datasource = {\n    \"chart\": {\n      \"caption\": title,\n      \"yaxisname\": \"\",\n      \"xaxisname\": \"\",\n      \"subcaption\": caption,\n      \"numbersuffix\": \"\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"00b0f0\",\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"theme\": \"fusion\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#27293d\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"Nunito Sans\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"#FDFDFD\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      legendNumColumns: \"1\",\n      legendPosition: \"RIGHT\",\n      defaultCenterLabel: \"Total <br> $214\",\n      centerLabel: \"$label<br>$value\",\n      centerLabelBold: \"1\",\n      centerLabelFontSize: \"20\",\n      enableRotation: \"0\",\n      transposeAnimation: \"1\",\n      plotToolText: \"<div>$label<br>$dataValue ($percentValue)<div>\"\n    },\n    data: temp_data\n  };\n  console.log(\"abstract temp data 03: \");\n  console.log(temp_data);\n  console.log(\"abstract data: \");\n  console.log(datasource);\n  console.log(\"abstract temp DATATYPE-02: \");\n  console.log(temp_data.toString());\n  console.log(typeof temp_data);\n  console.log(\"abstract temp DATATEXT-02: \");\n  console.log(datasource);\n  console.log(JSON.stringify(datasource));\n  console.log(typeof datasource);\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderZoomChart: renderZoomChart,\n  renderGraph: renderGraph\n};","map":{"version":3,"sources":["/project/frontend/src/variables/charts.js"],"names":["xhr","summary_chart","Array","chart_result","result","sleep","delay","start","Date","getTime","renderZoomChart","url","tag","title","caption","XMLHttpRequest","open","onreadystatechange","readyState","status","process","console","log","alert","send","data","responseText","parseData","JSON","parse","datasource","Object","label","value","temp_key","temp_value","length","i","_id","e","slice","category","toString","stringify","renderGraph","num","getGraphData","temp_data_array","temp_data","push","replace","legendNumColumns","legendPosition","defaultCenterLabel","centerLabel","centerLabelBold","centerLabelFontSize","enableRotation","transposeAnimation","plotToolText","module","exports"],"mappings":"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","sourcesContent":["var xhr;\nvar summary_chart = new Array();\nvar chart_result = new Array();\nlet result; //zoom in zoom out chart data\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render zoom in zoom out graph\nfunction renderZoomChart(url, tag, title, caption){\n  xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  xhr.onreadystatechange = function(){\n      if(xhr.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(xhr.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              result = process(tag, title, caption); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              console.log(\"결과 : \");\n              console.log(result);\n              return result;\n          }else{\n                alert(\"요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  xhr.send(null);\n  return result;\n}\n\nfunction process(tag, title, caption){ // 프로세스를 부름\n  var data = xhr.responseText; // get은 Text 방식으로\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = new Object();\n  var label = new Object();\n  var value = new Object();\n\n  var temp_key = \"\";\n  var temp_value = \"\";\n\n  label = {\"category\" : \"\"}\n  value = {\"serisename\" : \"test\", \"data\" : \"\" }\n\n  console.log(\"LABEL-01: \")\n  console.log(temp_key)\n  console.log(\"DATASET-01: \")\n  console.log(temp_value)\n  console.log(\"json original : \")\n  console.log(parseData)\n\n  try {\n    if(parseData.length < 366) {\n      for(var i = parseData.length-1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_value += parseData[i][tag] + '|';\n      };\n    }\n\n    else {\n      for(var i = parseData.length-1; i > parseData.length-366; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_value += parseData[i][tag] + '|';\n      };\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_value = temp_value.slice(0, -1);\n\n  label.category = temp_key;\n  value.data = temp_value;\n\n  datasource = {\n  \"chart\": {\n    \"caption\": title,\n    \"yaxisname\": \"Value\",\n    \"xaxisname\": \"Day\",\n    \"subcaption\": caption,\n    \"forceaxislimits\": \"1\",\n    \"pixelsperpoint\": \"0\",\n    \"pixelsperlabel\": \"30\",\n    \"compactdatamode\": \"1\",\n    \"theme\": \"fusion\",\n\n    \"showBorder\": \"0\",\n    \"showShadow\": \"0\",\n    //use3DLighting: \"0\",\n    \"bgColor\": \"#27293d\",\n    //bgAlpha: \"0\",\n    \"canvasBgAlpha\": \"0\",\n    \"plotBorderAlpha\": \"0\",\n\n    \"toolTipBgcolor\": \"#484E69\",\n    //toolTipPadding: \"7\",\n    \"tooltipBorderThickness\": \"0.7\",\n    \"toolTipColor\": \"#FDFDFD\",\n    \"baseFont\": \"Nunito Sans\",\n    \"baseFontSize\": \"10\",\n    \"baseFontColor\": \"#FDFDFD\",\n\n    \"showLegend\": \"1\",\n    \"legendShadow\": \"0\",\n    \"legendBorderAlpha\": \"0\",\n    \"drawCustomLegendIcon\": \"1\",\n    \"legendBgAlpha\": \"0\",\n\n    \"showAlternateHGridColor\": \"0\",\n    // chartTopMargin: \"-10\",\n    // canvasTopMargin: \"-10\",\n    // chartBottomMargin: \"20\",\n    // canvasBottomMargin: \"20\",\n\n    \"legendNumColumns\": \"1\",\n    \"legendPosition\": \"RIGHT\",\n    \"defaultCenterLabel\": \"Total <br> $214\",\n    \"centerLabel\": \"$label<br>$value\",\n    \"centerLabelBold\": \"1\",\n    \"centerLabelFontSize\": \"20\",\n    \"enableRotation\": \"0\",\n    \"transposeAnimation\": \"1\",\n    \"plotToolText\": \"<div>$label<br>$dataValue ($percentValue)<div>\"\n  }\n  ,\n    \"categories\": [label],\n    \"dataset\": [value]\n};\n\nconsole.log(\"LABEL-02: \")\nconsole.log(temp_key)\n\nconsole.log(\"DATASET-02: \")\nconsole.log(temp_value)\n\nconsole.log(\"DATA-02: \")\nconsole.log(datasource)\n\nconsole.log(\"DATATYPE-02: \")\nconsole.log(temp_key.toString())\nconsole.log(typeof temp_key)\nconsole.log(temp_value.toString())\nconsole.log(typeof temp_value)\n\nconsole.log(\"DATATEXT-02: \")\nconsole.log(datasource)\n\nconsole.log(JSON.stringify(datasource))\nconsole.log(typeof datasource)\n\nreturn datasource;\n}\n\n//render line 2d graph\nfunction renderGraph(url, tag, title, caption, num){\n  summary_chart[num] = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  summary_chart[num].open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  summary_chart[num].onreadystatechange = function(){\n      if(summary_chart[num].readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(summary_chart[num].status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              chart_result[num] = getGraphData(tag, title, caption, num); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              console.log(\"결과 : \");\n              console.log(chart_result[num]);\n              return chart_result[num];\n          }else{\n                alert(\"요청 실패:\" + summary_chart[num].status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  try {\n    summary_chart[num].send(null);\n  } catch (e) {\n    return chart_result[num];\n  }\n\n  return chart_result[num];\n}\n\nfunction getGraphData(tag, title, caption, num){ // 프로세스를 부름\n  var data = summary_chart[num].responseText; // get은 Text 방식으로\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = new Object();\n\n  var temp_data_array = new Array();\n  var temp_data = new Object();\n  temp_data = JSON.stringify(parseData);\n\n  console.log(\"abstract temp data 01: \")\n  console.log(temp_data)\n  console.log(\"abstract json original : \")\n  console.log(parseData)\n\n\n  // for (var i = 0; i < parseData.length; i++) {\n  //   temp_data = temp_data.replace(\"_id\", \"label\");\n  //   temp_data = temp_data.replace(tag, \"value\");\n  // };\n\n  //temp_data = JSON.parse(temp_data);\n\n   for (var i = parseData.length-1; i >= 0; i--) {\n    temp_data_array.push(parseData[i]);\n    };\n\n    temp_data = JSON.stringify(temp_data_array);\n\n   for (var i = 0; i < parseData.length; i++) {\n      temp_data = temp_data.replace(\"_id\", \"label\");\n      temp_data = temp_data.replace(tag, \"value\");\n    };\n\n  temp_data = JSON.parse(temp_data);\n  alert(temp_data);\n  console.log(\"abstract temp data 02: \");\n  console.log(JSON.stringify(temp_data_array));\n\n  datasource = {\n  \"chart\": {\n    \"caption\": title,\n    \"yaxisname\": \"\",\n    \"xaxisname\": \"\",\n    \"subcaption\": caption,\n    \"numbersuffix\": \"\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"00b0f0\",\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"theme\": \"fusion\",\n\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#27293d\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"Nunito Sans\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"#FDFDFD\",\n\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n\n      legendNumColumns: \"1\",\n      legendPosition: \"RIGHT\",\n      defaultCenterLabel: \"Total <br> $214\",\n      centerLabel: \"$label<br>$value\",\n      centerLabelBold: \"1\",\n      centerLabelFontSize: \"20\",\n      enableRotation: \"0\",\n      transposeAnimation: \"1\",\n      plotToolText: \"<div>$label<br>$dataValue ($percentValue)<div>\"\n  }\n  ,\n    data: temp_data\n};\n\nconsole.log(\"abstract temp data 03: \")\nconsole.log(temp_data)\n\nconsole.log(\"abstract data: \")\nconsole.log(datasource)\n\nconsole.log(\"abstract temp DATATYPE-02: \")\nconsole.log(temp_data.toString())\nconsole.log(typeof temp_data)\n\nconsole.log(\"abstract temp DATATEXT-02: \")\nconsole.log(datasource)\n\nconsole.log(JSON.stringify(datasource))\nconsole.log(typeof datasource)\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  renderZoomChart,\n  renderGraph\n};\n"]},"metadata":{},"sourceType":"module"}