{"ast":null,"code":"import _classCallCheck from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/frontend/src/views/ethereum/transaction.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom'; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource = [];\nvar url = [\"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/gas-used/summation/month\", \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/gas-used/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/number-of-transactions/total/month\", \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/number-of-transactions/summation/month\", \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/number-of-transactions/average/month\"];\nvar tag = [\"value\", \"value\", \"value\", \"value\"];\nvar title = [\"Total of gasUsed\", \"Average of gasUsed\", \"Accumulated value of number of transactions\", \"Total of number of transactions\", \"Average number of transactions\"];\nvar caption = [\"The total of gasUsed per day\", \"The average of gasUsed per day\", \"The accumulated value of number of transactions per day\", \"The total of number of transactions per day\", \"The average number of transactions per day\"];\n\nvar ethereumTx =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ethereumTx, _React$Component);\n\n  function ethereumTx(props) {\n    var _this;\n\n    _classCallCheck(this, ethereumTx);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ethereumTx).call(this, props));\n\n    _this.setBgChartData = function (name1, name2) {\n      _this.setState({\n        bigChartData: name1,\n        mean: name2\n      });\n    };\n\n    _this.state = {\n      bigChartData: \"data1\",\n      //mean은 그래프 당 의미가 하나 밖에 없을 때는 사용하지 말것.\n      mean: \"Sum of Tx\"\n    };\n    return _this;\n  } // 버튼 사용시 사용하는 생성자\n\n\n  _createClass(ethereumTx, [{\n    key: \"render\",\n    value: function render() {\n      for (var i = 0; i < url.length; i++) {\n        dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n        console.log(\"임시 데이터 1 - \" + i + \" : \");\n        console.log(JSON.stringify(dataSource[i]));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Ethereum Transaction\"), React.createElement(\"p\", {\n        className: \"category text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \".\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/ethereum/transaction/gas-used/summation/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/ethereum/transaction/gas-used/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/ethereum/blocks/number-of-transactions/total/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/ethereum/transaction/number-of-transactions/summation/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/ethereum/transaction/number-of-transactions/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"fc-line\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return ethereumTx;\n}(React.Component);\n\nexport default ethereumTx;","map":{"version":3,"sources":["/frontend/src/views/ethereum/transaction.js"],"names":["React","Card","CardBody","Row","Col","Link","chartData","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","tag","title","caption","ethereumTx","props","setBgChartData","name1","name2","setState","bigChartData","mean","state","i","length","renderGraph","console","log","JSON","stringify","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource = [];\nlet url = [\n  \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/gas-used/summation/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/gas-used/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/number-of-transactions/total/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/number-of-transactions/summation/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/ethereum/graphs/number-of-transactions/average/month\",\n];\nvar tag = [\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n];\nvar title = [\n  \"Total of gasUsed\",\n  \"Average of gasUsed\",\n  \"Accumulated value of number of transactions\",\n  \"Total of number of transactions\",\n  \"Average number of transactions\"\n];\nvar caption = [\n  \"The total of gasUsed per day\",\n  \"The average of gasUsed per day\",\n  \"The accumulated value of number of transactions per day\",\n  \"The total of number of transactions per day\",\n  \"The average number of transactions per day\"\n];\n\nclass ethereumTx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n      //mean은 그래프 당 의미가 하나 밖에 없을 때는 사용하지 말것.\n      mean:\"Sum of Tx\"\n    };\n  }\n  // 버튼 사용시 사용하는 생성자\n  setBgChartData = (name1, name2) => {\n    this.setState({\n      bigChartData: name1,\n      mean: name2\n    });\n  };\n\n  render() {\n  for(var i = 0; i < url.length; i++)\n  {\n    dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n    console.log(\"임시 데이터 1 - \" + i + \" : \");\n    console.log(JSON.stringify(dataSource[i]));\n  }\n\n    return (\n      <>\n        <div className=\"content\">\n        <h2 className=\"text-center\">Ethereum Transaction</h2>\n        <p className=\"category text-center\">\n          .\n        </p>\n\n        <div className=\"content\">\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart2\">\n            <Link to={\"/admin/ethereum/transaction/gas-used/summation/year\"}>\n              <CardBody>\n                <div className=\"chart-area\">\n                <ReactFusioncharts\n                      type=\"line\"\n                      className = \"mychart\"\n                      width=\"100%\"\n                      height=\"300\"\n                      dataFormat=\"JSON\"\n                      dataSource={dataSource[0]}\n                    />\n                </div>\n              </CardBody>\n              </Link>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart2\">\n            <Link to={\"/admin/ethereum/transaction/gas-used/average/year\"}>\n              <CardBody>\n              <div className=\"chart-area\">\n              <ReactFusioncharts\n                    type=\"line\"\n                    className = \"fc-line\"\n                    width=\"100%\"\n                    height=\"300\"\n                    dataFormat=\"JSON\"\n                    dataSource={dataSource[1]}\n                  />\n              </div>\n              </CardBody>\n              </Link>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart2\">\n            <Link to={\"/admin/ethereum/blocks/number-of-transactions/total/year\"}>\n              <CardBody>\n              <div className=\"chart-area\">\n              <ReactFusioncharts\n                    type=\"line\"\n                    className = \"fc-line\"\n                    width=\"100%\"\n                    height=\"300\"\n                    dataFormat=\"JSON\"\n                    dataSource={dataSource[2]}\n                  />\n              </div>\n              </CardBody>\n              </Link>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart2\">\n            <Link to={\"/admin/ethereum/transaction/number-of-transactions/summation/year\"}>\n              <CardBody>\n              <div className=\"chart-area\">\n              <ReactFusioncharts\n                    type=\"line\"\n                    className = \"fc-line\"\n                    width=\"100%\"\n                    height=\"300\"\n                    dataFormat=\"JSON\"\n                    dataSource={dataSource[3]}\n                  />\n              </div>\n              </CardBody>\n              </Link>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart2\">\n            <Link to={\"/admin/ethereum/transaction/number-of-transactions/average/year\"}>\n              <CardBody>\n              <div className=\"chart-area\">\n              <ReactFusioncharts\n                    type=\"line\"\n                    className = \"fc-line\"\n                    width=\"100%\"\n                    height=\"300\"\n                    dataFormat=\"JSON\"\n                    dataSource={dataSource[3]}\n                  />\n              </div>\n              </CardBody>\n              </Link>\n            </Card>\n          </Col>\n        </Row>\n        </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\n\n\nexport default ethereumTx;\n"]},"metadata":{},"sourceType":"module"}