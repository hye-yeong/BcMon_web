{"ast":null,"code":"import _classCallCheck from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/project/src/views/advanced_analysis/ddos.js\";\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport { Card, CardHeader, CardTitle, CardBody, Table, Row, Col } from \"reactstrap\";\nimport React from \"react\";\nimport FusionCharts from \"fusioncharts\";\nimport TimeSeries from \"fusioncharts/fusioncharts.timeseries\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\nReactFC.fcRoot(FusionCharts, TimeSeries, FusionTheme, CandyTheme);\n\nvar jsonify = function jsonify(res) {\n  return res.json();\n};\n\nvar dataFetch = fetch(\"http://163.152.223.12:5002/get_data\").then(jsonify);\nvar schemaFetch = fetch(\"http://163.152.223.12:5002/get_schema\").then(jsonify);\nvar dataSource = {\n  chart: {\n    theme: \"candy\"\n  },\n  subcaption: {\n    text: \"We predict whether DDoS attack will occur on the next day or not through the Bitcoin's block statistical data of the previous day.\"\n  },\n  series: \"Model\",\n  yaxis: [{\n    plot: [{\n      value: \"Score\",\n      type: \"column\"\n    }],\n    title: \"Detection Score\",\n    format: {\n      suffix: \"\"\n    }\n  }]\n};\n\nvar analysis_ddos = /*#__PURE__*/function (_React$Component) {\n  _inherits(analysis_ddos, _React$Component);\n\n  var _super = _createSuper(analysis_ddos);\n\n  function analysis_ddos(props) {\n    var _this;\n\n    _classCallCheck(this, analysis_ddos);\n\n    _this = _super.call(this, props);\n    _this.onFetchData = _this.onFetchData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      timeseriesDs: {\n        type: \"timeseries\",\n        renderAt: \"container\",\n        padding: \"10\",\n        width: \"100%\",\n        height: \"600\",\n        dataSource: dataSource\n      }\n    };\n    return _this;\n  }\n\n  _createClass(analysis_ddos, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onFetchData();\n    }\n  }, {\n    key: \"onFetchData\",\n    value: function onFetchData() {\n      var _this2 = this;\n\n      Promise.all([dataFetch, schemaFetch]).then(function (res) {\n        var data = res[0];\n        var schema = res[1];\n        console.log(data);\n        var fusionTable = new FusionCharts.DataStore().createDataTable(data, schema);\n        var timeseriesDs = Object.assign({}, _this2.state.timeseriesDs);\n        timeseriesDs.dataSource.data = fusionTable;\n\n        _this2.setState({\n          timeseriesDs: timeseriesDs\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"Bitcoin DDoS\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-firstoutline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, \"DDoS prediction\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-management-ethereum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }\n      }, this.state.timeseriesDs.dataSource.data ? /*#__PURE__*/React.createElement(ReactFC, Object.assign({}, this.state.timeseriesDs, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }\n      })) : \"loading\", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, \"\\xA0\")), /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }\n      }, \"DDoS Attack Prediction System predict DDoS attack through predictive model which train the Bitcoin block statistical data and price data. This System consists of four categories in overall.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 31\n        }\n      }, \"The \\\"Collector\\\" collect the block data and the price data from bitcoin network and exchange respectively.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }\n      }, \"The \\\"pre-processor\\\" cosists of four modules. Statistical data extractor extracts statistical data from collected block data. The unifier unify the time unit of block statistical data and time unit of price data. The time series clustering process divides the entire data into time series group with similar distributions and transfer the clustering results to the time-series classifier.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 31\n        }\n      }, \"The Training category generates a predictive model that corresponds to a time series dataset , and the number of predictive models depends on the number of time series datasets. The generated training model is transfered to the predictor.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }\n      }, \"The \\\"Predictor\\\" outputs the probability of a DDoS attack within the next 1 day via the entered time series.\")))), /*#__PURE__*/React.createElement(Card, {\n        className: \"card-management-evenoutline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 31\n        }\n      }, \"DDoS Attack Prediction System predict DDoS attack through predictive model which train the Bitcoin block statistical data and price data. This System consists of four categories in overall.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 31\n        }\n      }, \"The \\\"Collector\\\" collect the block data and the price data from bitcoin network and exchange respectively.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 31\n        }\n      }, \"The \\\"pre-processor\\\" cosists of four modules. Statistical data extractor extracts statistical data from collected block data. The unifier unify the time unit of block statistical data and time unit of price data. The time series clustering process divides the entire data into time series group with similar distributions and transfer the clustering results to the time-series classifier.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 31\n        }\n      }, \"The Training category generates a predictive model that corresponds to a time series dataset , and the number of predictive models depends on the number of time series datasets. The generated training model is transfered to the predictor.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 31\n        }\n      }, \"The \\\"Predictor\\\" outputs the probability of a DDoS attack within the next 1 day via the entered time series.\")))), /*#__PURE__*/React.createElement(Card, {\n        className: \"card-management-evenoutline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 31\n        }\n      })))))))));\n    }\n  }]);\n\n  return analysis_ddos;\n}(React.Component);\n\nexport default analysis_ddos;","map":{"version":3,"sources":["/project/src/views/advanced_analysis/ddos.js"],"names":["Card","CardHeader","CardTitle","CardBody","Table","Row","Col","React","FusionCharts","TimeSeries","ReactFC","FusionTheme","CandyTheme","fcRoot","jsonify","res","json","dataFetch","fetch","then","schemaFetch","dataSource","chart","theme","subcaption","text","series","yaxis","plot","value","type","title","format","suffix","analysis_ddos","props","onFetchData","bind","state","timeseriesDs","renderAt","padding","width","height","Promise","all","data","schema","console","log","fusionTable","DataStore","createDataTable","Object","assign","setState","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport { Card, CardHeader, CardTitle, CardBody, Table, Row, Col } from \"reactstrap\";\nimport React from \"react\";\nimport FusionCharts from \"fusioncharts\";\nimport TimeSeries from \"fusioncharts/fusioncharts.timeseries\";\nimport ReactFC from \"react-fusioncharts\"\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\nReactFC.fcRoot(FusionCharts, TimeSeries, FusionTheme, CandyTheme);\n\nconst jsonify = res => res.json();\nconst dataFetch = fetch(\"http://163.152.223.12:5002/get_data\").then(jsonify);\nconst schemaFetch = fetch(\"http://163.152.223.12:5002/get_schema\").then(jsonify);\n\nconst dataSource = {\n  chart: {theme: \"candy\"\n  },\n  subcaption: {\n    text: \"We predict whether DDoS attack will occur on the next day or not through the Bitcoin's block statistical data of the previous day.\"\n  },\n  series: \"Model\",\n  yaxis: [\n    {\n      plot: [\n        {\n          value: \"Score\",\n          type: \"column\"\n        }\n      ],\n      title: \"Detection Score\",\n      format: {\n        suffix: \"\"\n      }\n    }\n  ]\n};\n\nclass analysis_ddos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onFetchData = this.onFetchData.bind(this);\n    this.state = {\n      timeseriesDs: {\n        type: \"timeseries\",\n        renderAt: \"container\",\n        padding: \"10\",\n        width: \"100%\",\n        height: \"600\",\n        dataSource\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.onFetchData();\n  }\n\n  onFetchData() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n\n      console.log(data)\n\n      const fusionTable = new FusionCharts.DataStore().createDataTable(\n        data,\n        schema\n      );\n\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Bitcoin DDoS</h2>\n            <div className=\"title content\">\n              <Card className=\"card-firstoutline\">\n                <CardHeader>\n                  <CardTitle>\n                    <h3 className=\"text-center\">DDoS prediction</h3>\n                  </CardTitle>\n                  </CardHeader>\n                  <Row>\n                    <Col lg=\"12\">\n                      <Card className=\"card-management-ethereum\">\n                          <CardBody className=\"text-center\">\n                            {this.state.timeseriesDs.dataSource.data ? (\n                              <ReactFC {...this.state.timeseriesDs} />\n                            ) : (\n                                \"loading\"\n                              )}\n                            <p>&nbsp;</p>\n                          </CardBody>\n                          <CardHeader>\n                            <CardTitle>\n                              <p>DDoS Attack Prediction System predict DDoS attack through predictive model which train the Bitcoin block statistical data and price data. This System consists of four categories in overall.</p>\n                              <p>The \"Collector\" collect the block data and the price data from bitcoin network and exchange respectively.</p>\n                              <p>The \"pre-processor\" cosists of four modules. Statistical data extractor extracts statistical data from collected block data. The unifier unify the time unit of block statistical data and time unit of price data. The time series clustering process divides the entire data into time series group with similar distributions and transfer the clustering results to the time-series classifier.</p>\n                              <p>The Training category generates a predictive model that corresponds to a time series dataset , and the number of predictive models depends on the number of time series datasets. The generated training model is transfered to the predictor.</p>\n                              <p>The \"Predictor\" outputs the probability of a DDoS attack within the next 1 day via the entered time series.</p>\n                              </CardTitle>\n                            </CardHeader>\n                        </Card>\n                        <Card className=\"card-management-evenoutline\">\n                          <CardHeader>\n                            <CardTitle>\n                              <p>DDoS Attack Prediction System predict DDoS attack through predictive model which train the Bitcoin block statistical data and price data. This System consists of four categories in overall.</p>\n                              <p>The \"Collector\" collect the block data and the price data from bitcoin network and exchange respectively.</p>\n                              <p>The \"pre-processor\" cosists of four modules. Statistical data extractor extracts statistical data from collected block data. The unifier unify the time unit of block statistical data and time unit of price data. The time series clustering process divides the entire data into time series group with similar distributions and transfer the clustering results to the time-series classifier.</p>\n                              <p>The Training category generates a predictive model that corresponds to a time series dataset , and the number of predictive models depends on the number of time series datasets. The generated training model is transfered to the predictor.</p>\n                              <p>The \"Predictor\" outputs the probability of a DDoS attack within the next 1 day via the entered time series.</p>\n                              </CardTitle>\n                            </CardHeader>\n                          </Card>\n                          <Card className=\"card-management-evenoutline\">\n                            <CardHeader>\n                              <CardTitle>\n                                </CardTitle>\n                              </CardHeader>\n                            </Card>\n                        </Col>\n                  </Row>\n              </Card>\n            </div>\n          </div>\n      </>\n    );\n  }\n}\n\nexport default analysis_ddos;\n"]},"metadata":{},"sourceType":"module"}