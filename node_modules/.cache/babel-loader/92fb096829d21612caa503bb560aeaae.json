{"ast":null,"code":"var result = [];\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} // datainfo = [{'url', 'call_count', 'tag', 'title', 'caption', 'InValue', 'OutValue'}]\n\n\nfunction renderRealTimeData(dataInfo) {\n  var get_data = new XMLHttpRequest(); // get_data은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  var url = dataInfo['url'];\n  get_data.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  get_data.onreadystatechange = function () {\n    if (get_data.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (get_data.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(dataInfo, get_data); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return result;\n      } else {\n        var title = url = dataInfo['title'];\n        alert(title + \"그래프 데이터 요청 실패:\" + get_data.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  get_data.send(null);\n  return result;\n}\n\nfunction process(dataInfo, get_data) {\n  var data = get_data.responseText;\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var renderData = [];\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  Ivalue = {\n    \"serisename\": \"in_value\",\n    \"data\": \"\"\n  };\n  Ovalue = {\n    \"serisename\": \"out_value\",\n    \"data\": \"\"\n  };\n  datasource = {\n    \"chart\": {\n      \"caption\": \"Stock Price Monitor\",\n      \"subCaption\": \"Harry's Supermart\",\n      \"showRealTimeValue\": \"0\",\n      \"numberprefix\": \"$\",\n      \"setadaptiveymin\": \"1\",\n      \"setadaptivesymin\": \"1\",\n      \"xaxisname\": \"Time\",\n      \"labeldisplay\": \"Rotate\",\n      \"slantlabels\": \"1\",\n      \"pyaxisminvalue\": \"35\",\n      \"pyaxismaxvalue\": \"36\",\n      \"syaxisminvalue\": \"10000\",\n      \"syaxismaxvalue\": \"12000\",\n      \"numDisplaySets\": \"10\",\n      \"theme\": \"fusion\"\n    },\n    \"categories\": [{\n      \"category\": [{\n        \"label\": \"Day Start\"\n      }]\n    }],\n    \"dataset\": [{\n      \"seriesname\": \"HRYS Price\",\n      \"showvalues\": \"0\",\n      \"data\": [{\n        \"value\": \"35.1\"\n      }]\n    }, {\n      \"seriesname\": \"NYSE Index\",\n      \"showvalues\": \"0\",\n      \"parentyaxis\": \"S\",\n      \"data\": [{\n        \"value\": \"10962.87\"\n      }]\n    }],\n    \"trendlines\": [{\n      \"line\": [{\n        \"parentyaxis\": \"P\",\n        \"startvalue\": \"35.1\",\n        \"displayvalue\": \"Open\",\n        \"thickness\": \"1\",\n        \"color\": \"#0075c2\",\n        \"dashed\": \"1\"\n      }, {\n        \"parentyaxis\": \"S\",\n        \"startvalue\": \"10962.87\",\n        \"displayvalue\": \"Open\",\n        \"thickness\": \"1\",\n        \"color\": \"#1aaf5d\",\n        \"dashed\": \"1\"\n      }]\n    }]\n  };\n  renderData.push({\n    'data': datasource\n  });\n  renderData.push({\n    'InValue': Ivalue\n  });\n  renderData.push({\n    'OutValue': Ovalue\n  });\n  return renderData;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderRealTimeData: renderRealTimeData\n};","map":{"version":3,"sources":["/projcet/src/variables/charts_RealTime.js"],"names":["result","sleep","delay","start","Date","getTime","renderRealTimeData","dataInfo","get_data","XMLHttpRequest","url","open","onreadystatechange","readyState","status","process","title","alert","send","data","responseText","parseData","JSON","parse","renderData","datasource","label","Ivalue","Ovalue","temp_key","temp_inValue","temp_outValue","push","module","exports"],"mappings":"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","sourcesContent":["let result = []\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n// datainfo = [{'url', 'call_count', 'tag', 'title', 'caption', 'InValue', 'OutValue'}]\nfunction renderRealTimeData(dataInfo){\n  var get_data = new XMLHttpRequest();       // get_data은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  var url = dataInfo['url']\n\n  get_data.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  get_data.onreadystatechange = function(){\n      if(get_data.readyState === 4){       // 통신 상태가 4 = 양호 확인\n          if(get_data.status === 200){     //status 가 200일 경우 아래 process; 로 진행\n              result = process(dataInfo, get_data); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return result;\n          }else{\n              var title = url = dataInfo['title']\n              alert(title+\"그래프 데이터 요청 실패:\" + get_data.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  get_data.send(null);\n  return result;\n}\n\nfunction process(dataInfo, get_data){\n  var data = get_data.responseText;\n  var parseData = JSON.parse(data);       //객체화 : 배열 처리\n\n  var renderData = [];\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue=\"\";\n\n  label = {\"category\" : \"\"}\n  Ivalue = {\"serisename\" : \"in_value\", \"data\" : \"\" }\n  Ovalue = {\"serisename\" : \"out_value\", \"data\" : \"\" }\n\n  datasource = {\n    \"chart\": {\n      \"caption\": \"Stock Price Monitor\",\n      \"subCaption\": \"Harry's Supermart\",\n      \"showRealTimeValue\": \"0\",\n      \"numberprefix\": \"$\",\n      \"setadaptiveymin\": \"1\",\n      \"setadaptivesymin\": \"1\",\n      \"xaxisname\": \"Time\",\n      \"labeldisplay\": \"Rotate\",\n      \"slantlabels\": \"1\",\n      \"pyaxisminvalue\": \"35\",\n      \"pyaxismaxvalue\": \"36\",\n      \"syaxisminvalue\": \"10000\",\n      \"syaxismaxvalue\": \"12000\",\n      \"numDisplaySets\": \"10\",\n      \"theme\": \"fusion\"\n    },\n    \"categories\": [{\n      \"category\": [{\n      \"label\": \"Day Start\"\n      }]\n    }],\n    \"dataset\": [{\n      \"seriesname\": \"HRYS Price\",\n      \"showvalues\": \"0\",\n      \"data\": [{\n        \"value\": \"35.1\"\n        }]\n      },{\n      \"seriesname\": \"NYSE Index\",\n      \"showvalues\": \"0\",\n      \"parentyaxis\": \"S\",\n      \"data\": [{\n      \"value\": \"10962.87\"\n      }]\n    }],\n    \"trendlines\": [{\n      \"line\": [{\n        \"parentyaxis\": \"P\",\n        \"startvalue\": \"35.1\",\n        \"displayvalue\": \"Open\",\n        \"thickness\": \"1\",\n        \"color\": \"#0075c2\",\n        \"dashed\": \"1\"\n      },{\n        \"parentyaxis\": \"S\",\n        \"startvalue\": \"10962.87\",\n        \"displayvalue\": \"Open\",\n        \"thickness\": \"1\",\n        \"color\": \"#1aaf5d\",\n        \"dashed\": \"1\"\n      }]\n    }]\n   }\n\n   renderData.push({'data':datasource});\n   renderData.push({'InValue':Ivalue});\n   renderData.push({'OutValue':Ovalue});\n   return renderData;\n}\n\nmodule.exports = {\n  sleep,\n  renderRealTimeData\n};\n"]},"metadata":{},"sourceType":"module"}