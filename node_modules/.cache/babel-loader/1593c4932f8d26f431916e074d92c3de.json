{"ast":null,"code":"import _classCallCheck from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/project/src/views/advanced_analysis/management/block_propagation.js\";\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Card, CardHeader, CardTitle, CardBody, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nimport SortingTable from \"../../../components/SortingTable/SortingTable.js\"; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chart_totalData from \"../../../variables/charts_cmpBlock.js\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nvar dataSource = [];\nvar dataInfo = \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/advanced-analysis/cmpctblock_received_time\";\nvar tag = \"received_time\";\nvar title = \"Time receive Compac Block\";\nvar caption = \"Time to receive the compact block of a single connected node\";\ncharts(FusionCharts);\n\nvar cmpBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(cmpBlock, _React$Component);\n\n  var _super = _createSuper(cmpBlock);\n\n  function cmpBlock() {\n    _classCallCheck(this, cmpBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(cmpBlock, [{\n    key: \"render\",\n    value: function render() {\n      dataSource[0] = chart_totalData.renderZoomChart(dataInfo, tag, title, caption);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"Management\"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        tag: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"tim-icons icon-chart-bar-32 text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactFusioncharts, {\n        type: \"zoomline\",\n        width: \"100%\",\n        height: \"500\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      })))))), /*#__PURE__*/React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"Detailed description\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SortingTable, {\n        thead: [],\n        tbody: [{\n          data: [{\n            className: \"text-center\",\n            text: \"수집 정보\"\n          }, {\n            text: \"received cmpctblock time(startTime), partially downloaded block's hash, sucessfully reconstructed block time(endTime), information of cmpctblock\"\n          }]\n        }, {\n          data: [{\n            className: \"text-center\",\n            text: \"수집 방법\"\n          }, {\n            text: \"총 2개의 노드(Node1, Node2)로 구성\"\n          }]\n        }, {\n          data: [{\n            className: \"text-center\",\n            text: \"분석 방법\"\n          }, {\n            text: \"endTIme - startTme = reveiveTime\"\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"SNMP(Simple Network Management Protocol): TCP/IP\\uAE30\\uBC18 \\uB124\\uD2B8\\uC6CC\\uD06C\\uC0C1\\uC758 \\uAC01 \\uD638\\uC2A4\\uD2B8\\uB85C\\uBD80\\uD130 \\uC815\\uAE30\\uC801\\uC73C\\uB85C \\uC5EC\\uB7EC \\uAD00\\uB9AC \\uC815\\uBCF4\\uB97C \\uC790\\uB3D9\\uC73C\\uB85C \\uC218\\uC9D1\\uD558\\uAC70\\uB098 \\uC2E4\\uC2DC\\uAC04\\uC73C\\uB85C \\uC0C1\\uD0DC\\uB97C \\uBAA8\\uB2C8\\uD130\\uB9C1 \\uBC0F \\uC124\\uC815\\uD560 \\uC218 \\uC788\\uB294 \\uC11C\\uBE44\\uC2A4\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 148\n        }\n      }), \"SNMP\\uB97C \\uD65C\\uC6A9\\uD558\\uC5EC \\uC2E4\\uC81C \\uB124\\uD2B8\\uC6CC\\uD06C \\uAD00\\uB9AC \\uC815\\uBCF4\\uB97C \\uC5BB\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uB124\\uD2B8\\uC6CC\\uD06C \\uC7A5\\uBE44 \\uBC0F \\uC11C\\uBC84\\uC5D0 \\uC124\\uCE58\\uB418\\uC5B4 \\uC788\\uC5B4\\uC57C \\uD568\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, \"icmpInMsgs: \\uC5D4\\uD2F0\\uD2F0\\uAC00 \\uC218\\uC2E0\\uD55C ICMP \\uBA54\\uC2DC\\uC9C0\\uC758 \\uCD1D \\uAC1C\\uC218\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, \"icmpOutMsgs: \\uC5D4\\uD2F0\\uD2F0\\uAC00 \\uC1A1\\uC2E0\\uD558\\uB824\\uACE0 \\uC2DC\\uB3C4\\uD588\\uB358 ICMP \\uBA54\\uC2DC\\uC9C0\\uC758 \\uCD1D \\uAC1C\\uC218\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, \"ICMP: TCP/IP\\uC5D0\\uC11C IP \\uD328\\uD0B7\\uC744 \\uCC98\\uB9AC\\uD560 \\uB54C \\uBC1C\\uC0DD\\uB418\\uB294 \\uBB38\\uC81C\\uB97C \\uC54C\\uB9AC\\uAC70\\uB098, \\uC9C4\\uB2E8 \\uB4F1\\uACFC \\uAC19\\uC774 IP \\uACC4\\uCE35\\uC5D0\\uC11C \\uD544\\uC694\\uD55C \\uAE30\\uD0C0 \\uAE30\\uB2A5\\uB4E4\\uC744 \\uC218\\uD589\\uD558\\uAE30\\uC704\\uD574 \\uC0AC\\uC6A9\\uB418\\uB294 \\uD504\\uB85C\\uD1A0\\uCF5C, \\uB124\\uD2B8\\uC6CC\\uD06C \\uC624\\uB958\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC804\\uC1A1\\uBC1B\\uB294\\uB370 \\uC8FC\\uB85C \\uC0AC\\uC6A9\"))))))));\n    }\n  }]);\n\n  return cmpBlock;\n}(React.Component);\n\nexport default cmpBlock;","map":{"version":3,"sources":["/project/src/views/advanced_analysis/management/block_propagation.js"],"names":["React","classNames","Card","CardHeader","CardTitle","CardBody","Button","ButtonGroup","Row","Col","SortingTable","chart_totalData","ReactFusioncharts","FusionCharts","charts","dataSource","dataInfo","tag","title","caption","cmpBlock","renderZoomChart","size","offset","data","className","text","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport { Card, CardHeader, CardTitle, CardBody, Button, ButtonGroup,Row, Col } from \"reactstrap\";\nimport SortingTable from \"../../../components/SortingTable/SortingTable.js\";\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chart_totalData from \"../../../variables/charts_cmpBlock.js\"\n\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\n\nlet dataSource = [];\nlet dataInfo = \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/advanced-analysis/cmpctblock_received_time\"\nvar tag = \"received_time\"\nvar title = \"Time receive Compac Block\"\nvar caption = \"Time to receive the compact block of a single connected node\"\n\ncharts(FusionCharts);\n\nclass cmpBlock extends React.Component {\n  render() {\n    dataSource[0] = chart_totalData.renderZoomChart(dataInfo, tag, title, caption);\n\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Management</h2>\n          <Row>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h3\">\n                    <i className=\"tim-icons icon-chart-bar-32 text-primary\" />{\" \"}\n                    <div className=\"chart-area\">\n                      <ReactFusioncharts\n                          type=\"zoomline\"\n                          width=\"100%\"\n                          height=\"500\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource[0]}\n                        />\n                    </div>\n                  </CardTitle>\n                </CardHeader>\n              </Card>\n            </Col>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    <h4>Detailed description</h4>\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <SortingTable\n                    thead={[]}\n                    tbody={[\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"수집 정보\" },\n                          { text: \"received cmpctblock time(startTime), partially downloaded block's hash, sucessfully reconstructed block time(endTime), information of cmpctblock\" },\n                        ]\n                      },\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"수집 방법\" },\n                          { text: \"총 2개의 노드(Node1, Node2)로 구성\"},\n                        ]\n                      },\n                      {\n                        data: [\n                          { className: \"text-center\", text: \"분석 방법\" },\n                          { text: \"endTIme - startTme = reveiveTime\" },\n                        ]\n                      },\n                    ]}\n                  />\n                  <ul>\n                    <li>SNMP(Simple Network Management Protocol): TCP/IP기반 네트워크상의 각 호스트로부터 정기적으로 여러 관리 정보를 자동으로 수집하거나 실시간으로 상태를 모니터링 및 설정할 수 있는 서비스<br />\n                        SNMP를 활용하여 실제 네트워크 관리 정보를 얻기 위해서는 네트워크 장비 및 서버에 설치되어 있어야 함</li>\n                  </ul>\n                  <ul>\n                    <li>icmpInMsgs: 엔티티가 수신한 ICMP 메시지의 총 개수</li>\n                  </ul>\n                  <ul>\n                    <li>icmpOutMsgs: 엔티티가 송신하려고 시도했던 ICMP 메시지의 총 개수</li>\n                  </ul>\n                  <ul>\n                    <li>ICMP: TCP/IP에서 IP 패킷을 처리할 때 발생되는 문제를 알리거나, 진단 등과 같이 IP 계층에서 필요한 기타 기능들을 수행하기위해 사용되는 프로토콜, 네트워크 오류메시지를 전송받는데 주로 사용</li>\n                  </ul>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default cmpBlock;\n"]},"metadata":{},"sourceType":"module"}