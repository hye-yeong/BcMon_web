{"ast":null,"code":"// total data 출력시 사용\nvar result; //zoom in zoom out chart data\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render zoom in zoom out graph\n\n\nfunction renderZoomChart(url, tag, title, caption) {\n  var graph_data = new XMLHttpRequest(); // graph_data은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  graph_data.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  graph_data.onreadystatechange = function () {\n    if (graph_data.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (graph_data.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(tag, title, caption, graph_data); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return result;\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + graph_data.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  graph_data.send(null);\n  return result;\n}\n\nfunction process(tag, title, caption, graph_data) {\n  // 프로세스를 부름\n  var data = graph_data.responseText; // get은 Text 방식으로\n\n  var dataParse = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n  var dataList = [];\n  var label = {};\n  var value = {};\n  var temp_key = \"\";\n  var temp_value = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  value = {\n    \"serisename\": \"test\",\n    \"data\": \"\"\n  };\n\n  try {\n    if (dataParse.length < 300) {\n      for (var i = 0; i < dataParse.length; i++) {\n        temp_key += dataParse[i]._id + '|';\n        temp_value += dataParse[i][tag] + '|';\n      }\n\n      ;\n    } else {\n      for (var index = 0; index < dataParse.length; index++) {\n        temp_key += dataParse[index]._id + '|';\n        temp_value += dataParse[index][tag] + '|';\n      }\n\n      ;\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_value = temp_value.slice(0, -1);\n  label.category = temp_key;\n  value.data = temp_value;\n  datasource = {\n    chart: {\n      caption: title,\n      subcaption: caption,\n      xaxisname: \"Block Height\",\n      yaxisname: \"Propagation Time(sec)\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"#17afb7\",\n      // 선 색상 변경 가능\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"forceaxislimits\": \"1\",\n      \"pixelsperpoint\": \"0\",\n      \"pixelsperlabel\": \"30\",\n      \"compactdatamode\": \"1\",\n      \"theme\": \"fusion\",\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,G,T,P\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#25263b\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"ededf0\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      \"legendNumColumns\": \"1\",\n      \"legendPosition\": \"RIGHT\",\n      \"defaultCenterLabel\": \"Total <br> $214\",\n      \"centerLabel\": \"$label<br>$value\",\n      \"centerLabelBold\": \"2\",\n      \"centerLabelFontSize\": \"20\",\n      \"enableRotation\": \"0\",\n      \"transposeAnimation\": \"1\",\n      \"plotToolText\": \"<div>$label<br>$dataValue<div>\"\n    },\n    \"categories\": [label],\n    \"dataset\": [value]\n  };\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderZoomChart: renderZoomChart\n};","map":{"version":3,"sources":["/project/src/variables/charts_cmpBlock.js"],"names":["result","sleep","delay","start","Date","getTime","renderZoomChart","url","tag","title","caption","graph_data","XMLHttpRequest","open","onreadystatechange","readyState","status","process","alert","send","data","responseText","dataParse","JSON","parse","datasource","dataList","label","value","temp_key","temp_value","length","i","_id","index","e","slice","category","chart","subcaption","xaxisname","yaxisname","module","exports"],"mappings":"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","sourcesContent":["// total data 출력시 사용\nlet result; //zoom in zoom out chart data\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render zoom in zoom out graph\nfunction renderZoomChart(url, tag, title, caption){\n  var graph_data = new XMLHttpRequest(); // graph_data은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  graph_data.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  graph_data.onreadystatechange = function(){\n      if(graph_data.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(graph_data.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              result = process(tag, title, caption, graph_data); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return result;\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + graph_data.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  graph_data.send(null);\n  return result;\n}\n\nfunction process(tag, title, caption, graph_data){  // 프로세스를 부름\n  var data = graph_data.responseText;          // get은 Text 방식으로\n  var dataParse = JSON.parse(data);     //객체화 : 배열 처리\n\n  var datasource = {};\n  var dataList = [];\n  var label = {};\n  var value = {};\n  var temp_key = \"\";\n  var temp_value = \"\";\n\n  label = {\"category\" : \"\"}\n  value = {\"serisename\" : \"test\", \"data\" : \"\" }\n\n  try {\n    if(dataParse.length < 300) {\n      for(var i = 0; i <dataParse.length; i++) {\n        temp_key += dataParse[i]._id + '|';\n        temp_value += dataParse[i][tag] + '|';\n      };\n    }\n    else {\n      for(var index = 0; index < dataParse.length; index++) {\n        temp_key += dataParse[index]._id + '|';\n        temp_value += dataParse[index][tag] + '|';\n      };\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_value = temp_value.slice(0, -1);\n\n  label.category = temp_key;\n  value.data = temp_value;\n\n  datasource = {\n    chart: {\n      caption: title,\n      subcaption: caption,\n      xaxisname: \"Block Height\",\n      yaxisname: \"Propagation Time(sec)\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"#17afb7\",       // 선 색상 변경 가능\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"forceaxislimits\": \"1\",\n      \"pixelsperpoint\": \"0\",\n      \"pixelsperlabel\": \"30\",\n      \"compactdatamode\": \"1\",\n      \"theme\": \"fusion\",\n\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,G,T,P\",\n\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#25263b\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"ededf0\",\n\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n\n      \"legendNumColumns\": \"1\",\n      \"legendPosition\": \"RIGHT\",\n      \"defaultCenterLabel\": \"Total <br> $214\",\n      \"centerLabel\": \"$label<br>$value\",\n      \"centerLabelBold\": \"2\",\n      \"centerLabelFontSize\": \"20\",\n      \"enableRotation\": \"0\",\n      \"transposeAnimation\": \"1\",\n      \"plotToolText\": \"<div>$label<br>$dataValue<div>\"\n    },\n\n    \"categories\": [label],\n    \"dataset\": [value]\n  };\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  renderZoomChart,\n};\n"]},"metadata":{},"sourceType":"module"}