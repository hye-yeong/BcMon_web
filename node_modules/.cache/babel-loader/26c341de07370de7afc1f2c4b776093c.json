{"ast":null,"code":"var chart_result = [];\nvar result; //zoom in zoom out chart data\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render line 2d graph\n\n\nfunction multipleRenderGraph(url, in_value, out_value, title, caption) {\n  var summaryChart = new XMLHttpRequest(); // summaryChart은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  summaryChart.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  // 값이 1이면 서버와의 연결이 성사됨\n\n  summaryChart.onreadystatechange = function () {\n    console.log(\"onreadystatechange function\");\n\n    if (summaryChart.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (summaryChart.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        chart_result = getGraphData(in_value, out_value, title, caption, summaryChart); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return chart_result;\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + summaryChart.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  }; //  try {\n\n\n  summaryChart.send(null); //  } catch (e) {\n  //    return chart_result;\n  ////  console.log(\"multi \" + url);\n\n  return chart_result;\n}\n\nfunction getGraphData(in_value, out_value, title, caption, summaryChart) {\n  // 프로세스를 부름\n  var data = summaryChart.responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  Ivalue = {\n    \"serisename\": \"in_value\",\n    \"data\": \"\"\n  };\n  Ovalue = {\n    \"serisename\": \"out_value\",\n    \"data\": \"\"\n  };\n  console.log(\"LABEL-01: \");\n  console.log(temp_key);\n  console.log(\"DATASET-01: \");\n  console.log(temp_inValue);\n  console.log(\"DATASET-01: \");\n  console.log(temp_outValue);\n  console.log(\"json original : \");\n  console.log(parseData);\n\n  try {\n    if (parseData.length < 35) {\n      for (var i = parseData.length - 1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_inValue += parseData[i][in_value] + '|';\n        temp_outValue += parseData[i][out_value] + '|';\n      }\n\n      ;\n    } else {\n      for (var index = parseData.length - 1; index > parseData.length - 366; index--) {\n        temp_key += parseData[index]._id + '|';\n        temp_inValue += parseData[index][in_value] + '|';\n        temp_outValue += parseData[index][out_value] + '|';\n      }\n\n      ;\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_inValue += temp_inValue.slice(0, -1);\n  temp_outValue += temp_outValue.slice(0, -1);\n  label.category = temp_key;\n  Ivalue.data = temp_inValue;\n  Ovalue.data = temp_outValue; // 그래프 선이 출력되는 부분 코드\n\n  datasource = {\n    \"chart\": {\n      \"caption\": title,\n      \"yaxisname\": \"\",\n      \"xaxisname\": \"\",\n      \"subcaption\": caption,\n      \"numbersuffix\": \"\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"#17afb7, #b30710\",\n      // 선 색상 변경 가능\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"theme\": \"fusion\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#25263b\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"Nunito Sans\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"ededf0\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      legendNumColumns: \"1\",\n      legendPosition: \"RIGHT\",\n      defaultCenterLabel: \"Total <br> $214\",\n      centerLabel: \"$label<br>$value\",\n      centerLabelBold: \"2\",\n      centerLabelFontSize: \"20\",\n      enableRotation: \"0\",\n      transposeAnimation: \"1\",\n      plotToolText: \"<div>$label<br>$dataValue<div>\"\n    },\n    \"categories\": [label],\n    \"dataset\": [Ivalue, Ovalue]\n  };\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  multipleRenderGraph: multipleRenderGraph\n};","map":{"version":3,"sources":["/frontend/src/variables/charts_multipleMonth.js"],"names":["chart_result","result","sleep","delay","start","Date","getTime","multipleRenderGraph","url","in_value","out_value","title","caption","summaryChart","XMLHttpRequest","open","onreadystatechange","console","log","readyState","status","getGraphData","alert","send","data","responseText","parseData","JSON","parse","datasource","label","Ivalue","Ovalue","temp_key","temp_inValue","temp_outValue","length","i","_id","index","e","slice","category","legendNumColumns","legendPosition","defaultCenterLabel","centerLabel","centerLabelBold","centerLabelFontSize","enableRotation","transposeAnimation","plotToolText","module","exports"],"mappings":"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","sourcesContent":["var chart_result = [];\nlet result; //zoom in zoom out chart data\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render line 2d graph\nfunction multipleRenderGraph(url, in_value, out_value, title, caption){\n  var summaryChart = new XMLHttpRequest(); // summaryChart은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  summaryChart.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  // 값이 1이면 서버와의 연결이 성사됨\n  summaryChart.onreadystatechange = function(){\n    console.log(\"onreadystatechange function\");\n      if(summaryChart.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(summaryChart.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              chart_result= getGraphData(in_value, out_value, title, caption, summaryChart); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return chart_result;\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + summaryChart.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n//  try {\n    summaryChart.send(null);\n//  } catch (e) {\n//    return chart_result;\n////  console.log(\"multi \" + url);\n  return chart_result;\n}\n\nfunction getGraphData(in_value, out_value, title, caption, summaryChart){ // 프로세스를 부름\n  var data = summaryChart.responseText; // get은 Text 방식으로\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue=\"\";\n\n  label = {\"category\" : \"\"}\n  Ivalue = {\"serisename\" : \"in_value\", \"data\" : \"\" }\n  Ovalue = {\"serisename\" : \"out_value\", \"data\" : \"\" }\n\n  console.log(\"LABEL-01: \")\n  console.log(temp_key)\n  console.log(\"DATASET-01: \")\n  console.log(temp_inValue)\n  console.log(\"DATASET-01: \")\n  console.log(temp_outValue)\n  console.log(\"json original : \")\n  console.log(parseData)\n\n  try {\n    if(parseData.length < 35 ) {\n      for(var i = parseData.length-1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_inValue += parseData[i][in_value] + '|';\n        temp_outValue += parseData[i][out_value] + '|';\n      };\n    }\n    else {\n      for(var index = parseData.length-1; index > parseData.length-366; index--) {\n        temp_key += parseData[index]._id + '|';\n        temp_inValue += parseData[index][in_value] + '|';\n        temp_outValue += parseData[index][out_value] + '|';\n      };\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_inValue += temp_inValue.slice(0, -1);\n  temp_outValue += temp_outValue.slice(0, -1);\n\n  label.category = temp_key;\n  Ivalue.data = temp_inValue;\n  Ovalue.data = temp_outValue;\n\n  // 그래프 선이 출력되는 부분 코드\n  datasource = {\n  \"chart\": {\n    \"caption\": title,\n    \"yaxisname\": \"\",\n    \"xaxisname\": \"\",\n    \"subcaption\": caption,\n    \"numbersuffix\": \"\",\n    \"rotatelabels\": \"1\",\n    \"drawAnchors\": \"0\",\n    \"showLabels\": \"0\",\n    \"palettecolors\": \"#17afb7, #b30710\",       // 선 색상 변경 가능\n    \"setadaptiveymin\": \"1\",\n    \"linethickness\": \"3\",\n    \"theme\": \"fusion\",\n\n    \"showBorder\": \"0\",\n    \"showShadow\": \"0\",\n    //use3DLighting: \"0\",\n    \"bgColor\": \"#25263b\",\n    //bgAlpha: \"0\",\n    \"canvasBgAlpha\": \"0\",\n    \"plotBorderAlpha\": \"0\",\n\n    \"toolTipBgcolor\": \"#484E69\",\n    //toolTipPadding: \"7\",\n    \"tooltipBorderThickness\": \"0.7\",\n    \"toolTipColor\": \"#FDFDFD\",\n    \"baseFont\": \"Nunito Sans\",\n    \"baseFontSize\": \"10\",\n    \"baseFontColor\": \"ededf0\",\n\n    \"showLegend\": \"1\",\n    \"legendShadow\": \"0\",\n    \"legendBorderAlpha\": \"0\",\n    \"drawCustomLegendIcon\": \"1\",\n    \"legendBgAlpha\": \"0\",\n\n    \"showAlternateHGridColor\": \"0\",\n    // chartTopMargin: \"-10\",\n    // canvasTopMargin: \"-10\",\n    // chartBottomMargin: \"20\",\n    // canvasBottomMargin: \"20\",\n\n    legendNumColumns: \"1\",\n    legendPosition: \"RIGHT\",\n    defaultCenterLabel: \"Total <br> $214\",\n    centerLabel: \"$label<br>$value\",\n    centerLabelBold: \"2\",\n    centerLabelFontSize: \"20\",\n    enableRotation: \"0\",\n    transposeAnimation: \"1\",\n    plotToolText: \"<div>$label<br>$dataValue<div>\"\n  }\n  ,\n  \"categories\": [label],\n    \"dataset\": [Ivalue,Ovalue]\n};\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  multipleRenderGraph\n};\n"]},"metadata":{},"sourceType":"module"}