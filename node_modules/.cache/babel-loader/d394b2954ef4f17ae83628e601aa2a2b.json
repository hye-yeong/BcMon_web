{"ast":null,"code":"import _classCallCheck from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/frontend/src/views/ethereum/node.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\";\nimport { Link } from 'react-router-dom'; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../variables/charts_month.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource = [];\nvar url = [\"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-buffer-size/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-cached-size/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-cpu/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-memory/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-verificationprogres/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/peer-count/average/month\", \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/bytes/seconds/month\"];\nvar tag = [\"value\", \"value\", \"value\", \"value\", \"value\", \"value\", \"value\"];\nvar title = [\"Buffer Size \", \"Cached Size \", \"CPU Usage\", \"Memory Usage\", \"Verification Progress\", \"Peer Count\", \"Bytes\"];\nvar caption = [\"The average used buffer size per day\", \"The average used cache size per day\", \"The average used CPU per day\", \"The average used memory per day\", \"The average verification progress per day\", \"The number of peers connected per day\", \"The average of nodes transaction rate per day\"];\n\nvar ethereumNode =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ethereumNode, _React$Component);\n\n  function ethereumNode() {\n    _classCallCheck(this, ethereumNode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ethereumNode).apply(this, arguments));\n  }\n\n  _createClass(ethereumNode, [{\n    key: \"render\",\n    value: function render() {\n      for (var i = 0; i < url.length; i++) {\n        dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Ethereum Node\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-firstoutline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Node usage\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/node/buffer-size/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/node/cached-size/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/node/cpu/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/bitcoin/node/memory/average/year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"line\",\n        className: \"mychart\",\n        width: \"100%\",\n        height: \"300\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })))))))))));\n    }\n  }]);\n\n  return ethereumNode;\n}(React.Component);\n\nexport default ethereumNode;","map":{"version":3,"sources":["/frontend/src/views/ethereum/node.js"],"names":["React","Card","CardHeader","CardTitle","CardBody","Row","Col","Link","chartData","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","tag","title","caption","ethereumNode","i","length","renderGraph","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\";\n import { Link } from 'react-router-dom';\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../variables/charts_month.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource = [];\nlet url = [\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-buffer-size/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-cached-size/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-cpu/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-memory/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/used-verificationprogres/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/peer-count/average/month\",\n  \"http://bcmon.kmu.ac.kr/coin-data/bitcoin/graphs/node/bytes/seconds/month\"\n];\nvar tag = [\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\",\n  \"value\"\n];\nvar title = [\n  \"Buffer Size \",\n  \"Cached Size \",\n  \"CPU Usage\",\n  \"Memory Usage\",\n  \"Verification Progress\",\n  \"Peer Count\",\n  \"Bytes\"\n];\nvar caption = [\n  \"The average used buffer size per day\",\n  \"The average used cache size per day\",\n  \"The average used CPU per day\",\n  \"The average used memory per day\",\n  \"The average verification progress per day\",\n  \"The number of peers connected per day\",\n  \"The average of nodes transaction rate per day\"\n];\n\nclass ethereumNode extends React.Component {\n\n  render() {\n    for(var i = 0; i < url.length; i++){\n      dataSource[i] = chartData.renderGraph(url[i], tag[i], title[i], caption[i], i);\n    }\n\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Ethereum Node</h2>\n          <div className=\"content\">\n          <Card className=\"card-firstoutline\">\n              <CardHeader>\n                <CardTitle>\n                  <h3>Node usage</h3>\n                </CardTitle>\n              </CardHeader>\n              <Row>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\">\n                  <Link to={\"/admin/bitcoin/node/buffer-size/average/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                            type=\"line\"\n                            className = \"mychart\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={dataSource[0]}\n                          />\n                      </div>\n                    </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\">\n                  <Link to={\"/admin/bitcoin/node/cached-size/average/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                            type=\"line\"\n                            className = \"mychart\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={dataSource[1]}\n                          />\n                      </div>\n                    </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\">\n                  <Link to={\"/admin/bitcoin/node/cpu/average/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                            type=\"line\"\n                            className = \"mychart\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={dataSource[2]}\n                          />\n                      </div>\n                    </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n              </Row>\n              <Row>\n                <Col lg=\"4\">\n                  <Card className=\"card-mini\">\n                  <Link to={\"/admin/bitcoin/node/memory/average/year\"}>\n                    <CardBody>\n                      <div className=\"chart-area\" >\n                        <ReactFusioncharts\n                            type=\"line\"\n                            className = \"mychart\"\n                            width=\"100%\"\n                            height=\"300\"\n                            dataFormat=\"JSON\"\n                            dataSource={dataSource[3]}\n                          />\n                      </div>\n                    </CardBody>\n                    </Link>\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ethereumNode;\n"]},"metadata":{},"sourceType":"module"}