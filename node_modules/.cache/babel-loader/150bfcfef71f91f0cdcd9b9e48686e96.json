{"ast":null,"code":"var result; //zoom in zoom out chart data\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render zoom in zoom out graph\n\n\nfunction renderZoomChart(url, in_value, out_value, title, caption) {\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (xhr.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return result;\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  try {\n    xhr.send(null);\n  } catch (e) {\n    return result;\n  }\n\n  return result;\n  /*\n  try {\n    summaryChart.send(null);\n  } catch (e) {\n    return chart_result[num];\n  }\n   return chart_result[num];\n  */\n}\n\nfunction process(in_value, out_value, title, caption, xhr) {\n  // 프로세스를 부름\n  var graphData = xhr.responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(graphData); //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n  var temp_label_array = [];\n  var temp_indata_array = [];\n  var temp_outdata_array = [];\n  label = {\n    \"category\": \"\"\n  };\n  Ivalue = {\n    \"serisename\": \"in_value\",\n    \"data\": \"\"\n  };\n  Ovalue = {\n    \"serisename\": \"out_value\",\n    \"data\": \"\"\n  };\n\n  for (var index = parseData.length - 1; index >= 0; index--) {\n    var data = {\n      \"label\": \"\"\n    };\n    var indata = {\n      \"label\": \"\",\n      \"value\": \"\"\n    };\n    var outdata = {\n      \"label\": \"\",\n      \"value\": \"\"\n    };\n    data.label = parseData[index][\"_id\"];\n    indata.label = parseData[index][\"_id\"];\n    indata.value = parseData[index][in_value];\n    outdata.label = parseData[index][\"_id\"];\n    outdata.value = parseData[index][out_value];\n    temp_label_array.push(data);\n    temp_indata_array.push(indata);\n    temp_outdata_array.push(outdata);\n  }\n\n  ;\n  label.category = temp_label_array;\n  Ivalue.data = temp_indata_array;\n  Ovalue.data = temp_outdata_array;\n  datasource = {\n    \"chart\": {\n      \"labelDisplay\": \"none\",\n      \"useEllipsesWhenOverflow\": \"0\",\n      \"caption\": title,\n      \"yaxisname\": \"\",\n      \"xaxisname\": \"\",\n      \"subcaption\": caption,\n      \"numbersuffix\": \"0\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"#17afb7, #b30710\",\n      // 선 색상 변경 가능\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"theme\": \"fusion\",\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,B,T,Q\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#25263b\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.5\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"5\",\n      \"baseFontColor\": \"ededf0\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      legendNumColumns: \"1\",\n      legendPosition: \"RIGHT\",\n      defaultCenterLabel: \"Total <br> $214\",\n      centerLabel: \"$label<br>$value\",\n      centerLabelBold: \"2\",\n      centerLabelFontSize: \"20\",\n      enableRotation: \"0\",\n      transposeAnimation: \"1\",\n      \"plotToolText\": \"<b>$label &nbsp;</b><b>$dataValue</b><div>\"\n    },\n    \"categories\": [label],\n    \"dataset\": [Ivalue, Ovalue]\n  };\n  console.log(\"LABEL-02-Ivalue: \");\n  console.log(Ivalue);\n  console.log(\"LABEL-02-Ovalue: \");\n  console.log(Ovalue);\n  console.log(\"DATASET-02-temp_indata_array: \");\n  console.log(temp_indata_array);\n  console.log(\"DATASET-02-temp_outdata_array: \");\n  console.log(temp_outdata_array);\n  console.log(\"DATATYPE-02: \"); //console.log(temp_data.toString())\n  //console.log(typeof temp_data)\n  //console.log(temp_indata.toString())\n  //console.log(typeof temp_indata)\n  //console.log(temp_outdata.toString())\n  //console.log(typeof temp_outdata)\n\n  console.log(\"DATATEXT-02: \");\n  console.log(datasource);\n  console.log(JSON.stringify(datasource));\n  console.log(typeof datasource);\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderZoomChart: renderZoomChart\n};","map":{"version":3,"sources":["/frontend/src/variables/charts_multipleMonth.js"],"names":["result","sleep","delay","start","Date","getTime","renderZoomChart","url","in_value","out_value","title","caption","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","process","alert","send","e","graphData","responseText","parseData","JSON","parse","datasource","label","Ivalue","Ovalue","temp_label_array","temp_indata_array","temp_outdata_array","index","length","data","indata","outdata","value","push","category","legendNumColumns","legendPosition","defaultCenterLabel","centerLabel","centerLabelBold","centerLabelFontSize","enableRotation","transposeAnimation","console","log","stringify","module","exports"],"mappings":"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","sourcesContent":["let result; //zoom in zoom out chart data\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render zoom in zoom out graph\nfunction renderZoomChart(url, in_value, out_value, title, caption){\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  xhr.onreadystatechange = function(){\n      if(xhr.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(xhr.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return result;\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  try{\n    xhr.send(null);\n  }catch(e){\n    return result;\n  }\n\n  return result;\n\n  /*\n  try {\n    summaryChart.send(null);\n  } catch (e) {\n    return chart_result[num];\n  }\n\n  return chart_result[num];\n  */\n}\n\nfunction process(in_value, out_value, title, caption, xhr){  // 프로세스를 부름\n  var graphData = xhr.responseText;          // get은 Text 방식으로\n  var parseData = JSON.parse(graphData);     //객체화 : 배열 처리\n\n  var datasource = {};\n\n  var label={};\n  var Ivalue = {};\n  var Ovalue = {};\n\n  var temp_label_array = [];\n  var temp_indata_array = [];\n  var temp_outdata_array = [];\n\n  label = {\"category\" : \"\"}\n  Ivalue = {\"serisename\" : \"in_value\", \"data\":\"\"}\n  Ovalue = {\"serisename\" : \"out_value\", \"data\":\"\"}\n\n  for (var index = parseData.length-1; index >= 0; index--) {\n    var data ={\"label\":\"\"};\n    var indata = {\"label\":\"\", \"value\":\"\"};\n    var outdata={\"label\":\"\", \"value\":\"\"};\n\n    data.label=parseData[index][\"_id\"];\n\n    indata.label=parseData[index][\"_id\"];\n    indata.value=parseData[index][in_value];\n\n    outdata.label=parseData[index][\"_id\"];\n    outdata.value=parseData[index][out_value];\n\n    temp_label_array.push(data);\n    temp_indata_array.push(indata);\n    temp_outdata_array.push(outdata);\n  };\n\n  label.category=temp_label_array;\n  Ivalue.data=temp_indata_array;\n  Ovalue.data=temp_outdata_array;\n\n  datasource = {\n    \"chart\": {\n      \"labelDisplay\": \"none\",\n      \"useEllipsesWhenOverflow\":\"0\",\n      \"caption\": title,\n      \"yaxisname\": \"\",\n      \"xaxisname\": \"\",\n      \"subcaption\": caption,\n      \"numbersuffix\": \"0\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"#17afb7, #b30710\",       // 선 색상 변경 가능\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"theme\": \"fusion\",\n\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,B,T,Q\",\n\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#25263b\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.5\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"5\",\n      \"baseFontColor\": \"ededf0\",\n\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n\n      legendNumColumns: \"1\",\n      legendPosition: \"RIGHT\",\n      defaultCenterLabel: \"Total <br> $214\",\n      centerLabel: \"$label<br>$value\",\n      centerLabelBold: \"2\",\n      centerLabelFontSize: \"20\",\n      enableRotation: \"0\",\n      transposeAnimation: \"1\",\n      \"plotToolText\": \"<b>$label &nbsp;</b><b>$dataValue</b><div>\"\n  }\n  ,\n  \"categories\": [label],\n  \"dataset\":[Ivalue, Ovalue]\n};\n\nconsole.log(\"LABEL-02-Ivalue: \")\nconsole.log(Ivalue)\n\nconsole.log(\"LABEL-02-Ovalue: \")\nconsole.log(Ovalue)\n\nconsole.log(\"DATASET-02-temp_indata_array: \")\nconsole.log(temp_indata_array)\n\nconsole.log(\"DATASET-02-temp_outdata_array: \")\nconsole.log(temp_outdata_array)\n\nconsole.log(\"DATATYPE-02: \")\n//console.log(temp_data.toString())\n//console.log(typeof temp_data)\n//console.log(temp_indata.toString())\n//console.log(typeof temp_indata)\n//console.log(temp_outdata.toString())\n//console.log(typeof temp_outdata)\n\nconsole.log(\"DATATEXT-02: \")\nconsole.log(datasource)\n\nconsole.log(JSON.stringify(datasource))\nconsole.log(typeof datasource)\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  renderZoomChart,\n};\n"]},"metadata":{},"sourceType":"module"}