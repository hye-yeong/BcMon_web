{"ast":null,"code":"!function (e) {\n  \"object\" == typeof module && \"undefined\" != typeof module.exports ? module.exports = e : e();\n}(function () {\n  (window.webpackJsonpFusionCharts = window.webpackJsonpFusionCharts || []).push([[6], {\n    1058: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n      var o = n(i(1059));\n      t.ZoomLine = o[\"default\"];\n      var a = n(i(1065));\n      t.ZoomLineDY = a[\"default\"];\n      var s = n(i(1068)),\n          r = {\n        name: \"zoomline\",\n        type: \"package\",\n        requiresFusionCharts: !0,\n        extension: function extension(e) {\n          e.addDep(s[\"default\"]), e.addDep(o[\"default\"]), e.addDep(a[\"default\"]);\n        }\n      };\n      t[\"default\"] = r;\n    },\n    1059: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n      var o = n(i(1060))[\"default\"];\n      t[\"default\"] = o;\n    },\n    1060: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n      var o = n(i(194)),\n          a = i(180),\n          s = n(i(638)),\n          r = n(i(1061)),\n          l = n(i(1063)),\n          c = i(192),\n          u = i(562),\n          h = i(1064),\n          d = i(188),\n          p = window.navigator.userAgent,\n          g = (0, d.getDep)(\"redraphael\", \"plugin\"),\n          f = window.doc,\n          m = \"rgba(192,192,192,\" + (/msie/i.test(p) && !window.opera ? .002 : 1e-6) + \")\",\n          v = window.parseFloat,\n          b = window.parseInt,\n          x = Math,\n          C = x.max,\n          y = x.min,\n          k = x.ceil,\n          w = x.floor,\n          E = 0;\n      g.addSymbol(h.symbolList);\n\n      var M = function (e) {\n        function t() {\n          var t;\n          return (t = e.call(this) || this).canvasborderthickness = 1, t.zoomX = !0, t.hasScroll = !0, t.eiMethods = {\n            zoomOut: function zoomOut(e) {\n              var t,\n                  i = this.apiInstance,\n                  n = i.getChildren && i.getChildren(\"canvas\")[0],\n                  o = n && n.getChildren(\"inputManager\");\n              o = o && o[0], i && o && i.addJob(\"zoomOut\" + E++, function () {\n                t = o.zoomOut(), \"function\" == typeof e && e(t);\n              }, c.priorityList.postRender);\n            },\n            zoomTo: function zoomTo(e, t, i) {\n              var n,\n                  o = this.apiInstance,\n                  s = o.getChildren && o.getChildren(\"canvas\")[0],\n                  r = s && s.getChildren(\"inputManager\");\n              if (e !== a.UNDEF && t !== a.UNDEF && (r = r && r[0], o && r)) return i ? void o.addJob(\"zoomTo\" + E++, function () {\n                n = r.zoomTo(e, t), \"function\" == typeof i && i(n);\n              }, c.priorityList.postRender) : r.zoomTo(e, t);\n            },\n            resetChart: function resetChart() {\n              var e = this.apiInstance,\n                  t = e.getChildren && e.getChildren(\"canvas\")[0],\n                  i = t && t.getChildren(\"inputManager\");\n              i = i && i[0], e && i && e.addJob(\"resetChart\" + E++, function () {\n                i.resetChart();\n              }, c.priorityList.postRender);\n            },\n            setZoomMode: function setZoomMode(e) {\n              var t = this.apiInstance,\n                  i = t.getChildren && t.getChildren(\"canvas\")[0],\n                  n = i && i.getChildren(\"inputManager\");\n              n = n && n[0], t && n && t.addJob(\"setZoomMode\" + E++, function () {\n                n.setZoomMode(e);\n              }, c.priorityList.postRender);\n            },\n            getViewStartIndex: function getViewStartIndex(e) {\n              var t,\n                  i,\n                  n,\n                  o = this.apiInstance;\n              if (!e) return t = o.getChildren(\"xAxis\")[0], i = t.getVisibleConfig().minValue, 0 === (n = Math.ceil(i)) ? 0 : n;\n              o.addJob(\"getViewStartIndex\" + E++, function () {\n                \"function\" == typeof e && (t = o.getChildren(\"xAxis\")[0], i = t.getVisibleConfig().minValue, n = Math.ceil(i), e(0 === n ? 0 : n));\n              }, c.priorityList.postRender);\n            },\n            getViewEndIndex: function getViewEndIndex(e) {\n              var t,\n                  i,\n                  n = this.apiInstance;\n              if (!e) return t = n.getChildren(\"xAxis\")[0], i = t.getVisibleConfig().maxValue, Math.floor(i);\n              n.addJob(\"getViewEndIndex\" + E++, function () {\n                \"function\" == typeof e && (t = n.getChildren(\"xAxis\")[0], i = t.getVisibleConfig().maxValue, e(Math.floor(i)));\n              }, c.priorityList.postRender);\n            }\n          }, t.eiMethods.scrollTo = u.scrollTo, t.registerFactory(\"dataset\", l[\"default\"], [\"vCanvas\"]), t;\n        }\n\n        (0, o[\"default\"])(t, e), t.getName = function () {\n          return \"ZoomLine\";\n        }, t.includeInputOptions = function () {\n          return [\"DragZoomIn\", \"DragPin\", \"ZoomResetButton\", \"ZoomOutButton\"];\n        };\n        var i = t.prototype;\n        return i.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Zoomable and Panable Multi-series Line Chart\", t.defaultDatasetType = \"zoomline\", t.showValues = 0, t.zeroplanethickness = 1, t.zeroplanealpha = 40, t.showzeroplaneontop = 0, t.enablemousetracking = !0, t.skipAttr = !0, t.showvalues = 0;\n        }, i.getName = function () {\n          return \"ZoomLine\";\n        }, i.parseChartAttr = function (t) {\n          e.prototype.parseChartAttr.call(this, t);\n          var i = this.config,\n              n = (t || this.getFromEnv(\"dataSource\")).chart;\n          i.useCrossline = Number(n.usecrossline) || n.usecrossline === a.UNDEF ? 1 : 0, i.drawTrendRegion = 0;\n        }, i.getInputConfigurations = function () {\n          var e = this,\n              t = e.config,\n              i = function i(_i, n) {\n            e.addJob(\"inputZoom\", function () {\n              var o = t.viewPortConfig;\n              o.dsi = _i, o.dei = n, e.updateManager(), e.getChildren(\"xAxis\")[0].prepareAttributes();\n            }, c.priorityList.configure);\n          };\n\n          return {\n            dragZoomIn: {\n              scaleX: !0,\n              scaleY: !1,\n              drawButton: !1,\n              boxStyle: {\n                stroke: t.zoomPaneStroke,\n                fill: t.zoomPaneFill,\n                \"stroke-width\": 0\n              },\n              catZoomLimit: 2,\n              skipGraphics: !0,\n              dragendFn: function dragendFn() {\n                return i(arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);\n              }\n            },\n            zoomResetButton: {\n              hookFn: i,\n              tooltext: t.btnResetChartTooltext\n            },\n            zoomOutButton: {\n              hookFn: i,\n              tooltext: t.btnZoomOutTooltext\n            },\n            dragPin: {\n              orientation: \"horizontal\",\n              attr: {\n                stroke: t.zoomPaneStroke,\n                fill: t.zoomPaneFill,\n                \"stroke-width\": 0\n              },\n              skipGraphics: !t.allowPinMode,\n              pinAttr: {\n                \"stroke-width\": 0,\n                stroke: \"none\",\n                fill: t.pinPaneFill,\n                \"shape-rendering\": \"crisp\"\n              },\n              strokeWidth: 0,\n              tooltext: t.showToolBarButtonTooltext && t.btnSwitchToPinModeTooltext || \"\"\n            }\n          };\n        }, i._setCategories = function () {\n          var e,\n              t,\n              i,\n              n,\n              o = this.config,\n              s = this.getFromEnv(\"dataSource\"),\n              r = s.chart || {},\n              l = this.getChildren(\"xAxis\"),\n              c = o.cdm,\n              u = o.cdmchar,\n              h = s.categories && s.categories[0].category || [];\n\n          if (o.cdm = c = (0, a.pluckNumber)(r.compactdatamode, 0), o.cdmchar = u = (0, a.pluck)(r.dataseparator, \"|\"), (c || \"string\" == typeof h) && h.split) {\n            for (t = [], i = 0, n = (e = h.split(u)).length; i < n; i += 1) {\n              t.push({\n                label: e[i]\n              });\n            }\n\n            this.config.categories = s.categories[0].category = t;\n          }\n\n          l[0].setAxisPadding(0, 0), l[0].setTickValues(t || h);\n        }, i.isWithinCanvas = function (e, t) {\n          return function (e, t) {\n            var i = t.get(\"config\"),\n                n = (0, a.getMouseCoordinate)(t.get(\"linkedItems\", \"container\"), e, t),\n                o = n.chartX,\n                s = n.chartY,\n                r = i.canvasLeft,\n                l = i.canvasTop,\n                c = i.canvasLeft + i.canvasWidth,\n                u = i.canvasHeight + i.canvasTop;\n            return n.insideCanvas = !1, n.originalEvent = e, o > r && o < c && s > l && s < u && (n.insideCanvas = !0), n;\n          }.call(this, e, t);\n        }, i.highlightPoint = function (e, t, i, n, o, a) {\n          var s,\n              r,\n              l,\n              c,\n              u,\n              h,\n              d = this,\n              p = d.config,\n              g = d.getFromEnv(\"animationManager\"),\n              v = d.components,\n              b = d.graphics,\n              x = Number(e),\n              C = b.tracker,\n              y = v.dataset[o],\n              k = y && y.config,\n              w = y && k.zoomedRadius || 0,\n              E = y && k.hoverCosmetics,\n              M = E && E.fill,\n              P = E && E.borderColor,\n              L = E && E.borderThickness,\n              _ = function _(e) {\n            d.plotEventHandler(this, e);\n          },\n              T = function T(e) {\n            d.plotEventHandler(this, e, \"dataplotRollover\");\n          },\n              N = function N(e) {\n            d.plotEventHandler(this, e, \"dataplotRollout\");\n          };\n\n          C || (s = b.tracker = g.setAnimation({\n            el: \"circle\",\n            attr: {\n              cx: 0,\n              cy: 0,\n              r: w,\n              fill: x ? M : m,\n              stroke: x ? P : m,\n              \"stroke-width\": x ? L : 0,\n              \"clip-rect\": p.canvasLeft + \",\" + p.canvasTop + \",\" + p.canvasWidth + \",\" + p.canvasHeight\n            },\n            container: b.trackerGroup,\n            component: d\n          }).on(\"fc-click\", _).hover(T, N)), n && s.data(\"eventArgs\", {\n            x: n.x,\n            y: n.y,\n            tooltip: n.tooltip,\n            link: n.link\n          }), p.lastHoveredPoint = n, d.getFromEnv(\"toolTipController\").enableToolTip(s, a), s.transform(\"t\" + (t + p.canvasLeft) + \",\" + (i + p.canvasTop)), n && (r = \"mouseover\", l = s && s.node, c = p.lastMouseEvent, h = c, l && r && (h || (h = {}), h.originalEvent && (h = h.originalEvent), h.touches && (h = h.touches[0]), l.dispatchEvent ? (MouseEvent ? u = new MouseEvent(r, {\n            bubbles: !!h.bubbles,\n            cancelable: !!h.cancelable,\n            clientX: h.clientX || h.pageX && h.pageX - f.body.scrollLeft - f.documentElement.scrollLeft || 0,\n            clientY: h.clientY || h.pageY && h.pageY - f.body.scrollTop - f.documentElement.scrollTop || 0,\n            screenX: h.screenX || 0,\n            screenY: h.screenY || 0,\n            pageX: h.pageX || 0,\n            pageY: h.pageY || 0\n          }) : f.createEvent && (u = f.createEvent(\"HTMLEvents\")).initEvent(r, !!h.bubbles, !!h.cancelable), u.eventName = r, u && l.dispatchEvent(u)) : f.createEventObject && l.fireEvent && ((u = f.createEventObject()).eventType = r, u.eventName = r, l.fireEvent(\"on\" + r, u))));\n        }, i.configureAttributes = function (t) {\n          e.prototype.configureAttributes.call(this, t);\n          var i,\n              n,\n              o = this.getFromEnv(\"dataSource\").chart || {},\n              s = this.getFromEnv(\"color-manager\"),\n              r = s.getColor(\"canvasBorderColor\"),\n              l = (0, a.pluckNumber)(o.showtoolbarbuttontooltext, 1);\n          i = (n = this.config).style, n.stepZoom = 400 / (100 - (0, a.pluckNumber)(o.stepzoom, 25)), n.stepZoom <= 2 && (n.stepZoom = 1.9), (0, a.extend2)(n, {\n            useRoundEdges: (0, a.pluckNumber)(o.useroundedges, 0),\n            zoomType: \"x\",\n            canvasPadding: (0, a.pluckNumber)(o.canvaspadding, 0),\n            scrollColor: (0, a.getFirstColor)((0, a.pluck)(o.scrollcolor, s.getColor(\"altHGridColor\"))),\n            scrollShowButtons: !!(0, a.pluckNumber)(o.scrollshowbuttons, 1),\n            scrollHeight: (0, a.pluckNumber)(o.scrollheight, 16) || 16,\n            scrollBarFlat: (0, a.pluckNumber)(o.flatscrollbars, 0),\n            allowPinMode: (0, a.pluckNumber)(o.allowpinmode, 1),\n            skipOverlapPoints: (0, a.pluckNumber)(o.skipoverlappoints, 1),\n            showToolBarButtonTooltext: l,\n            btnResetChartTooltext: l ? (0, a.pluck)(o.btnresetcharttooltext, \"Reset Chart\") : \"\",\n            btnZoomOutTooltext: l ? (0, a.pluck)(o.btnzoomouttooltext, \"Zoom out one level\") : \"\",\n            btnSwitchToZoomModeTooltext: l ? (0, a.pluck)(o.btnswitchtozoommodetooltext, \"<strong>Switch to Zoom Mode</strong><br/>Select a subset of data to zoom into it for detailed view\") : \"\",\n            btnSwitchToPinModeTooltext: l ? (0, a.pluck)(o.btnswitchtopinmodetooltext, \"<strong>Switch to Pin Mode</strong><br/>Select a subset of data and compare with the rest of the view\") : \"\",\n            pinPaneFill: (0, a.convertColor)((0, a.pluck)(o.pinpanebgcolor, r), (0, a.pluckNumber)(o.pinpanebgalpha, 15)),\n            zoomPaneFill: (0, a.convertColor)((0, a.pluck)(o.zoompanebgcolor, \"#b9d5f1\"), (0, a.pluckNumber)(o.zoompanebgalpha, 30)),\n            zoomPaneStroke: (0, a.convertColor)((0, a.pluck)(o.zoompanebordercolor, \"#3399ff\"), (0, a.pluckNumber)(o.zoompaneborderalpha, 80)),\n            showPeakData: (0, a.pluckNumber)(o.showpeakdata, 0),\n            maxPeakDataLimit: (0, a.pluckNumber)(o.maxpeakdatalimit, o.maxpeaklimit, null),\n            minPeakDataLimit: (0, a.pluckNumber)(o.minpeakdatalimit, o.minpeaklimit, null),\n            crossline: {\n              enabled: (0, a.pluckNumber)(o.showcrossline, 1),\n              line: {\n                \"stroke-width\": (0, a.pluckNumber)(o.crosslinethickness, 1),\n                stroke: (0, a.getFirstColor)((0, a.pluck)(o.crosslinecolor, \"#000000\")),\n                \"stroke-opacity\": (0, a.pluckNumber)(o.crosslinealpha, 20) / 100\n              },\n              labelEnabled: (0, a.pluckNumber)(o.showcrosslinelabel, o.showcrossline, 1),\n              labelstyle: {\n                fontSize: v(o.crosslinelabelsize) ? v(o.crosslinelabelsize) + \"px\" : i.outCanfontSize,\n                fontFamily: (0, a.pluck)(o.crosslinelabelfont, i.outCanfontFamily)\n              },\n              valueEnabled: (0, a.pluckNumber)(o.showcrosslinevalues, o.showcrossline, 1),\n              valuestyle: {\n                fontSize: v(o.crosslinevaluesize) ? v(o.crosslinevaluesize) + \"px\" : i.inCanfontSize,\n                fontFamily: (0, a.pluck)(o.crosslinevaluefont, i.inCanvasStyle.fontFamily)\n              }\n            },\n            useCrossline: (0, a.pluckNumber)(o.usecrossline, 1),\n            tooltipSepChar: (0, a.pluck)(o.tooltipsepchar, \", \"),\n            showTerminalValidData: (0, a.pluckNumber)(o.showterminalvaliddata, 0)\n          });\n        }, i.getValuePixel = function (e) {\n          var t = this.config.viewPortConfig;\n          return t.ddsi + w(e / t.ppp);\n        }, i.getDatasets = function () {\n          var e = [];\n          return this.iterateComponents(function (t) {\n            t.getType && \"dataset\" === t.getType() && e.push(t);\n          }), e;\n        }, i.__preDraw = function () {\n          var e,\n              t,\n              i,\n              n,\n              o,\n              s = this.config,\n              r = this.getFromEnv(\"dataSource\").chart,\n              l = s.cdm,\n              c = this.getChildren(\"xAxis\")[0],\n              u = s.viewPortConfig,\n              h = this.getChildren(\"canvas\")[0].config,\n              d = C(h.canvasPadding, h.canvasPaddingLeft, h.canvasPaddingRight),\n              p = this.getChildren(\"yAxis\")[0],\n              g = s.canvasHeight,\n              f = this.getFromEnv(\"dataSource\").chart,\n              m = c.getTicksLen(),\n              v = c.getVisibleConfig(),\n              x = v.minValue,\n              y = v.maxValue,\n              k = (0, a.pluckNumber)(r.displaystartindex, x, 1),\n              w = (0, a.pluckNumber)(r.displayendindex, y, m || 2),\n              E = b(k, 10) - 1,\n              M = b(w, 10) - 1,\n              P = 0;\n\n          if (o = (n = this.getDatasets()).length, s.borderWidth = (0, a.pluckNumber)(f.showborder, 1) ? (0, a.pluckNumber)(f.borderthickness, 1) : 0, s.updateAnimDuration = 500, s.status = \"zoom\", s.maxZoomLimit = (0, a.pluckNumber)(r.maxzoomlimit, 1e3), s.viewPortHistory = [], (t = (0, a.pluckNumber)(r.pixelsperpoint, 15)) < 1 && (t = 1), (i = (0, a.pluckNumber)(r.pixelsperlabel, r.xaxisminlabelwidth, c.getAxisConfig(\"labels\").rotation ? 20 : 60)) < t && (i = t), (E < 0 || E >= (m - 1 || 1)) && (E = 0), (M <= E || M > (m - 1 || 1)) && (M = m - 1 || 1), (u = s.viewPortConfig = (0, a.extend2)(s.viewPortConfig, {\n            amrd: (0, a.pluckNumber)(r.anchorminrenderdistance, 20),\n            nvl: (0, a.pluckNumber)(r.numvisiblelabels, 0),\n            cdm: l,\n            oppp: t,\n            oppl: i,\n            dsi: E,\n            dei: M,\n            vdl: M - E,\n            clen: m,\n            offset: 0,\n            step: 1,\n            llen: 0,\n            alen: 0,\n            ddsi: E,\n            ddei: M,\n            ppc: 0\n          })).clen) {\n            for (; o--;) {\n              e = n[o].config, P = C(P, e.drawanchors && (e.anchorradius || 0) + (Number(e.anchorborderthickness) || 0) || 0);\n            }\n\n            s.overFlowingMarkerWidth = P, d = s.canvasPadding = C(P, d), s._prezoomed = u.dei - u.dsi < u.clen - 1, s._visw = Math.max(1, s.canvasWidth - 2 * d), s._visx = s.canvasLeft + d, s._visout = -(s.height + g + 1e3), s._yminValue = p.getLimit().min, s._ymin = p.getPixel(s._yminValue), (0, a.pluckNumber)(r.displaystartindex, r.displayendindex) && c.setVisibleConfig(k, w), this.updateManager();\n          }\n        }, i.resetZoom = function () {\n          var e = this.config.viewPortHistory,\n              t = e[0];\n          return !!e.length && (e.length = 0, this.zoomTo(t.dsi, t.dei, t) && this.fireChartInstanceEvent(\"zoomReset\", this._zoomargs, [this.getFromEnv(\"chartInstance\").id]), !0);\n        }, i.zoomOut = function () {\n          var e,\n              t,\n              i,\n              n,\n              o,\n              a = this.config,\n              s = a.viewPortHistory;\n          return e = s.pop(), t = s[0] || a.viewPortConfig, e ? (i = e.dsi, n = e.dei) : a._prezoomed && (i = 0, n = t.clen - 1), (o = this.zoomTo(i, n, e)) && this.fireChartInstanceEvent(\"zoomedout\", o), !0;\n        }, i.zoomRangePixels = function (e, t) {\n          var i,\n              n,\n              o = this.config.viewPortConfig,\n              a = o.ppp,\n              s = o.ddsi;\n          i = s + w(e / a), n = s + w(t / a), o.dsi = i, o.dei = n, this.updateManager();\n        }, i.prepareAttributes = function () {\n          this.config.hasChartMessage || (this.__preDraw(), e.prototype.prepareAttributes.call(this));\n        }, i.getValue = function (e) {\n          var t = this.config,\n              i = t.viewPortConfig,\n              n = this.getOriginalPositions(e.x, e.y, e.x, e.y),\n              o = n[0],\n              a = n[1],\n              s = this.getChildren(\"xAxis\")[0],\n              r = this.getChildren(\"yAxis\")[0],\n              l = s.config.axisRange,\n              c = r.config.axisRange,\n              u = l.min,\n              h = l.max,\n              d = c.max,\n              p = c.min,\n              g = t.canvasWidth * i.scaleX / (h - u),\n              f = t.canvasHeight * i.scaleY / (d - p);\n          return {\n            x: u + (o - t.canvasLeft) / g,\n            y: d - (a - t.canvasTop) / f\n          };\n        }, i.getOriginalPositions = function (e, t, i, n) {\n          var o = this.config,\n              a = o.viewPortConfig,\n              s = a.scaleX,\n              r = a.scaleY,\n              l = a.x,\n              c = a.y,\n              u = y(e, i),\n              h = C(e, i),\n              d = y(t, n),\n              p = C(t, n);\n          return [l + (u = u < 0 ? 0 : u) / s, c + (d = d < 0 ? 0 : d) / r, ((h = h > o.canvasWidth ? o.canvasWidth : h) - u) / s, ((p = p > o.canvasHeight ? o.canvasHeight : p) - d) / r];\n        }, i.updateManager = function () {\n          var e,\n              t,\n              i,\n              n,\n              o,\n              a,\n              s,\n              r,\n              l,\n              c,\n              u,\n              h,\n              d,\n              p,\n              g,\n              f,\n              m,\n              b = this.getDatasets(),\n              x = b.length,\n              y = this.config,\n              w = y.viewPortConfig,\n              E = y._visw,\n              M = this.getChildren(\"xAxis\")[0],\n              P = function P(e) {\n            return M.getPixel(e, {\n              wrtVisible: !0\n            });\n          },\n              L = M.getAxisConfig(\"labels\").style;\n\n          if (y.legendClicked) for (e = 0; e < x; e += 1) {\n            b[e].draw();\n          } else !w && (w = y.viewPortConfig), o = w.oppp, f = w.nvl, h = w.dsi, d = w.dei, a = w.vdl = d - h, s = w.ppl = f ? E / f : w.oppl, l = w.step = (r = w.ppp = E / a) < o ? k(o / r) : 1, c = w.lskip = k(C(s, v(L.lineHeight)) / r / l), p = w.dsi, g = w.dei, w.offset = 0, u = w.norm = p % l, w.ddsi = p -= u, w.ddei = g = g + 2 * l - u, w._ymin = y._ymin, w._yminValue = y._yminValue, w.x = (P(p) - P(M.getVisibleConfig().minValue) + w.offset) / w.scaleX, g - p > M.getTicksLen() ? w.scaleX = 1 : w.scaleX = M.getTicksLen() / Math.abs(g - p - l - .9), m = M.getVisibleConfig(), i = Math.ceil((m.maxValue - m.minValue + 1) / f), n = y.viewPortConfig && y.viewPortConfig.scaleX, t = Math.max(Math.round(M.getAxisConfig(\"labelStep\") / n), f ? i : c * l), M.setLabelConfig({\n            step: t\n          });\n        }, i.getParsedLabel = function (e) {\n          var t = this.xlabels;\n          return t.parsed[e] || (t.parsed[e] = (0, a.parseUnsafeString)(t.data[e] || \"\"));\n        }, i._setAxisScale = function () {\n          this.getChildren(\"xAxis\")[0].setScrollType(\"always\");\n        }, i.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(s[\"default\"]);\n\n      t[\"default\"] = M;\n    },\n    1061: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n      var o = n(i(194)),\n          a = i(180),\n          s = n(i(491)),\n          r = i(188),\n          l = n(i(1062)),\n          c = a.hasTouch ? a.TOUCH_THRESHOLD_PIXELS : a.CLICK_THRESHOLD_PIXELS;\n      (0, r.addDep)({\n        name: \"zoomlineAnimation\",\n        type: \"animationRule\",\n        extension: l[\"default\"]\n      });\n\n      var u = function (e) {\n        function t() {\n          return e.apply(this, arguments) || this;\n        }\n\n        (0, o[\"default\"])(t, e);\n        var i = t.prototype;\n        return i.getType = function () {\n          return \"dataset\";\n        }, i.getName = function () {\n          return \"zoomLine\";\n        }, i.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this), this.config.skipIgnorerIndices = [], this.config.showPeakData = 0, this.config.showTerminalValidData = 0, this.config.minPeakDataLimit = null, this.config.maxPeakDataLimit = null;\n        }, i._plotConfigure = function (t, i, n) {\n          e.prototype._plotConfigure.call(this, t, i, n);\n\n          var o = this.config,\n              a = this.components.data[t].config.setValue,\n              s = n || this.getFromEnv(\"xAxis\").getTicksLen(),\n              r = o.showTerminalValidData,\n              l = o.showPeakData,\n              c = o.maxPeakDataLimit,\n              u = o.minPeakDataLimit,\n              h = c > u,\n              d = a > c || a < u;\n          l && (c < u && a > c && a < u ? o.skipIgnorerIndices.push(t) : h && d && o.skipIgnorerIndices.push(t)), r && t === s - 1 && o.skipIgnorerIndices.push(t);\n        }, i.drawPlots = function () {\n          var t = this.getFromEnv(\"xAxis\"),\n              i = this.getFromEnv(\"chartConfig\").viewPortConfig;\n          t.getPixel(i.step) - t.getPixel(0) >= i.amrd ? e.prototype.drawPlots.call(this) : this.hideAllAnchors();\n        }, i._setConfigure = function (t, i) {\n          var n = this.config,\n              o = this.getFromEnv(\"chart\"),\n              s = o.config,\n              r = o.getFromEnv(\"dataSource\").chart,\n              l = this.config.JSONData;\n          n.drawanchors = (0, a.pluckNumber)(r.drawanchors, r.showanchors, 1), n.anchorradius = (0, a.pluckNumber)(l.anchorradius, r.anchorradius, n.linethickness + 2), n.showTerminalValidData = (0, a.pluckNumber)(s.showTerminalValidData, 0), n.showPeakData = (0, a.pluckNumber)(s.showPeakData, 0), n.showPeakData && (s.maxPeakDataLimit || s.minPeakDataLimit) && (n.maxPeakDataLimit = (0, a.pluckNumber)(s.maxPeakDataLimit, Number.MIN_SAFE_INTEGER), n.minPeakDataLimit = (0, a.pluckNumber)(s.minPeakDataLimit, Number.MAX_SAFE_INTEGER)), e.prototype._setConfigure.call(this, t, i);\n        }, i.configureAttributes = function (t) {\n          e.prototype.configureAttributes.call(this, t);\n          var i,\n              n,\n              o = {},\n              s = this.getFromEnv(\"chart\").getFromEnv(\"dataSource\").chart;\n          i = (n = this.config).linethickness + (0, a.pluckNumber)(s.pinlinethicknessdelta, 1), o[\"stroke-width\"] = i > 0 && i || 0, o[\"stroke-dasharray\"] = [3, 2], o.stroke = (0, a.hashify)(n.linecolor), o[\"stroke-opacity\"] = n.alpha / 100, o[\"stroke-linejoin\"] = n[\"stroke-linejoin\"] = \"round\", o[\"stroke-linecap\"] = n[\"stroke-linecap\"] = \"round\", n.pin = o, n.animation = !1, n.transposeanimduration = 0, n.defaultPadding = {\n            left: 0,\n            right: 0\n          };\n        }, i.drawLabel = function () {\n          return this;\n        }, i.isWithinShape = function (e, t, i, n) {\n          var o, s, r, l, u, h, d, p, g, f, m, v;\n          if (e) return o = e.config.anchorProps, s = e.config, l = o.borderThickness, this, u = this.components.data, h = (0, a.pluckNumber)(s.dragTolerance, 0), d = e._xPos, null !== (p = e._yPos) ? (v = e.config.hoverEffects, r = Math.max(o.radius, v && v.anchorRadius || 0, c) + l / 2, g = i - d, f = n - p, ((m = Math.sqrt(Math.pow(g, 2) + Math.pow(f, 2))) <= r || m <= h) && {\n            pointIndex: t,\n            hovered: !0,\n            pointObj: u[t]\n          }) : void 0;\n        }, i.hideAllAnchors = function () {\n          var e,\n              t,\n              i,\n              n = this.components.data;\n\n          for (t = 0, i = n.length; t < i; t++) {\n            (e = n[t]) && e.graphics && e.graphics.element && e.graphics.element.hide();\n          }\n        }, i._firePlotEvent = function (e, t, i) {\n          var n,\n              o,\n              a,\n              s = this.getFromEnv(\"chart\"),\n              r = this.components.data,\n              l = this.getFromEnv(\"toolTipController\"),\n              c = r[t],\n              u = c.graphics.element,\n              h = this.config.currentToolTip,\n              d = !s.config.useCrossline;\n\n          switch (a = (n = c.config).setLink, o = n.eventArgs, e) {\n            case \"fc-mouseover\":\n              d && this._decideTooltipType(t, i), this._rolloverResponseSetter(s, c, i), a && (u.node.style.cursor = \"pointer\");\n              break;\n\n            case \"fc-mouseout\":\n              l.hide(h), this._rolloutResponseSetter(s, c, i), a && (u.node.style.cursor = \"default\");\n              break;\n\n            case \"fc-click\":\n              s.plotEventHandler(u, i, \"dataplotclick\", o);\n              break;\n\n            case \"fc-mousemove\":\n              d && this._decideTooltipType(t, i);\n          }\n        }, i.calculateScrollRange = function () {\n          var e = this.config,\n              t = this.getFromEnv(\"xAxis\"),\n              i = t.getTicksLen(),\n              n = this.getFromEnv(\"chartConfig\").viewPortConfig.step || 1;\n          e.scrollMinVal = Math.max(Math.round(t.getVisibleConfig().minValue), 0) - n, e.scrollMaxVal = Math.min(Math.round(t.getVisibleConfig().maxValue) + 1, i) + n, e.scrollMinValForLabel = Math.max(Math.round(t.getVisibleConfig().minValue), 0) - n, e.scrollMaxValForLabel = Math.min(Math.round(t.getVisibleConfig().maxValue) + 1, i) + n, e.scrollMinVal -= e.scrollMinVal % n, e.scrollMinValForLabel -= e.scrollMinValForLabel % n;\n        }, t;\n      }(s[\"default\"]);\n\n      t[\"default\"] = u;\n    },\n    1062: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n      var o = {\n        \"initial.dataset.zoomLine\": n(i(494))[\"default\"][\"initial.dataset.line\"]\n      };\n      t[\"default\"] = o;\n    },\n    1063: function _(e, t, i) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            i,\n            a,\n            s,\n            r,\n            l,\n            c,\n            u,\n            h = e.getFromEnv(\"dataSource\"),\n            d = h.chart || {},\n            p = e.config,\n            g = h.dataset,\n            f = e.getChildren().canvas[0].getChildren(\"vCanvas\")[0];\n        p.cdm = t = (0, n.pluckNumber)(d.compactdatamode, 0), p.cdmchar = i = (0, n.pluck)(d.dataseparator, o), g || e.setChartMessage();\n\n        for (s = 0; s < g.length; s++) {\n          if (a = g[s], t && a.data && a.data.split) {\n            for (c = a.data.split(i), r = [], l = 0, u = c.length; l < u; l++) {\n              r.push({\n                value: c[l]\n              });\n            }\n\n            a.data = r;\n          }\n        }\n\n        (0, n.datasetFactory)(f, e.getDSdef(), \"dataset\", g.length, g), e.iterateComponents(function (e) {\n          e.getType && \"dataset\" === e.getType() && e.createPinElem && e.addEventListener(\"createpinelements\", e.createPinElem);\n        });\n      };\n      var n = i(180),\n          o = \"|\";\n    },\n    1065: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n      var o = n(i(1066))[\"default\"];\n      t[\"default\"] = o;\n    },\n    1066: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n\n      var o = n(i(194)),\n          a = n(i(1060)),\n          s = i(538),\n          r = n(i(539)),\n          l = n(i(1067)),\n          c = function (e) {\n        function t() {\n          var t;\n          return (t = e.call(this) || this).getSpecificxAxisConf = s.getSpecificxAxisConf, t.getSpecificyAxisConf = s.getSpecificyAxisConf, t.registerFactory(\"axis\", r[\"default\"], [\"canvas\"]), t.registerFactory(\"dataset\", l[\"default\"], [\"vCanvas\"]), t;\n        }\n\n        (0, o[\"default\"])(t, e), t.getName = function () {\n          return \"ZoomLineDy\";\n        };\n        var i = t.prototype;\n        return i.getName = function () {\n          return \"ZoomLineDy\";\n        }, i.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Zoomable and Panable Multi-series Dual-axis Line Chart\", t.defaultDatasetType = \"zoomline\", t.isdual = !0, t.syncaxislimits = 0;\n        }, i._feedAxesRawData = function () {\n          return s._feedAxesRawData.call(this);\n        }, t;\n      }(a[\"default\"]);\n\n      c.prototype.setAxisDimention = s.setAxisDimention;\n      var u = c;\n      t[\"default\"] = u;\n    },\n    1067: function _(e, t, i) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            i,\n            s,\n            r,\n            l,\n            c,\n            u,\n            h,\n            d,\n            p = e.getFromEnv(\"dataSource\"),\n            g = p.chart || {},\n            f = e.config,\n            m = p.dataset,\n            v = e.getChildren().canvas[0],\n            b = [],\n            x = [],\n            C = [],\n            y = [],\n            k = v.getChildren(\"vCanvas\");\n        f.cdm = t = (0, n.pluckNumber)(g.compactdatamode, 0), f.cdmchar = i = (0, n.pluck)(g.dataseparator, o), m || e.setChartMessage();\n\n        for (r = 0; r < m.length; r++) {\n          if (s = m[r], t && s.data && s.data.split) {\n            for (u = s.data.split(i), l = [], c = 0, h = u.length; c < h; c++) {\n              l.push({\n                value: u[c]\n              });\n            }\n\n            s.data = l;\n          }\n        }\n\n        for (r = 0; r < m.length; r++) {\n          d = m[r], \"s\" === (d.parentyaxis || \"\").toLowerCase() ? (y.push(d), x.push(r)) : (C.push(d), b.push(r));\n        }\n\n        C.length ? (0, n.datasetFactory)(k[0], e.getDSdef(), \"dataset_line\", C.length, C, b) : a(k[0]);\n        y.length ? (0, n.datasetFactory)(k[1], e.getDSdef(), \"dataset_line\", y.length, y, x) : a(k[1]);\n        e.iterateComponents(function (e) {\n          e.getType && \"dataset\" === e.getType() && e.createPinElem && e.addEventListener(\"createpinelements\", e.createPinElem);\n        });\n      };\n\n      var n = i(180),\n          o = \"|\",\n          a = function a(e) {\n        e && e.iterateComponents(function (e) {\n          \"dataset\" === e.getType() && e.remove();\n        });\n      };\n    },\n    1068: function _(e, t, i) {\n      \"use strict\";\n\n      var n = i(174);\n      t.__esModule = !0, t[\"default\"] = void 0;\n\n      var o,\n          a,\n          s,\n          r,\n          l = n(i(197)),\n          c = n(i(194)),\n          u = i(180),\n          h = i(195),\n          d = Math,\n          p = d.max,\n          g = d.min,\n          f = 0,\n          m = \"ontouchstart\" in window,\n          v = {\n        zoomlinedy: !0,\n        zoomline: !0\n      },\n          b = function b() {\n        this.remove();\n      },\n          x = function x() {\n        this.remove();\n      },\n          C = function C(e, t, i) {\n        return i.getFromEnv(\"animationManager\").setAnimation({\n          el: \"group\",\n          attr: {\n            name: e\n          },\n          container: t,\n          state: \"appearing\",\n          component: i,\n          label: \"group\"\n        });\n      },\n          y = function y(e) {\n        var t,\n            i,\n            n,\n            o = {},\n            s = Number.POSITIVE_INFINITY;\n\n        for (t = 0; t < this.length; t++) {\n          n = (i = this[t] - e) < 0 ? a.NEG : a.POS, (i = Math.abs(i)) <= s && (s = i, o.absValue = i, o.noScaleSide = n);\n        }\n\n        return o;\n      },\n          k = function k(e) {\n        return {\n          onMouseOut: function onMouseOut() {\n            e.hide(), e.position = o;\n          },\n          onMouseMove: function onMouseMove(t) {\n            var i, n, o, a, s, r, l, c, h, d, p, g;\n            e.disabled || e._mouseIsDown && !m || (n = e.getZoomInfo(), o = e.getGraphicalElement(\"line\"), a = n.step, r = (s = e.chart).getChildren(\"xAxis\")[0], c = (l = s.get(\"config\")).canvasLeft, h = (0, u.getMouseCoordinate)(e.getFromEnv(\"chart-container\"), t, s).chartX, d = r.getVisibleConfig(), p = r.getAxisConfig(\"axisDimention\").x - c, g = (g = e.getDataIndexFromPixel(Math.round(h))) + ((i = g % a) > a / 2 ? a - i : -i), h = r.getPixel(g, {\n              wrtVisible: !0\n            }) - p - c, h -= n.offset, o.transform([\"T\", Math.round(h), 0]), e.hidden && 0 !== l.crossline.enabled && e.show(), (g < d.minValue || g > d.maxValue) && e.hide(), (g !== e.position || e.hidden) && (e.position = g, e.lineX = h, e.updateLabels()));\n          }\n        };\n      },\n          w = function (e) {\n        function t() {\n          var t;\n          return (t = e.call(this) || this).config.handlers = k((0, l[\"default\"])(t)), t;\n        }\n\n        (0, c[\"default\"])(t, e);\n        var i = t.prototype;\n        return i.configureAttributes = function (e) {\n          this.config.options = e;\n        }, i.draw = function () {\n          var e,\n              t,\n              i,\n              n,\n              o,\n              a,\n              s,\n              r,\n              l = {},\n              c = this.getFromEnv(\"chart\"),\n              h = c.getFromEnv()[\"number-formatter\"],\n              d = c.config,\n              p = this.left = c.getChildren(\"xAxis\")[0].getAxisConfig(\"axisDimention\").x,\n              g = this.top = d.canvasTop,\n              f = this.height = d.canvasHeight,\n              m = this._visout = d._visout,\n              v = [],\n              y = this.getFromEnv(\"animationManager\"),\n              k = this.getGraphicalElement(\"line\"),\n              w = this.config.options,\n              E = w.labelstyle,\n              M = w.valuestyle,\n              P = c.getChildren(\"yAxis\")[0],\n              L = P.getLimit(),\n              _ = c.getChildren(\"yAxis\")[1],\n              T = _ && _.getLimit(),\n              N = this.getGraphicalElement(\"labels\"),\n              F = [],\n              S = this.getGraphicalElement(\"positionLabel\"),\n              D = this.getLinkedParent().getChildContainer(\"crosslineBottom\"),\n              A = this.getLinkedParent().getChildContainer(\"crosslineTop\");\n\n          if (c.iterateComponents(function (e) {\n            e.getType && \"dataset\" === e.getType() && !e.getState(\"removed\") && v.push(e);\n          }), this.plots = v, this.width = d._visw, o = this.group, (o = this.getContainer(\"valueGroup\")) || (o = this.addContainer(\"valueGroup\", C(\"crossline-value-group\", A, this))), (r = this.getContainer(\"labelGroup\")) || (r = this.addContainer(\"labelGroup\", C(\"crossline-label-group\", A, this))).insertBefore(c.getChildContainer(\"plotGroup\")), this.container = D, o.attr({\n            transform: [\"T\", p, d._ymin]\n          }).css(M), a = y.setAnimation({\n            el: k || \"path\",\n            container: D,\n            doNotRemove: !0,\n            attr: (0, u.extend2)({\n              path: [\"M\", p, g, \"l\", 0, f]\n            }, w.line)\n          }).toBack(), k || this.addGraphicalElement(\"line\", a, !1), w.labelEnabled && (l.x = m, l.y = g + f + (d.scrollHeight || 0) + 2.5, l[\"vertical-align\"] = \"top\", l.direction = d.textDirection, l.text = \"\"), s = y.setAnimation({\n            el: S || \"text\",\n            attr: w.labelEnabled && l,\n            css: w.labelEnabled && E,\n            container: r,\n            doNotRemove: !0,\n            callback: !w.labelEnabled && b\n          }), !S && w.labelEnabled && this.addGraphicalElement(\"positionLabel\", s, !1), this.hide(), this.ppixelRatio = -P.config.axisDimention.axisLength / P.getVisibleLength(), this.spixelRatio = _ && -_.config.axisDimention.axisLength / _.getVisibleLength(), this.yminValue = d._yminValue, this.pyaxisminvalue = L.min, this.pyaxismaxvalue = L.max, this.syaxisminvalue = T && T.min, this.syaxismaxvalue = T && T.max, this.positionLabels = d.xlabels || {\n            data: [],\n            parsed: []\n          }, this.chart = c, e = 0, w.valueEnabled) {\n            for (t = v.length; e < t; e += 1) {\n              i = v[e], n = (0, u.hashify)(i.config.linecolor), l.x = 0, l.y = m, l.fill = n, l.direction = d.textDirection, l.text = \"\", l[\"text-bound\"] = M[\"text-bound\"], l.lineHeight = M.lineHeight, F[e] = y.setAnimation({\n                el: N && N[e] || \"text\",\n                container: o,\n                doNotRemove: !0,\n                attr: l\n              }), (!N || !N[e]) && this.addGraphicalElement(\"labels\", F[e], !0);\n            }\n\n            this.numberFormatter = h;\n          }\n\n          for (t = N && N.length; e < t; e++) {\n            y.setAnimation({\n              el: N[e],\n              component: this,\n              doNotRemove: !0,\n              callback: x\n            });\n          }\n\n          N && N.splice(v.length);\n        }, i.getType = function () {\n          return \"crossline\";\n        }, i.getName = function () {\n          return \"crossLine\";\n        }, i.getZoomInfo = function () {\n          return this.getFromEnv(\"chartConfig\").viewPortConfig;\n        }, i.getDataIndexFromPixel = function (e) {\n          return Math.round(this.getFromEnv(\"chart\").getChildren(\"xAxis\")[0].getValue(e, {\n            wrtVisible: !0\n          }));\n        }, i.getPositionLabel = function (e) {\n          var t = this.getFromEnv(\"chart\").getChildren(\"xAxis\")[0].getLabel(e);\n          return t && t.label || \"\";\n        }, i.disable = function (e) {\n          return e !== o && (this.disabled = !!e, this.disabled && this.visible && this.hide()), this.disabled;\n        }, i.updateLabels = function () {\n          var e = this,\n              t = e.getFromEnv(\"animationManager\"),\n              i = e.getGraphicalElement(\"labels\"),\n              n = e.getGraphicalElement(\"positionLabel\"),\n              l = e.plots,\n              c = e.width,\n              u = e.position,\n              h = e.lineX,\n              d = Math.floor(h),\n              m = e.dummyText,\n              v = e.numberFormatter,\n              b = e.pyaxisminvalue,\n              x = e.pyaxismaxvalue,\n              C = e.syaxisminvalue,\n              y = e.syaxismaxvalue,\n              k = function (e) {\n            var t,\n                i,\n                n = e.getFromEnv(\"chart\").getChildren(\"yAxis\")[0].getPixel(e.yminValue),\n                o = {};\n            a = {}, s = -1 * e.height;\n\n            try {\n              Object.defineProperty(a, \"POS\", {\n                enumerable: !1,\n                configurable: !1,\n                get: function get() {\n                  return 1;\n                }\n              }), Object.defineProperty(a, \"NEG\", {\n                enumerable: !1,\n                configurable: !1,\n                get: function get() {\n                  return -1;\n                }\n              });\n            } catch (r) {\n              a.POS = 1, a.NEG = -1;\n            }\n\n            try {\n              Object.defineProperty(o, \"top\", {\n                enumerable: !1,\n                configurable: !1,\n                get: function get() {\n                  return s;\n                }\n              }), Object.defineProperty(o, \"bottom\", {\n                enumerable: !1,\n                configurable: !1,\n                get: function get() {\n                  return n;\n                }\n              });\n            } catch (r) {\n              o.top = s, o.bottom = n;\n            }\n\n            return o.init = function (e) {\n              var n;\n\n              for (s += (f = e + 2) / 2, i = Math.floor(Math.abs(s) / f), t = new M(i), n = 0; n < i; n++) {\n                t.pos.push(0);\n              }\n            }, o.occupy = function (e, i) {\n              var n = Math.floor(Math.abs(s - e) / f);\n              t && t.attachShift(e, n, i);\n            }, o;\n          }(e);\n\n          r = e._visout, i && (m || (m = e.dummyText = e.getFromEnv(\"paper\").text().hide()), m.attr({\n            text: v.yAxis(\"0\")\n          }), m && k.init(m.getBBox().height, i.length), i.forEach(function (t, i) {\n            if (!l[i].getState(\"removed\")) {\n              var n,\n                  a = l[i],\n                  s = a.components.data[u] && a.components.data[u].config.setValue,\n                  c = a.config.parentYAxis;\n              n = s === o || !a.getState(\"visible\") || (c ? s > y || s < C : s > x || s < b) ? r : c ? (s - C) * e.spixelRatio : (s - b) * e.ppixelRatio, k.occupy(n, t);\n            }\n          })), i && i.forEach(function (i, n) {\n            if (!l[n].getState(\"removed\")) {\n              var a,\n                  s,\n                  r,\n                  f,\n                  m,\n                  b,\n                  x = l[n],\n                  C = x.components.data[u] && x.components.data[u].config.setValue,\n                  y = v[x.config.parentYAxis ? \"sYAxis\" : \"yAxis\"](C);\n              y ? (i.attr({\n                text: y\n              }), f = (r = (s = (a = i.getBBox()) && a.width) && .5 * s) && r + 10, b = i.calcY, m = p(0, g(d, c)), b !== o && m !== o && t.setAnimation({\n                el: i,\n                attr: {\n                  x: m,\n                  y: b,\n                  \"text-anchor\": (h <= f ? \"start\" : h + f >= c && \"end\") || \"middle\",\n                  \"text-bound\": [\"rgba(255,255,255,0.8)\", \"rgba(0,0,0,0.2)\", 1, 2.5]\n                },\n                doNotRemove: !0,\n                component: e\n              })) : i.attr({\n                x: -c\n              });\n            }\n          }), n && t.setAnimation({\n            el: n,\n            attr: {\n              x: h + e.left,\n              text: e.getPositionLabel(u),\n              \"text-bound\": [\"rgba(255,255,255,1)\", \"rgba(0,0,0,1)\", 1, 2.5]\n            },\n            component: e\n          });\n        }, i.show = function () {\n          if (!this.disabled) {\n            this.hidden = !1;\n            var e = this.getContainer(\"valueGroup\"),\n                t = this.getGraphicalElement(\"positionLabel\"),\n                i = this.getGraphicalElement(\"line\");\n            e && e.show(), t && t.show(), i && i.show();\n          }\n        }, i.hide = function () {\n          this.hidden = !0;\n          var e = this.getContainer(\"valueGroup\"),\n              t = this.getGraphicalElement(\"positionLabel\"),\n              i = this.getGraphicalElement(\"line\");\n          e && e.hide(), t && t.hide(), i && i.hide();\n        }, i.dispose = function () {\n          var e;\n\n          for (e in this) {\n            this.hasOwnProperty(e) && delete this[e];\n          }\n        }, t;\n      }(h.ComponentInterface);\n\n      var E = function () {\n        function e() {\n          this.y = 0, this.lRef = o, this.__shift = 0, this.__index = 0;\n        }\n\n        var t = e.prototype;\n        return t.applyShift = function (e) {\n          this.__shift = e, this.lRef.calcY = this.y += e * f;\n        }, t.applyDirectIndex = function (e) {\n          this.__index = e, this.lRef.calcY = this.y = s - e * f * -1;\n        }, e;\n      }(),\n          M = function () {\n        function e(e) {\n          this.holes = [], this.pos = [];\n\n          for (var t = 0; t < e; t++) {\n            this.holes.push(t);\n          }\n        }\n\n        var t = e.prototype;\n        return t.repositionHoles = function () {\n          var e,\n              t = 0,\n              i = this.pos;\n\n          for (this.holes.length = 0, e = 0; e < i.length; e++) {\n            !i[e] && (this.holes[t++] = e);\n          }\n        }, t.attachShift = function (e, t, i) {\n          var n,\n              o,\n              s,\n              l,\n              c,\n              u,\n              h,\n              d = this.pos,\n              p = d.length;\n\n          if (e !== r) {\n            if (n = d[u = t > p - 1 ? p - 1 : t], (l = new E()).y = e, l.lRef = i, !n) return l.applyDirectIndex(u), d.splice(u, 1, l), void this.holes.splice(this.holes.indexOf(u), 1);\n            if (o = u + (h = y.call(this.holes, u)).absValue * h.noScaleSide, h.noScaleSide === a.POS) return l.applyDirectIndex(o), d.splice(o, 1, l), this.holes.splice(this.holes.indexOf(o), 1), o;\n\n            if (h.noScaleSide === a.NEG) {\n              for (s = d.splice(o + 1, d.length - 1), d.pop(), s.forEach(function (e) {\n                e && e.applyShift(-1);\n              }), [].push.apply(d, s), c = o; d[c];) {\n                c++;\n              }\n\n              return d.push(0), this.repositionHoles(), c += (h = y.call(this.holes, c)).absValue * h.noScaleSide, l.applyDirectIndex(c), d.splice(c, 1, l), this.repositionHoles(), d.length - 1;\n            }\n          } else i.calcY = r;\n        }, e;\n      }(),\n          P = {\n        extension: function extension(e) {\n          e.addEventListener(\"instantiated\", function (e) {\n            if (\"canvas\" === e.sender.getName()) {\n              var t,\n                  i,\n                  n,\n                  o = e.sender;\n              o.registerFactory(\"crossLineManager-zoomline\", function () {\n                var a,\n                    s = e.sender.getFromEnv(\"chart\"),\n                    r = s && s.getName();\n                r && v[r.toLowerCase()] && ((i = s.config.crossline) && 0 !== i.enabled && 1 === s.config.useCrossline ? n = 1 : (i && (i.enabled = 0), n = 0), (0, u.componentFactory)(o, w, \"crossLine\", n, [i]), n && (a = o.getChildren(\"crossLine\")[0], t = a.config.handlers, a.addExtEventListener(\"fc-mousemove\", t.onMouseMove, o), a.addExtEventListener(\"fc-mouseover\", t.onMouseMove, o), a.addExtEventListener(\"fc-dragstart\", function (e) {\n                  t.onMouseOut(e), a.removeExtEventListener(\"fc-mousemove\", t.onMouseMove, o);\n                }, o), a.addExtEventListener(\"fc-dragend\", function () {\n                  a.addExtEventListener(\"fc-mousemove\", t.onMouseMove, o);\n                }, o), a.addExtEventListener(\"fc-mouseout\", function (e) {\n                  t.onMouseOut(e);\n                }, o)));\n              });\n            }\n          });\n        },\n        name: \"crossline-manager\",\n        type: \"extension\",\n        requiresFusionCharts: !0\n      };\n\n      t[\"default\"] = P;\n    }\n  }]);\n});","map":null,"metadata":{},"sourceType":"script"}