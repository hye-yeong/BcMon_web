{"ast":null,"code":"import _defineProperty from \"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar chart_result = [];\nvar result; //zoom in zoom out chart data\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render zoom in zoom out graph\n\n\nfunction renderZoomChart(url, in_value, out_value, title, caption) {\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (xhr.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        console.log(\"결과 : \");\n        console.log(result);\n        return result;\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  xhr.send(null);\n  return result;\n}\n\nfunction process(in_value, out_value, title, caption, xhr) {\n  var _chart;\n\n  // 프로세스를 부름\n  var data = xhr.responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  Ivalue = {\n    \"serisename\": \"in_value\",\n    \"data\": \"\"\n  };\n  Ovalue = {\n    \"serisename\": \"out_value\",\n    \"data\": \"\"\n  };\n  console.log(\"LABEL-01: \");\n  console.log(temp_key);\n  console.log(\"DATASET-01: \");\n  console.log(temp_inValue);\n  console.log(\"DATASET-01: \");\n  console.log(temp_outValue);\n  console.log(\"json original : \");\n  console.log(parseData);\n\n  try {\n    if (parseData.length < 366) {\n      for (var i = parseData.length - 1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_inValue += parseData[i][in_value] + '|';\n        temp_outValue += parseData[i][out_value] + '|';\n      }\n\n      ;\n    } else {\n      for (var index = parseData.length - 1; index > parseData.length - 366; index--) {\n        temp_key += parseData[index]._id + '|';\n        temp_inValue += parseData[index][in_value] + '|';\n        temp_outValue += parseData[index][out_value] + '|';\n      }\n\n      ;\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_inValue += temp_inValue.slice(0, -1);\n  temp_outValue += temp_outValue.slice(0, -1);\n  label.category = temp_key;\n  Ivalue.data = temp_inValue;\n  Ovalue.data = temp_outValue;\n  datasource = {\n    \"chart\": (_chart = {\n      \"caption\": title,\n      \"subcaption\": in_value & out_value,\n      \"yaxisname\": \"Value\",\n      \"xaxisname\": \"Day\"\n    }, _defineProperty(_chart, \"subcaption\", caption), _defineProperty(_chart, \"forceaxislimits\", \"1\"), _defineProperty(_chart, \"pixelsperpoint\", \"0\"), _defineProperty(_chart, \"pixelsperlabel\", \"30\"), _defineProperty(_chart, \"compactdatamode\", \"1\"), _defineProperty(_chart, \"palettecolors\", \"#17afb7, #b30710\"), _defineProperty(_chart, \"theme\", \"fusion\"), _defineProperty(_chart, \"showBorder\", \"0\"), _defineProperty(_chart, \"showShadow\", \"0\"), _defineProperty(_chart, \"bgColor\", \"#27293d\"), _defineProperty(_chart, \"canvasBgAlpha\", \"0\"), _defineProperty(_chart, \"plotBorderAlpha\", \"0\"), _defineProperty(_chart, \"toolTipBgcolor\", \"#484E69\"), _defineProperty(_chart, \"tooltipBorderThickness\", \"0.7\"), _defineProperty(_chart, \"toolTipColor\", \"#FDFDFD\"), _defineProperty(_chart, \"baseFont\", \"Nunito Sans\"), _defineProperty(_chart, \"baseFontSize\", \"10\"), _defineProperty(_chart, \"baseFontColor\", \"#FDFDFD\"), _defineProperty(_chart, \"showLegend\", \"1\"), _defineProperty(_chart, \"legendShadow\", \"0\"), _defineProperty(_chart, \"legendBorderAlpha\", \"0\"), _defineProperty(_chart, \"drawCustomLegendIcon\", \"1\"), _defineProperty(_chart, \"legendBgAlpha\", \"0\"), _defineProperty(_chart, \"showAlternateHGridColor\", \"0\"), _defineProperty(_chart, \"legendNumColumns\", \"1\"), _defineProperty(_chart, \"legendPosition\", \"RIGHT\"), _defineProperty(_chart, \"defaultCenterLabel\", \"Total <br> $214\"), _defineProperty(_chart, \"centerLabel\", \"$label<br>$value\"), _defineProperty(_chart, \"centerLabelBold\", \"1\"), _defineProperty(_chart, \"centerLabelFontSize\", \"20\"), _defineProperty(_chart, \"enableRotation\", \"0\"), _defineProperty(_chart, \"transposeAnimation\", \"1\"), _defineProperty(_chart, \"showhovereffect\", \"1\"), _defineProperty(_chart, \"drawcrossline\", \"1\"), _defineProperty(_chart, \"plotToolText\", \"<b>$dataValue</b>$dataValue<div>\"), _chart),\n    \"categories\": [label],\n    \"dataset\": [Ivalue, Ovalue]\n  };\n  console.log(\"LABEL-02: \");\n  console.log(temp_key);\n  console.log(\"DATASET-02: \");\n  console.log(temp_inValue);\n  console.log(\"DATASET-02: \");\n  console.log(temp_inValue);\n  console.log(\"DATA-02: \");\n  console.log(temp_outValue);\n  console.log(\"DATATYPE-02: \");\n  console.log(temp_key.toString());\n  console.log(typeof temp_key);\n  console.log(temp_inValue.toString());\n  console.log(typeof temp_inValue);\n  console.log(temp_outValue.toString());\n  console.log(typeof temp_outValue);\n  console.log(\"DATATEXT-02: \");\n  console.log(datasource);\n  console.log(JSON.stringify(datasource));\n  console.log(typeof datasource);\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderZoomChart: renderZoomChart\n};","map":{"version":3,"sources":["/frontend/src/variables/charts_multipleline.js"],"names":["chart_result","result","sleep","delay","start","Date","getTime","renderZoomChart","url","in_value","out_value","title","caption","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","process","console","log","alert","send","data","responseText","parseData","JSON","parse","datasource","label","Ivalue","Ovalue","temp_key","temp_inValue","temp_outValue","length","i","_id","index","e","slice","category","toString","stringify","module","exports"],"mappings":"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","sourcesContent":["var chart_result = [];\nlet result; //zoom in zoom out chart data\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render zoom in zoom out graph\nfunction renderZoomChart(url, in_value, out_value, title, caption){\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  xhr.onreadystatechange = function(){\n      if(xhr.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(xhr.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              console.log(\"결과 : \");\n              console.log(result);\n              return result;\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  xhr.send(null);\n  return result;\n}\n\nfunction process(in_value, out_value, title, caption, xhr){  // 프로세스를 부름\n  var data = xhr.responseText;          // get은 Text 방식으로\n  var parseData = JSON.parse(data);     //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue=\"\";\n\n  label = {\"category\" : \"\"}\n  Ivalue = {\"serisename\" : \"in_value\", \"data\" : \"\" }\n  Ovalue = {\"serisename\" : \"out_value\", \"data\" : \"\" }\n\n  console.log(\"LABEL-01: \")\n  console.log(temp_key)\n  console.log(\"DATASET-01: \")\n  console.log(temp_inValue)\n  console.log(\"DATASET-01: \")\n  console.log(temp_outValue)\n  console.log(\"json original : \")\n  console.log(parseData)\n\n  try {\n    if(parseData.length < 366) {\n      for(var i = parseData.length-1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_inValue += parseData[i][in_value] + '|';\n        temp_outValue += parseData[i][out_value] + '|';\n      };\n    }\n    else {\n      for(var index = parseData.length-1; index > parseData.length-366; index--) {\n        temp_key += parseData[index]._id + '|';\n        temp_inValue += parseData[index][in_value] + '|';\n        temp_outValue += parseData[index][out_value] + '|';\n      };\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_inValue += temp_inValue.slice(0, -1);\n  temp_outValue += temp_outValue.slice(0, -1);\n\n  label.category = temp_key;\n  Ivalue.data = temp_inValue;\n  Ovalue.data = temp_outValue;\n\n  datasource = {\n  \"chart\": {\n    \"caption\": title,\n    \"subcaption\": in_value&out_value,\n    \"yaxisname\": \"Value\",\n    \"xaxisname\": \"Day\",\n    \"subcaption\": caption,\n    \"forceaxislimits\": \"1\",\n    \"pixelsperpoint\": \"0\",\n    \"pixelsperlabel\": \"30\",\n    \"compactdatamode\": \"1\",\n    \"palettecolors\": \"#17afb7, #b30710\",       // 선 색상 변경 가능\n    \"theme\": \"fusion\",\n\n    \"showBorder\": \"0\",\n    \"showShadow\": \"0\",\n    //use3DLighting: \"0\",\n    \"bgColor\": \"#27293d\",\n    //bgAlpha: \"0\",\n    \"canvasBgAlpha\": \"0\",\n    \"plotBorderAlpha\": \"0\",\n\n\n    \"toolTipBgcolor\": \"#484E69\",\n    //toolTipPadding: \"7\",\n    \"tooltipBorderThickness\": \"0.7\",\n    \"toolTipColor\": \"#FDFDFD\",\n    \"baseFont\": \"Nunito Sans\",\n    \"baseFontSize\": \"10\",\n    \"baseFontColor\": \"#FDFDFD\",\n\n    \"showLegend\": \"1\",\n    \"legendShadow\": \"0\",\n    \"legendBorderAlpha\": \"0\",\n    \"drawCustomLegendIcon\": \"1\",\n    \"legendBgAlpha\": \"0\",\n\n    \"showAlternateHGridColor\": \"0\",\n    // chartTopMargin: \"-10\",\n    // canvasTopMargin: \"-10\",\n    // chartBottomMargin: \"20\",\n    // canvasBottomMargin: \"20\",\n\n    \"legendNumColumns\": \"1\",\n    \"legendPosition\": \"RIGHT\",\n    \"defaultCenterLabel\": \"Total <br> $214\",\n    \"centerLabel\": \"$label<br>$value\",\n    \"centerLabelBold\": \"1\",\n    \"centerLabelFontSize\": \"20\",\n    \"enableRotation\": \"0\",\n    \"transposeAnimation\": \"1\",\n\n    \"showhovereffect\": \"1\",\n    \"drawcrossline\": \"1\",\n    \"plotToolText\": \"<b>$dataValue</b>$dataValue<div>\"\n  }\n  ,\n    \"categories\": [label],\n    \"dataset\": [Ivalue,Ovalue]\n};\n\nconsole.log(\"LABEL-02: \")\nconsole.log(temp_key)\n\nconsole.log(\"DATASET-02: \")\nconsole.log(temp_inValue)\n\nconsole.log(\"DATASET-02: \")\nconsole.log(temp_inValue)\n\nconsole.log(\"DATA-02: \")\nconsole.log(temp_outValue)\n\nconsole.log(\"DATATYPE-02: \")\nconsole.log(temp_key.toString())\nconsole.log(typeof temp_key)\nconsole.log(temp_inValue.toString())\nconsole.log(typeof temp_inValue)\nconsole.log(temp_outValue.toString())\nconsole.log(typeof temp_outValue)\n\nconsole.log(\"DATATEXT-02: \")\nconsole.log(datasource)\n\nconsole.log(JSON.stringify(datasource))\nconsole.log(typeof datasource)\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  renderZoomChart,\n};\n"]},"metadata":{},"sourceType":"module"}