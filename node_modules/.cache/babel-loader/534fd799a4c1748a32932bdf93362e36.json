{"ast":null,"code":"// 요약 그래프 출력\nvar chart_result = [];\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render line 2d graph\n\n\nfunction renderGraph(url, tag, title, caption, num) {\n  var summaryChart = new XMLHttpRequest(); // summaryChart은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  summaryChart.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  // 값이 1이면 서버와의 연결이 성사됨\n\n  summaryChart.onreadystatechange = function () {\n    console.log(\"onreadystatechange function\");\n\n    if (summaryChart.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (summaryChart.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        chart_result[num] = getGraphData(tag, title, caption, summaryChart); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return chart_result[num];\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + summaryChart.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  try {\n    summaryChart.send(null);\n  } catch (e) {\n    return chart_result[num];\n  }\n\n  return chart_result[num];\n}\n\nfunction getGraphData(tag, title, caption, summaryChart) {\n  // 프로세스를 부름\n  var data = summaryChart.responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n  var temp_data_array = [];\n  var temp_data = {};\n  temp_data = JSON.stringify(parseData);\n  console.log(\"abstract temp data 01: \");\n  console.log(temp_data);\n  console.log(\"abstract json original : \");\n  console.log(parseData);\n\n  for (var index = parseData.length - 1; index >= 0; index--) {\n    temp_data_array.push(parseData[index]);\n  }\n\n  ;\n  temp_data = JSON.stringify(temp_data_array);\n\n  for (var i = 0; i < parseData.length; i++) {\n    temp_data = temp_data.replace(\"_id\", \"label\");\n    temp_data = temp_data.replace(tag, \"value\");\n  }\n\n  ;\n  temp_data = JSON.parse(temp_data);\n  console.log(\"abstract temp data 02: \");\n  console.log(JSON.stringify(temp_data_array)); // 그래프 선이 출력되는 부분 코드\n\n  datasource = {\n    \"chart\": {\n      \"caption\": title,\n      \"yaxisname\": \"\",\n      \"xaxisname\": \"\",\n      \"subcaption\": caption,\n      \"numbersuffix\": \"\",\n      \"rotatelabels\": \"1\",\n      \"drawAnchors\": \"0\",\n      \"showLabels\": \"0\",\n      \"palettecolors\": \"#17afb7\",\n      // 선 색상 변경 가능\n      \"setadaptiveymin\": \"1\",\n      \"linethickness\": \"3\",\n      \"theme\": \"fusion\",\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,B,T,Q\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#25263b\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"ededf0\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      legendNumColumns: \"1\",\n      legendPosition: \"RIGHT\",\n      defaultCenterLabel: \"Total <br> $214\",\n      centerLabel: \"$label<br>$value\",\n      centerLabelBold: \"2\",\n      centerLabelFontSize: \"20\",\n      enableRotation: \"0\",\n      transposeAnimation: \"1\",\n      plotToolText: \"<div>$label<br>$dataValue<div>\"\n    },\n    data: temp_data\n  };\n  console.log(\"abstract temp data 03: \");\n  console.log(temp_data);\n  console.log(\"abstract data: \");\n  console.log(datasource);\n  console.log(\"abstract temp DATATYPE-02: \");\n  console.log(temp_data.toString());\n  console.log(typeof temp_data);\n  console.log(\"abstract temp DATATEXT-02: \");\n  console.log(datasource);\n  console.log(JSON.stringify(datasource));\n  console.log(typeof datasource);\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderGraph: renderGraph\n};","map":{"version":3,"sources":["/project/src/variables/charts_month.js"],"names":["chart_result","sleep","delay","start","Date","getTime","renderGraph","url","tag","title","caption","num","summaryChart","XMLHttpRequest","open","onreadystatechange","console","log","readyState","status","getGraphData","alert","send","e","data","responseText","parseData","JSON","parse","datasource","temp_data_array","temp_data","stringify","index","length","push","i","replace","legendNumColumns","legendPosition","defaultCenterLabel","centerLabel","centerLabelBold","centerLabelFontSize","enableRotation","transposeAnimation","plotToolText","toString","module","exports"],"mappings":"AAAA;AACA,IAAIA,YAAY,GAAG,EAAnB;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,SAAO,IAAID,IAAJ,GAAWC,OAAX,KAAuBF,KAAK,GAAGD,KAAtC;AAA4C;AAA5C;AACD,C,CAED;;;AACA,SAASI,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+CC,GAA/C,EAAmD;AACjD,MAAIC,YAAY,GAAG,IAAIC,cAAJ,EAAnB,CADiD,CACR;;AACzCD,EAAAA,YAAY,CAACE,IAAb,CAAkB,KAAlB,EAAyBP,GAAzB,EAA8B,KAA9B,EAFiD,CAEX;AACtC;;AACAK,EAAAA,YAAY,CAACG,kBAAb,GAAkC,YAAU;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACE,QAAGL,YAAY,CAACM,UAAb,KAA4B,CAA/B,EAAiC;AAAE;AAC/B,UAAGN,YAAY,CAACO,MAAb,KAAwB,GAA3B,EAA+B;AAAE;AAC7BnB,QAAAA,YAAY,CAACW,GAAD,CAAZ,GAAoBS,YAAY,CAACZ,GAAD,EAAMC,KAAN,EAAaC,OAAb,EAAsBE,YAAtB,CAAhC,CAD2B,CAC0C;;AACrE,eAAOZ,YAAY,CAACW,GAAD,CAAnB;AACH,OAHD,MAGK;AACCU,QAAAA,KAAK,CAACZ,KAAK,GAAC,gBAAN,GAAyBG,YAAY,CAACO,MAAvC,CAAL,CADD,CACsD;AAC1D;AACJ;AACJ,GAVD;;AAWA,MAAI;AACFP,IAAAA,YAAY,CAACU,IAAb,CAAkB,IAAlB;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAOvB,YAAY,CAACW,GAAD,CAAnB;AACD;;AAED,SAAOX,YAAY,CAACW,GAAD,CAAnB;AACD;;AAED,SAASS,YAAT,CAAsBZ,GAAtB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CE,YAA3C,EAAwD;AAAE;AACxD,MAAIY,IAAI,GAAGZ,YAAY,CAACa,YAAxB,CADsD,CAChB;;AACtC,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAhB,CAFsD,CAEpB;;AAElC,MAAIK,UAAU,GAAG,EAAjB;AAEA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEAA,EAAAA,SAAS,GAAGJ,IAAI,CAACK,SAAL,CAAeN,SAAf,CAAZ;AAEAV,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;;AAEC,OAAK,IAAIO,KAAK,GAAGP,SAAS,CAACQ,MAAV,GAAiB,CAAlC,EAAqCD,KAAK,IAAI,CAA9C,EAAiDA,KAAK,EAAtD,EAA0D;AACxDH,IAAAA,eAAe,CAACK,IAAhB,CAAqBT,SAAS,CAACO,KAAD,CAA9B;AACA;;AAAA;AAEDF,EAAAA,SAAS,GAAGJ,IAAI,CAACK,SAAL,CAAeF,eAAf,CAAZ;;AAED,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAAS,CAACQ,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACxCL,IAAAA,SAAS,GAAGA,SAAS,CAACM,OAAV,CAAkB,KAAlB,EAAyB,OAAzB,CAAZ;AACAN,IAAAA,SAAS,GAAGA,SAAS,CAACM,OAAV,CAAkB7B,GAAlB,EAAuB,OAAvB,CAAZ;AACD;;AAAA;AAGHuB,EAAAA,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWG,SAAX,CAAZ;AAGAf,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAI,CAACK,SAAL,CAAeF,eAAf,CAAZ,EAhCsD,CAkCtD;;AACAD,EAAAA,UAAU,GAAG;AACb,aAAS;AACP,iBAAWpB,KADJ;AAEP,mBAAa,EAFN;AAGP,mBAAa,EAHN;AAIP,oBAAcC,OAJP;AAKP,sBAAgB,EALT;AAMP,sBAAgB,GANT;AAOP,qBAAe,GAPR;AAQP,oBAAc,GARP;AASP,uBAAiB,SATV;AAS2B;AAClC,yBAAmB,GAVZ;AAWP,uBAAiB,GAXV;AAYP,eAAS,QAZF;AAcP,0BAAoB,0BAdb;AAeP,yBAAmB,WAfZ;AAiBP,oBAAc,GAjBP;AAkBP,oBAAc,GAlBP;AAmBP;AACA,iBAAW,SApBJ;AAqBP;AACA,uBAAiB,GAtBV;AAuBP,yBAAmB,GAvBZ;AAyBP,wBAAkB,SAzBX;AA0BP;AACA,gCAA0B,KA3BnB;AA4BP,sBAAgB,SA5BT;AA6BP,kBAAY,EA7BL;AA8BP,sBAAgB,IA9BT;AA+BP,uBAAiB,QA/BV;AAiCP,oBAAc,GAjCP;AAkCP,sBAAgB,GAlCT;AAmCP,2BAAqB,GAnCd;AAoCP,8BAAwB,GApCjB;AAqCP,uBAAiB,GArCV;AAuCP,iCAA2B,GAvCpB;AAwCP;AACA;AACA;AACA;AAEA4B,MAAAA,gBAAgB,EAAE,GA7CX;AA8CPC,MAAAA,cAAc,EAAE,OA9CT;AA+CPC,MAAAA,kBAAkB,EAAE,iBA/Cb;AAgDPC,MAAAA,WAAW,EAAE,kBAhDN;AAiDPC,MAAAA,eAAe,EAAE,GAjDV;AAkDPC,MAAAA,mBAAmB,EAAE,IAlDd;AAmDPC,MAAAA,cAAc,EAAE,GAnDT;AAoDPC,MAAAA,kBAAkB,EAAE,GApDb;AAqDPC,MAAAA,YAAY,EAAE;AArDP,KADI;AAyDXtB,IAAAA,IAAI,EAAEO;AAzDK,GAAb;AA4DFf,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AAEAf,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYY,UAAZ;AAEAb,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYc,SAAS,CAACgB,QAAV,EAAZ;AACA/B,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOc,SAAnB;AAEAf,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYY,UAAZ;AAEAb,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAI,CAACK,SAAL,CAAeH,UAAf,CAAZ;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOY,UAAnB;AAEA,SAAOA,UAAP;AACC;;AAEDmB,MAAM,CAACC,OAAP,GAAiB;AACfhD,EAAAA,KAAK,EAALA,KADe;AAEfK,EAAAA,WAAW,EAAXA;AAFe,CAAjB","sourcesContent":["// 요약 그래프 출력\nvar chart_result = [];\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render line 2d graph\nfunction renderGraph(url, tag, title, caption, num){\n  var summaryChart = new XMLHttpRequest(); // summaryChart은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  summaryChart.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  // 값이 1이면 서버와의 연결이 성사됨\n  summaryChart.onreadystatechange = function(){\n    console.log(\"onreadystatechange function\");\n      if(summaryChart.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(summaryChart.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              chart_result[num] = getGraphData(tag, title, caption, summaryChart); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return chart_result[num];\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + summaryChart.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  try {\n    summaryChart.send(null);\n  } catch (e) {\n    return chart_result[num];\n  }\n\n  return chart_result[num];\n}\n\nfunction getGraphData(tag, title, caption, summaryChart){ // 프로세스를 부름\n  var data = summaryChart.responseText; // get은 Text 방식으로\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n\n  var temp_data_array = [];\n  var temp_data = {};\n\n  temp_data = JSON.stringify(parseData);\n\n  console.log(\"abstract temp data 01: \")\n  console.log(temp_data)\n  console.log(\"abstract json original : \")\n  console.log(parseData)\n\n   for (var index = parseData.length-1; index >= 0; index--) {\n     temp_data_array.push(parseData[index]);\n    };\n\n    temp_data = JSON.stringify(temp_data_array);\n\n   for (var i = 0; i < parseData.length; i++) {\n      temp_data = temp_data.replace(\"_id\", \"label\");\n      temp_data = temp_data.replace(tag, \"value\");\n    };\n\n\n  temp_data = JSON.parse(temp_data);\n\n\n  console.log(\"abstract temp data 02: \");\n  console.log(JSON.stringify(temp_data_array));\n\n  // 그래프 선이 출력되는 부분 코드\n  datasource = {\n  \"chart\": {\n    \"caption\": title,\n    \"yaxisname\": \"\",\n    \"xaxisname\": \"\",\n    \"subcaption\": caption,\n    \"numbersuffix\": \"\",\n    \"rotatelabels\": \"1\",\n    \"drawAnchors\": \"0\",\n    \"showLabels\": \"0\",\n    \"palettecolors\": \"#17afb7\",       // 선 색상 변경 가능\n    \"setadaptiveymin\": \"1\",\n    \"linethickness\": \"3\",\n    \"theme\": \"fusion\",\n\n    \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n    \"numberscaleunit\": \"K,M,B,T,Q\",\n\n    \"showBorder\": \"0\",\n    \"showShadow\": \"0\",\n    //use3DLighting: \"0\",\n    \"bgColor\": \"#25263b\",\n    //bgAlpha: \"0\",\n    \"canvasBgAlpha\": \"0\",\n    \"plotBorderAlpha\": \"0\",\n\n    \"toolTipBgcolor\": \"#484E69\",\n    //toolTipPadding: \"7\",\n    \"tooltipBorderThickness\": \"0.7\",\n    \"toolTipColor\": \"#FDFDFD\",\n    \"baseFont\": \"\",\n    \"baseFontSize\": \"10\",\n    \"baseFontColor\": \"ededf0\",\n\n    \"showLegend\": \"1\",\n    \"legendShadow\": \"0\",\n    \"legendBorderAlpha\": \"0\",\n    \"drawCustomLegendIcon\": \"1\",\n    \"legendBgAlpha\": \"0\",\n\n    \"showAlternateHGridColor\": \"0\",\n    // chartTopMargin: \"-10\",\n    // canvasTopMargin: \"-10\",\n    // chartBottomMargin: \"20\",\n    // canvasBottomMargin: \"20\",\n\n    legendNumColumns: \"1\",\n    legendPosition: \"RIGHT\",\n    defaultCenterLabel: \"Total <br> $214\",\n    centerLabel: \"$label<br>$value\",\n    centerLabelBold: \"2\",\n    centerLabelFontSize: \"20\",\n    enableRotation: \"0\",\n    transposeAnimation: \"1\",\n    plotToolText: \"<div>$label<br>$dataValue<div>\"\n  }\n  ,\n    data: temp_data\n};\n\nconsole.log(\"abstract temp data 03: \")\nconsole.log(temp_data)\n\nconsole.log(\"abstract data: \")\nconsole.log(datasource)\n\nconsole.log(\"abstract temp DATATYPE-02: \")\nconsole.log(temp_data.toString())\nconsole.log(typeof temp_data)\n\nconsole.log(\"abstract temp DATATEXT-02: \")\nconsole.log(datasource)\n\nconsole.log(JSON.stringify(datasource))\nconsole.log(typeof datasource)\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  renderGraph\n};\n"]},"metadata":{},"sourceType":"module"}