{"ast":null,"code":"var result = [];\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n}\n\nfunction renderRealTimeData(url, in_value, out_value, title, caption) {\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (xhr.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return result;\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  xhr.send(null);\n  return result;\n}","map":{"version":3,"sources":["/projcet/src/variables/charts_RealTime.js"],"names":["result","sleep","delay","start","Date","getTime","renderRealTimeData","url","in_value","out_value","title","caption","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","process","alert","send"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAb;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,SAAO,IAAID,IAAJ,GAAWC,OAAX,KAAuBF,KAAK,GAAGD,KAAtC;AAA4C;AAA5C;AACD;;AAED,SAASI,kBAAT,CAA4BC,GAA5B,EAAiCC,QAAjC,EAA2CC,SAA3C,EAAsDC,KAAtD,EAA6DC,OAA7D,EAAqE;AACnE,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV,CADmE,CACnC;;AAChCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBP,GAAhB,EAAqB,KAArB,EAFmE,CAEtC;;AAC7BK,EAAAA,GAAG,CAACG,kBAAJ,GAAyB,YAAU;AAC/B,QAAGH,GAAG,CAACI,UAAJ,KAAmB,CAAtB,EAAwB;AAAQ;AAC5B,UAAGJ,GAAG,CAACK,MAAJ,KAAe,GAAlB,EAAsB;AAAM;AACxBjB,QAAAA,MAAM,GAAGkB,OAAO,CAACV,QAAD,EAAWC,SAAX,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,GAAtC,CAAhB,CADkB,CAC0C;;AAC5D,eAAOZ,MAAP;AACH,OAHD,MAGK;AACCmB,QAAAA,KAAK,CAACT,KAAK,GAAC,gBAAN,GAAyBE,GAAG,CAACK,MAA9B,CAAL,CADD,CAC6C;AACjD;AACJ;AACJ,GATD;;AAUAL,EAAAA,GAAG,CAACQ,IAAJ,CAAS,IAAT;AACA,SAAOpB,MAAP;AACD","sourcesContent":["let result = []\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\nfunction renderRealTimeData(url, in_value, out_value, title, caption){\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  xhr.onreadystatechange = function(){\n      if(xhr.readyState === 4){       // 통신 상태가 4 = 양호 확인\n          if(xhr.status === 200){     //status 가 200일 경우 아래 process; 로 진행\n              result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return result;\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  xhr.send(null);\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}