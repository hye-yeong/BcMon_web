{"ast":null,"code":"import _classCallCheck from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/project/src/views/bitcoin/transaction/costPerTx.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\"; // reactstrap components\n\nimport { Card, CardHeader, CardTitle, Row, Col } from \"reactstrap\"; // core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\n\nimport chartData from \"../../../variables/charts.js\";\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\nvar dataSource;\nvar url = \"http://bcmon.kmu.ac.kr/bitcoin/graphs/cost-per-tx/value/year\";\nvar tag = \"value\";\nvar title = \"Cost per TX\";\nvar caption = \"Cost of each transactions in bitcoin network.\";\n\nvar costPerTx =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(costPerTx, _React$Component);\n\n  function costPerTx(props) {\n    var _this;\n\n    _classCallCheck(this, costPerTx);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(costPerTx).call(this, props));\n\n    _this.setBgChartData = function (name1, name2) {\n      _this.setState({\n        bigChartData: name1,\n        mean: name2\n      });\n    };\n\n    _this.state = {\n      bigChartData: \"data1\",\n      //mean은 그래프 당 의미가 하나 밖에 없을 때는 사용하지 말것.\n      mean: \"cost Per Tx\"\n    };\n    return _this;\n  } // 버튼 사용시 사용하는 생성자\n\n\n  _createClass(costPerTx, [{\n    key: \"render\",\n    value: function render() {\n      dataSource = chartData.renderZoomChart(url, tag, title, caption);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Transaction\"), React.createElement(\"p\", {\n        className: \"category text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \".\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-chart-bar-32 text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ReactFusioncharts, {\n        type: \"zoomline\",\n        width: \"100%\",\n        height: \"500\",\n        dataFormat: \"JSON\",\n        dataSource: dataSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return costPerTx;\n}(React.Component);\n\nexport default costPerTx;","map":{"version":3,"sources":["/project/src/views/bitcoin/transaction/costPerTx.js"],"names":["React","Card","CardHeader","CardTitle","Row","Col","chartData","ReactFC","ReactFusioncharts","FusionCharts","charts","Zoomline","FusionTheme","fcRoot","dataSource","url","tag","title","caption","costPerTx","props","setBgChartData","name1","name2","setState","bigChartData","mean","state","renderZoomChart","size","offset","Component"],"mappings":"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","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\n\n// core components_chart 입력하는 부분_\n// 아래에 차트 이름과, 차트 경로를 입력하면 된다.\nimport chartData from \"../../../variables/charts.js\";\n\nimport ReactFC from 'react-fusioncharts';\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.charts';\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, charts, Zoomline, FusionTheme);\ncharts(FusionCharts);\n\nlet dataSource;\nlet url = \"http://bcmon.kmu.ac.kr/bitcoin/graphs/cost-per-tx/value/year\";\nvar tag = \"value\";\nvar title = \"Cost per TX\";\nvar caption = \"Cost of each transactions in bitcoin network.\";\n\nclass costPerTx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n      //mean은 그래프 당 의미가 하나 밖에 없을 때는 사용하지 말것.\n      mean:\"cost Per Tx\"\n    };\n  }\n  // 버튼 사용시 사용하는 생성자\n  setBgChartData = (name1, name2) => {\n    this.setState({\n      bigChartData: name1,\n      mean: name2\n    });\n  };\n\n  render() {\n    dataSource = chartData.renderZoomChart(url, tag, title, caption);\n    return (\n      <>\n        <div className=\"content\">\n          <h2 className=\"text-center\">Transaction</h2>\n          <p className=\"category text-center\">\n            .\n          </p>\n          <Row>\n            <Col xm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h3\">\n                    <i className=\"tim-icons icon-chart-bar-32 text-primary\" />{\" \"}\n                    <div className=\"chart-area\">\n                    <ReactFusioncharts\n                          type=\"zoomline\"\n                          width=\"100%\"\n                          height=\"500\"\n                          dataFormat=\"JSON\"\n                          dataSource={dataSource}\n                        />\n                    </div>\n                  </CardTitle>\n                </CardHeader>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default costPerTx;\n"]},"metadata":{},"sourceType":"module"}