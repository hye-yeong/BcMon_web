{"ast":null,"code":"var result = [];\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} // datainfo = [{'url', 'call_count', 'tag', 'title', 'caption', 'InValue', 'OutValue'}]\n\n\nfunction renderRealTimeData(dataInfo) {\n  var get_data = new XMLHttpRequest(); // get_data은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  var url = dataInfo['url'];\n  get_data.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  get_data.onreadystatechange = function () {\n    if (get_data.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (get_data.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(dataInfo, get_data); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return result;\n      } else {\n        var title = url = dataInfo['title'];\n        alert(title + \"그래프 데이터 요청 실패:\" + get_data.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  get_data.send(null);\n  return result;\n}\n\nfunction process(dataInfo, get_data) {\n  var data = get_data.responseText;\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var in_value = dataInfo['in_value'];\n  var out_value = dataInfo['out_value'];\n  var renderData = [];\n  var datasource = {};\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  Ivalue = {\n    \"serisename\": \"in_value\",\n    \"data\": \"\"\n  };\n  Ovalue = {\n    \"serisename\": \"out_value\",\n    \"data\": \"\"\n  };\n  temp_key += parseData[0]._id + '|';\n  temp_inValue += parseData[0][in_value] + '|';\n  temp_outValue += parseData[0][out_value] + '|';\n  temp_key = temp_key.slice(0, -1);\n  temp_inValue += temp_inValue.slice(0, -1);\n  temp_outValue += temp_outValue.slice(0, -1);\n  console.log(\"LABEL-01: \");\n  console.log(temp_key);\n  console.log(\"DATASET-01: \");\n  console.log(temp_inValue);\n  console.log(\"DATASET-01: \");\n  console.log(temp_outValue);\n  console.log(\"json original : \");\n  console.log(parseData);\n  label.category = temp_key;\n  Ivalue.data = temp_inValue;\n  Ovalue.data = temp_outValue;\n  datasource = {\n    \"chart\": {\n      \"caption\": \"\",\n      \"yaxisname\": \"Value\",\n      \"xaxisname\": \"Day\",\n      \"subcaption\": \"caption\",\n      \"numbersuffix\": \"\",\n      \"forceaxislimits\": \"1\",\n      \"pixelsperpoint\": \"0\",\n      \"pixelsperlabel\": \"30\",\n      \"compactdatamode\": \"1\",\n      \"dataseparator\": \"|\",\n      \"palettecolors\": \"#17afb7, #b30710\",\n      // 선 색상 변경 가능\n      \"labelDisplay\": \"auto\",\n      \"theme\": \"fusion\",\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,G,T,P\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#27293d\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"#FDFDFD\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      \"yaxisvaluesstep\": \"0\",\n      \"legendNumColumns\": \"1\",\n      \"legendPosition\": \"RIGHT\",\n      \"defaultCenterLabel\": \"Total <br> $214\",\n      \"centerLabel\": \"$label<br>$value\",\n      \"centerLabelBold\": \"1\",\n      \"centerLabelFontSize\": \"20\",\n      \"enableRotation\": \"0\",\n      \"transposeAnimation\": \"1\",\n      \"showhovereffect\": \"1\",\n      \"drawcrossline\": \"1\",\n      \"plotToolText\": \"<b>$dataValue</b>$dataValue<div>\"\n    },\n    \"categories\": [label],\n    \"dataset\": [Ivalue, Ovalue]\n  };\n  renderData.push({\n    'data': datasource\n  });\n  renderData.push({\n    'InValue': Ivalue\n  });\n  renderData.push({\n    'OutValue': Ovalue\n  });\n  return renderData;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderRealTimeData: renderRealTimeData\n};","map":{"version":3,"sources":["/projcet/src/variables/charts_RealTime.js"],"names":["result","sleep","delay","start","Date","getTime","renderRealTimeData","dataInfo","get_data","XMLHttpRequest","url","open","onreadystatechange","readyState","status","process","title","alert","send","data","responseText","parseData","JSON","parse","in_value","out_value","renderData","datasource","label","Ivalue","Ovalue","temp_key","temp_inValue","temp_outValue","_id","slice","console","log","category","push","module","exports"],"mappings":"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","sourcesContent":["let result = []\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n// datainfo = [{'url', 'call_count', 'tag', 'title', 'caption', 'InValue', 'OutValue'}]\nfunction renderRealTimeData(dataInfo){\n  var get_data = new XMLHttpRequest();       // get_data은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  var url = dataInfo['url']\n\n  get_data.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  get_data.onreadystatechange = function(){\n      if(get_data.readyState === 4){       // 통신 상태가 4 = 양호 확인\n          if(get_data.status === 200){     //status 가 200일 경우 아래 process; 로 진행\n              result = process(dataInfo, get_data); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return result;\n          }else{\n              var title = url = dataInfo['title']\n              alert(title+\"그래프 데이터 요청 실패:\" + get_data.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  get_data.send(null);\n  return result;\n}\n\nfunction process(dataInfo, get_data){\n  var data = get_data.responseText;\n  var parseData = JSON.parse(data);       //객체화 : 배열 처리\n\n  var in_value = dataInfo['in_value'];\n  var out_value = dataInfo['out_value'];\n\n  var renderData = [];\n  var datasource = {};\n\n  var label = {};\n  var Ivalue = {};\n  var Ovalue = {};\n\n  var temp_key = \"\";\n  var temp_inValue = \"\";\n  var temp_outValue=\"\";\n\n  label = {\"category\" : \"\"}\n  Ivalue = {\"serisename\" : \"in_value\", \"data\" : \"\" }\n  Ovalue = {\"serisename\" : \"out_value\", \"data\" : \"\" }\n\n  temp_key += parseData[0]._id + '|';\n  temp_inValue += parseData[0][in_value] + '|';\n  temp_outValue += parseData[0][out_value] + '|';\n\n  temp_key = temp_key.slice(0, -1);\n  temp_inValue += temp_inValue.slice(0, -1);\n  temp_outValue += temp_outValue.slice(0, -1);\n\n  console.log(\"LABEL-01: \")\n  console.log(temp_key)\n  console.log(\"DATASET-01: \")\n  console.log(temp_inValue)\n  console.log(\"DATASET-01: \")\n  console.log(temp_outValue)\n  console.log(\"json original : \")\n  console.log(parseData)\n\n  label.category = temp_key;\n  Ivalue.data=(temp_inValue);\n  Ovalue.data=(temp_outValue);\n\n  datasource = {\n    \"chart\": {\n      \"caption\": \"\",\n      \"yaxisname\": \"Value\",\n      \"xaxisname\": \"Day\",\n      \"subcaption\": \"caption\",\n      \"numbersuffix\":\"\",\n      \"forceaxislimits\": \"1\",\n      \"pixelsperpoint\": \"0\",\n      \"pixelsperlabel\": \"30\",\n      \"compactdatamode\": \"1\",\n      \"dataseparator\": \"|\",\n      \"palettecolors\": \"#17afb7, #b30710\",       // 선 색상 변경 가능\n      \"labelDisplay\":\"auto\",\n      \"theme\": \"fusion\",\n\n      \"numberscalevalue\": \"1000,1000,1000,1000,1000\",\n      \"numberscaleunit\": \"K,M,G,T,P\",\n\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#27293d\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n\n\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"#FDFDFD\",\n\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      \"yaxisvaluesstep\":\"0\",\n\n      \"legendNumColumns\": \"1\",\n      \"legendPosition\": \"RIGHT\",\n      \"defaultCenterLabel\": \"Total <br> $214\",\n      \"centerLabel\": \"$label<br>$value\",\n      \"centerLabelBold\": \"1\",\n      \"centerLabelFontSize\": \"20\",\n      \"enableRotation\": \"0\",\n      \"transposeAnimation\": \"1\",\n      \"showhovereffect\": \"1\",\n      \"drawcrossline\": \"1\",\n      \"plotToolText\": \"<b>$dataValue</b>$dataValue<div>\"\n    }\n    ,\n      \"categories\": [label],\n      \"dataset\": [Ivalue,Ovalue]\n  };\n\n   renderData.push({'data':datasource});\n   renderData.push({'InValue':Ivalue});\n   renderData.push({'OutValue':Ovalue});\n   return renderData;\n}\n\nmodule.exports = {\n  sleep,\n  renderRealTimeData\n};\n"]},"metadata":{},"sourceType":"module"}