{"ast":null,"code":"var chart_result = [];\nvar result; //zoom in zoom out chart data\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n} //render zoom in zoom out graph\n\n\nfunction renderZoomChart(url, tag, title, caption) {\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (xhr.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(tag, title, caption); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        console.log(\"결과 : \");\n        console.log(result);\n        return result;\n      } else {\n        alert(\"요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  xhr.send(null);\n  return result;\n}\n\nfunction process(tag, title, caption) {\n  // 프로세스를 부름\n  var data = xhr.responseText; // get은 Text 방식으로\n\n  var parseData = JSON.parse(data); //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var value = {};\n  var temp_key = \"\";\n  var temp_value = \"\";\n  label = {\n    \"category\": \"\"\n  };\n  value = {\n    \"serisename\": \"test\",\n    \"data\": \"\"\n  };\n  console.log(\"LABEL-01: \");\n  console.log(temp_key);\n  console.log(\"DATASET-01: \");\n  console.log(temp_value);\n  console.log(\"json original : \");\n  console.log(parseData);\n\n  try {\n    if (parseData.length < 366) {\n      for (var i = parseData.length - 1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_value += parseData[i][tag] + '|';\n      }\n\n      ;\n    } else {\n      for (var index = parseData.length - 1; index > parseData.length - 366; index--) {\n        temp_key += parseData[index]._id + '|';\n        temp_value += parseData[index][tag] + '|';\n      }\n\n      ;\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_value = temp_value.slice(0, -1);\n  label.category = temp_key;\n  value.data = temp_value;\n  datasource = {\n    \"chart\": {\n      \"caption\": title,\n      \"yaxisname\": \"Value\",\n      \"xaxisname\": \"Day\",\n      \"subcaption\": caption,\n      \"forceaxislimits\": \"1\",\n      \"pixelsperpoint\": \"0\",\n      \"pixelsperlabel\": \"30\",\n      \"compactdatamode\": \"1\",\n      \"theme\": \"fusion\",\n      \"showBorder\": \"0\",\n      \"showShadow\": \"0\",\n      //use3DLighting: \"0\",\n      \"bgColor\": \"#27293d\",\n      //bgAlpha: \"0\",\n      \"canvasBgAlpha\": \"0\",\n      \"plotBorderAlpha\": \"0\",\n      \"toolTipBgcolor\": \"#484E69\",\n      //toolTipPadding: \"7\",\n      \"tooltipBorderThickness\": \"0.7\",\n      \"toolTipColor\": \"#FDFDFD\",\n      \"baseFont\": \"Nunito Sans\",\n      \"baseFontSize\": \"10\",\n      \"baseFontColor\": \"#FDFDFD\",\n      \"showLegend\": \"1\",\n      \"legendShadow\": \"0\",\n      \"legendBorderAlpha\": \"0\",\n      \"drawCustomLegendIcon\": \"1\",\n      \"legendBgAlpha\": \"0\",\n      \"showAlternateHGridColor\": \"0\",\n      // chartTopMargin: \"-10\",\n      // canvasTopMargin: \"-10\",\n      // chartBottomMargin: \"20\",\n      // canvasBottomMargin: \"20\",\n      \"legendNumColumns\": \"1\",\n      \"legendPosition\": \"RIGHT\",\n      \"defaultCenterLabel\": \"Total <br> $214\",\n      \"centerLabel\": \"$label<br>$value\",\n      \"centerLabelBold\": \"1\",\n      \"centerLabelFontSize\": \"20\",\n      \"enableRotation\": \"0\",\n      \"transposeAnimation\": \"1\",\n      \"plotToolText\": \"<div>$label<br>$dataValue<div>\"\n    },\n    \"categories\": [label],\n    \"dataset\": [value]\n  };\n  console.log(\"LABEL-02: \");\n  console.log(temp_key);\n  console.log(\"DATASET-02: \");\n  console.log(temp_value);\n  console.log(\"DATA-02: \");\n  console.log(datasource);\n  console.log(\"DATATYPE-02: \");\n  console.log(temp_key.toString());\n  console.log(typeof temp_key);\n  console.log(temp_value.toString());\n  console.log(typeof temp_value);\n  console.log(\"DATATEXT-02: \");\n  console.log(datasource);\n  console.log(JSON.stringify(datasource));\n  console.log(typeof datasource);\n  return datasource;\n}\n\nmodule.exports = {\n  sleep: sleep,\n  renderZoomChart: renderZoomChart\n};","map":{"version":3,"sources":["/frontend/src/variables/charts.js"],"names":["chart_result","result","sleep","delay","start","Date","getTime","renderZoomChart","url","tag","title","caption","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","process","console","log","alert","send","data","responseText","parseData","JSON","parse","datasource","label","value","temp_key","temp_value","length","i","_id","index","e","slice","category","toString","stringify","module","exports"],"mappings":"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","sourcesContent":["var chart_result = [];\nlet result; //zoom in zoom out chart data\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\n//render zoom in zoom out graph\nfunction renderZoomChart(url, tag, title, caption){\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  xhr.onreadystatechange = function(){\n      if(xhr.readyState === 4){ // 통신 상태가 4 = 양호 확인\n          if(xhr.status === 200){ //status 가 200일 경우 아래 process; 로 진행\n              result = process(tag, title, caption); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              console.log(\"결과 : \");\n              console.log(result);\n              return result;\n          }else{\n                alert(\"요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  xhr.send(null);\n  return result;\n}\n\nfunction process(tag, title, caption){  // 프로세스를 부름\n  var data = xhr.responseText;          // get은 Text 방식으로\n  var parseData = JSON.parse(data);     //객체화 : 배열 처리\n\n  var datasource = {};\n  var label = {};\n  var value = {};\n\n  var temp_key = \"\";\n  var temp_value = \"\";\n\n  label = {\"category\" : \"\"}\n  value = {\"serisename\" : \"test\", \"data\" : \"\" }\n\n  console.log(\"LABEL-01: \")\n  console.log(temp_key)\n  console.log(\"DATASET-01: \")\n  console.log(temp_value)\n  console.log(\"json original : \")\n  console.log(parseData)\n\n  try {\n    if(parseData.length < 366) {\n      for(var i = parseData.length-1; i > 0; i--) {\n        temp_key += parseData[i]._id + '|';\n        temp_value += parseData[i][tag] + '|';\n      };\n    }\n    else {\n      for(var index = parseData.length-1; index > parseData.length-366; index--) {\n        temp_key += parseData[index]._id + '|';\n        temp_value += parseData[index][tag] + '|';\n      };\n    }\n  } catch (e) {\n    return datasource;\n  }\n\n  temp_key = temp_key.slice(0, -1);\n  temp_value = temp_value.slice(0, -1);\n\n  label.category = temp_key;\n  value.data = temp_value;\n\n  datasource = {\n  \"chart\": {\n    \"caption\": title,\n    \"yaxisname\": \"Value\",\n    \"xaxisname\": \"Day\",\n    \"subcaption\": caption,\n    \"forceaxislimits\": \"1\",\n    \"pixelsperpoint\": \"0\",\n    \"pixelsperlabel\": \"30\",\n    \"compactdatamode\": \"1\",\n    \"theme\": \"fusion\",\n\n    \"showBorder\": \"0\",\n    \"showShadow\": \"0\",\n    //use3DLighting: \"0\",\n    \"bgColor\": \"#27293d\",\n    //bgAlpha: \"0\",\n    \"canvasBgAlpha\": \"0\",\n    \"plotBorderAlpha\": \"0\",\n\n    \"toolTipBgcolor\": \"#484E69\",\n    //toolTipPadding: \"7\",\n    \"tooltipBorderThickness\": \"0.7\",\n    \"toolTipColor\": \"#FDFDFD\",\n    \"baseFont\": \"Nunito Sans\",\n    \"baseFontSize\": \"10\",\n    \"baseFontColor\": \"#FDFDFD\",\n\n    \"showLegend\": \"1\",\n    \"legendShadow\": \"0\",\n    \"legendBorderAlpha\": \"0\",\n    \"drawCustomLegendIcon\": \"1\",\n    \"legendBgAlpha\": \"0\",\n\n    \"showAlternateHGridColor\": \"0\",\n    // chartTopMargin: \"-10\",\n    // canvasTopMargin: \"-10\",\n    // chartBottomMargin: \"20\",\n    // canvasBottomMargin: \"20\",\n\n    \"legendNumColumns\": \"1\",\n    \"legendPosition\": \"RIGHT\",\n    \"defaultCenterLabel\": \"Total <br> $214\",\n    \"centerLabel\": \"$label<br>$value\",\n    \"centerLabelBold\": \"1\",\n    \"centerLabelFontSize\": \"20\",\n    \"enableRotation\": \"0\",\n    \"transposeAnimation\": \"1\",\n    \"plotToolText\": \"<div>$label<br>$dataValue<div>\"\n  }\n  ,\n    \"categories\": [label],\n    \"dataset\": [value]\n};\n\nconsole.log(\"LABEL-02: \")\nconsole.log(temp_key)\n\nconsole.log(\"DATASET-02: \")\nconsole.log(temp_value)\n\nconsole.log(\"DATA-02: \")\nconsole.log(datasource)\n\nconsole.log(\"DATATYPE-02: \")\nconsole.log(temp_key.toString())\nconsole.log(typeof temp_key)\nconsole.log(temp_value.toString())\nconsole.log(typeof temp_value)\n\nconsole.log(\"DATATEXT-02: \")\nconsole.log(datasource)\n\nconsole.log(JSON.stringify(datasource))\nconsole.log(typeof datasource)\n\nreturn datasource;\n}\n\nmodule.exports = {\n  sleep,\n  renderZoomChart,\n};\n"]},"metadata":{},"sourceType":"module"}