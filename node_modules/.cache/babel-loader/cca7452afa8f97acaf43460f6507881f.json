{"ast":null,"code":"var result = [];\n\nfunction sleep(delay) {\n  var start = new Date().getTime();\n\n  while (new Date().getTime() < start + delay) {\n    ;\n  }\n}\n\nfunction renderRealTimeData(dataInfo) {\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 통신 상태가 4 = 양호 확인\n      if (xhr.status === 200) {\n        //status 가 200일 경우 아래 process; 로 진행\n        result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n\n        return result;\n      } else {\n        alert(title + \"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n      }\n    }\n  };\n\n  xhr.send(null);\n  return result;\n}","map":{"version":3,"sources":["/projcet/src/variables/charts_RealTime.js"],"names":["result","sleep","delay","start","Date","getTime","renderRealTimeData","dataInfo","xhr","XMLHttpRequest","open","url","onreadystatechange","readyState","status","process","in_value","out_value","title","caption","alert","send"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAb;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,SAAO,IAAID,IAAJ,GAAWC,OAAX,KAAuBF,KAAK,GAAGD,KAAtC;AAA4C;AAA5C;AACD;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV,CADmC,CACH;;AAChCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBC,GAAhB,EAAqB,KAArB,EAFmC,CAEN;;AAC7BH,EAAAA,GAAG,CAACI,kBAAJ,GAAyB,YAAU;AAC/B,QAAGJ,GAAG,CAACK,UAAJ,KAAmB,CAAtB,EAAwB;AAAQ;AAC5B,UAAGL,GAAG,CAACM,MAAJ,KAAe,GAAlB,EAAsB;AAAM;AACxBd,QAAAA,MAAM,GAAGe,OAAO,CAACC,QAAD,EAAWC,SAAX,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCX,GAAtC,CAAhB,CADkB,CAC0C;;AAC5D,eAAOR,MAAP;AACH,OAHD,MAGK;AACCoB,QAAAA,KAAK,CAACF,KAAK,GAAC,gBAAN,GAAyBV,GAAG,CAACM,MAA9B,CAAL,CADD,CAC6C;AACjD;AACJ;AACJ,GATD;;AAUAN,EAAAA,GAAG,CAACa,IAAJ,CAAS,IAAT;AACA,SAAOrB,MAAP;AACD","sourcesContent":["let result = []\n\nfunction sleep (delay) {\n  var start = new Date().getTime();\n  while (new Date().getTime() < start + delay);\n}\n\nfunction renderRealTimeData(dataInfo){\n  var xhr = new XMLHttpRequest(); // xhr은 XMLHttpRequest 객체(http를 통해 데이터를 받음)\n  xhr.open(\"get\", url, false); // tx합 json 데이터를 을 비동기 방식  / get 방식으로 읽어들임\n  xhr.onreadystatechange = function(){\n      if(xhr.readyState === 4){       // 통신 상태가 4 = 양호 확인\n          if(xhr.status === 200){     //status 가 200일 경우 아래 process; 로 진행\n              result = process(in_value, out_value, title, caption, xhr); // 프로세스를 부르겠다는 의미 >> 아래 function process로 진행\n              return result;\n          }else{\n                alert(title+\"그래프 데이터 요청 실패:\" + xhr.status); // if의 내용이 실패시 요청 실패 : 오류 메시지 출력\n          }\n      }\n  }\n  xhr.send(null);\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}